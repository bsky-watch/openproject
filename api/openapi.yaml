openapi: 3.1.0
info:
  description: |-
    You're looking at the current **stable** documentation of the OpenProject APIv3. If you're interested in the current
    development version, please go to [github.com/opf](https://github.com/opf/openproject/tree/dev/docs/api/apiv3).

    ## Introduction

    The documentation for the APIv3 is written according to the [OpenAPI 3.0 Specification](https://swagger.io/specification/).
    You can either view the static version of this documentation on the [website](https://www.openproject.org/docs/api/introduction/)
    or the interactive version, rendered with [OpenAPI Explorer](https://github.com/Rhosys/openapi-explorer/blob/main/README.md),
    in your OpenProject installation under `/api/docs`.
    In the latter you can try out the various API endpoints directly interacting with our OpenProject data.
    Moreover you can access the specification source itself under `/api/v3/spec.json` and `/api/v3/spec.yml`
    (e.g. [here](https://community.openproject.org/api/v3/spec.yml)).

    The APIv3 is a hypermedia REST API, a shorthand for "Hypermedia As The Engine Of Application State" (HATEOAS).
    This means that each endpoint of this API will have links to other resources or actions defined in the resulting body.

    These related resources and actions for any given resource will be context sensitive. For example, only actions that the
    authenticated user can take are being rendered. This can be used to dynamically identify actions that the user might take for any
    given response.

    As an example, if you fetch a work package through the [Work Package endpoint](https://www.openproject.org/docs/api/endpoints/work-packages/), the `update` link will only
    be present when the user you authenticated has been granted a permission to update the work package in the assigned project.

    ## HAL+JSON

    HAL is a simple format that gives a consistent and easy way to hyperlink between resources in your API.
    Read more in the following specification: [https://tools.ietf.org/html/draft-kelly-json-hal-08](https://tools.ietf.org/html/draft-kelly-json-hal-08)

    **OpenProject API implementation of HAL+JSON format** enriches JSON and introduces a few meta properties:

    - `_type` - specifies the type of the resource (e.g.: WorkPackage, Project)
    - `_links` - contains all related resource and action links available for the resource
    - `_embedded` - contains all embedded objects

    HAL does not guarantee that embedded resources are embedded in their full representation, they might as well be
    partially represented (e.g. some properties can be left out).
    However in this API you have the guarantee that whenever a resource is **embedded**, it is embedded in its **full representation**.

    ## API response structure

    All API responses contain a single HAL+JSON object, even collections of objects are technically represented by
    a single HAL+JSON object that itself contains its members. More details on collections can be found
    in the [Collections Section](https://www.openproject.org/docs/api/collections/).

    ## Authentication

    The API supports the following authentication schemes: OAuth2, session based authentication, and basic auth.

    Depending on the settings of the OpenProject instance many resources can be accessed without being authenticated.
    In case the instance requires authentication on all requests the client will receive an **HTTP 401** status code
    in response to any request.

    Otherwise unauthenticated clients have all the permissions of the anonymous user.

    ### Session-based Authentication

    This means you have to login to OpenProject via the Web-Interface to be authenticated in the API.
    This method is well-suited for clients acting within the browser, like the Angular-Client built into OpenProject.

    In this case, you always need to pass the HTTP header `X-Requested-With "XMLHttpRequest"` for authentication.

    ### API Key through Basic Auth

    Users can authenticate towards the API v3 using basic auth with the user name `apikey` (NOT your login) and the API key as the password.
    Users can find their API key on their account page.

    Example:

    ```shell
    API_KEY=2519132cdf62dcf5a66fd96394672079f9e9cad1
    curl -u apikey:$API_KEY https://community.openproject.org/api/v3/users/42
    ```

    ### OAuth2.0 authentication

    OpenProject allows authentication and authorization with OAuth2 with *Authorization code flow*, as well as *Client credentials* operation modes.

    To get started, you first need to register an application in the OpenProject OAuth administration section of your installation.
    This will save an entry for your application with a client unique identifier (`client_id`) and an accompanying secret key (`client_secret`).

    You can then use one the following guides to perform the supported OAuth 2.0 flows:

    - [Authorization code flow](https://oauth.net/2/grant-types/authorization-code)

    - [Authorization code flow with PKCE](https://doorkeeper.gitbook.io/guides/ruby-on-rails/pkce-flow), recommended for clients unable to keep the client_secret confidential.

    - [Client credentials](https://oauth.net/2/grant-types/client-credentials/) - Requires an application to be bound to an impersonating user for non-public access

    ### Why not username and password?

    The simplest way to do basic auth would be to use a user's username and password naturally.
    However, OpenProject already has supported API keys in the past for the API v2, though not through basic auth.

    Using **username and password** directly would have some advantages:

    * It is intuitive for the user who then just has to provide those just as they would when logging into OpenProject.

    * No extra logic for token management necessary.

    On the other hand using **API keys** has some advantages too, which is why we went for that:

    * If compromised while saved on an insecure client the user only has to regenerate the API key instead of changing their password, too.

    * They are naturally long and random which makes them invulnerable to dictionary attacks and harder to crack in general.

    Most importantly users may not actually have a password to begin with. Specifically when they have registered
    through an OpenID Connect provider.

    ## Cross-Origin Resource Sharing (CORS)

    By default, the OpenProject API is _not_ responding with any CORS headers.
    If you want to allow cross-domain AJAX calls against your OpenProject instance, you need to enable CORS headers being returned.

    Please see [our API settings documentation](https://www.openproject.org/docs/system-admin-guide/api-and-webhooks/) on
    how to selectively enable CORS.

    ## Allowed HTTP methods

    - `GET` - Get a single resource or collection of resources

    - `POST` - Create a new resource or perform

    - `PATCH` - Update a resource

    - `DELETE` - Delete a resource

    ## Compression

    Responses are compressed if requested by the client. Currently [gzip](https://www.gzip.org/) and [deflate](https://tools.ietf.org/html/rfc1951)
    are supported. The client signals the desired compression by setting the [`Accept-Encoding` header](https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.3).
    If no `Accept-Encoding` header is send, `Accept-Encoding: identity` is assumed which will result in the API responding uncompressed.
  title: OpenProject API V3 (Stable)
  version: "3"
servers:
- description: Edge QA instance
  url: https://qa.openproject-edge.com
- description: Staging instance
  url: https://qa.openproject-stage.com
- description: Community instance
  url: https://community.openproject.org
security:
- BasicAuth: []
tags:
- description: |-
    ## Links

    Links to other resources in the API are represented uniformly by so called link objects.

    ### Local Properties

    | Property  | Description                                                              | Type    | Required | Nullable | Default     |
    |:---------:| ------------------------------------------------------------------------ | ------- |:--------:|:--------:| ----------- |
    | href      | URL to the referenced resource (might be relative)                       | String  |    ✓     |    ✓     |             |
    | title     | Representative label for the resource                                    | String  |          |          |             |
    | templated | If true the `href` contains parts that need to be replaced by the client | Boolean |          |          | false       |
    | method    | The HTTP verb to use when requesting the resource                        | String  |          |          | GET         |
    | payload   | The payload to send in the request to achieve the desired result         | String  |          |          | unspecified |
    | identifier| An optional unique identifier to the link object                         | String  |          |          | unspecified |

    All link objects *must* contain the `href` property, though it might be `null`. Thus the following is a valid
    link object: `{ "href": null }`  whereas `{ }` is not a valid link object.
    The meaning of `"href": null` is that **no** resource is referenced.
    For example a work package without an assignee will still have an assignee link, but its `href` will be `null`.

    If a `title` is present, the client can display the title to the user when referring to the resource.

    Templated links are links that contain client replaceable parts. Replaceable parts are enclosed in braces. For example
    the link `api/v3/example/{id}` is not complete in itself, but the client needs to replace the string `{id}` itself.
    As of now the API does not indicate the valid replacement values.

    The `method` indicates which HTTP verb the client *must* use when following the link for the intended purpose.

    If a `payload` is specified, it needs to be sent as the body of the request to achieve the desired result (e.g. perform the
    action represented by the link). If no `payload` is specified, there is either no payload to send or a valid payload is not specified
    by the link object. A payload might also be templated slightly. If the `templated` property is true, a payload might contain replaceable parts
    in its strings (e.g. `{ "href": "/api/v3/examples/{example_id}" }`).

    Note: When writing links (e.g. during a `PATCH` operation) only changes to `href` are accepted.
    Changes to all other properties will be **silently ignored**.

    For resources invisible to the client (e.g. because of missing permissions), a link will contain
    the uri `urn:openproject-org:api:v3:undisclosed` instead of a url. This indicates the existence of a value
    without revealing the actual value. An example for this is the parent project. A project resource which itself might be
    visible to the client can have a reference to a parent project invisible to the same client. Revealing the existence of
    a parent over hiding has the benefit of allowing the client to make an informed decision of whether to keep the existing reference
    or updating it. Sending ‘{ "href": "urn:openproject-org:api:v3:undisclosed" }` for a resource will have the effect of keeping the
    original value. This is especially beneficial if the client creates and updates resources based on the payload object provided
    as part of a form as is recommended when interacting with the API.

    ## Errors

    In case of an error, the API will respond with an appropriate HTTP status code.
    For responses with an HTTP status of `4xx` and `5xx` the body will always contain a single error object.
    Error objects shall give the client additional details about the cause of an erroneous response.

    ### General errors

    * Error objects have their `_type` set to `Error`

    * The `errorIdentifier` serves as a unique (and machine readable) identifier for a specific error cause
        * There *may* be multiple possible error identifiers per HTTP status code
        * There *may* be multiple possible HTTP status codes per error identifier
        * The "List of Error Identifiers" defines the possible mappings between HTTP status and error identifier

    * The `message` contains a human readable concise message describing the error
        * It *optionally* includes specific information, for example which permission would have been needed to perform an action
        * It is localized depending on the users preferences
        * It *must not* include HTML or other kind of markup
        * Error messages form complete sentences including punctuation

    ##### Example

    ```json
    {
      "_type": "Error",
      "errorIdentifier": "urn:openproject-org:api:v3:errors:InternalServerError",
      "message": "An internal server error occurred. This is not your fault."
    }
    ```

    ### Embedded error information

    Errors might optionally contain embedded objects that contain further information.

    #### Error details

    Under the embedded key `details` there might be an object describing the error more verbosely. For example if the
    error affects a specific field, this field could be defined there.

    ##### Example

    ```json
    {
      "_type": "Error",
      "errorIdentifier": "urn:openproject-org:api:v3:examples:ExampleError",
      "message": "This is an example error.",
      "_embedded": {
        "details": {
          "_type": "ExampleErrorDetailInformation",
          "erroneousField": "subject"
        }
      }
    }
    ```

    #### Multiple error objects

    To ease implementation of basic clients it is guaranteed that the response body always only contains a single error object.
    However it is allowed that an error object *embeds* other error objects under the key `errors`, thereby aggregating them.

    The `errorIdentifier` of such an object is always `urn:openproject-org:api:v3:errors:MultipleErrors`. The message can either describe one of the
    embedded errors or simply state that multiple errors occurred.

    ##### Example

    ```json
    {
      "_type": "Error",
      "errorIdentifier": "urn:openproject-org:api:v3:errors:MultipleErrors",
      "message": "Multiple fields violated their constraints.",
      "_embedded": {
        "errors": [
          {
            "_type": "Error",
            "errorIdentifier": "urn:openproject-org:api:v3:errors:PropertyConstraintViolation",
            "...": "..."
          },
          {
            "_type": "Error",
            "errorIdentifier": "urn:openproject-org:api:v3:errors:PropertyConstraintViolation",
            "...": "..."
          }
        ]
      }
    }
    ```

    ### List of Error Identifiers

    * `urn:openproject-org:api:v3:errors:InvalidQuery` (**HTTP 400**)
    The query contained a value that did not match the servers expectation

    * `urn:openproject-org:api:v3:errors:InvalidRenderContext` (**HTTP 400**)
    The client specified a rendering context that does not exist

    * `urn:openproject-org:api:v3:errors:InvalidRequestBody` (**HTTP 400**)
    The format of the request body did not match the servers expectation

    * `urn:openproject-org:api:v3:errors:InvalidSignal` (**HTTP 400**)
    The client specified a select not available on the resource, e.g because the property/link does not exist on it.

    * `urn:openproject-org:api:v3:errors:InvalidUserStatusTransition` (**HTTP 400**)
    The client used an invalid transition in the attempt to change the status of a user account.

    * `urn:openproject-org:api:v3:errors:Unauthenticated` (**HTTP 401**)
    The client has to authenticate to access the requested resource.

    * `urn:openproject-org:api:v3:errors:MissingPermission` (**HTTP 403**)
    The client does not have the needed permissions to perform the requested action

    * `urn:openproject-org:api:v3:errors:NotFound` (**HTTP 404**)
    Default for HTTP 404 when no further information is available

    * `urn:openproject-org:api:v3:errors:UpdateConflict` (**HTTP 409**)
    The resource changed between GET-ing it and performing an update on it

    * `urn:openproject-org:api:v3:errors:TypeNotSupported` (**HTTP 415**)
    The request contained data in an unsupported media type (Content-Type)

    * `urn:openproject-org:api:v3:errors:PropertyConstraintViolation` (**HTTP 422**)
    The client tried to set a property to an invalid value

    * `urn:openproject-org:api:v3:errors:PropertyIsReadOnly` (**HTTP 422**)
    The client tried to set or change a property that is not writable

    * `urn:openproject-org:api:v3:errors:PropertyFormatError` (**HTTP 422**)
    A property value was provided in a format that the server does not understand or accept

    * `urn:openproject-org:api:v3:errors:PropertyMissingError` (**HTTP 422**)
    The request is syntactically correct, but is missing a property to perform the requested action

    * `urn:openproject-org:api:v3:errors:PropertyValueNotAvailableAnymore` (**HTTP 422**)
    An unchanged property needs to be changed, because other changes to the resource make it unavailable

    * `urn:openproject-org:api:v3:errors:ResourceTypeMismatch` (**HTTP 422**)
    A link to a resource of a specific type was expected, but the link to another type of resource was provided

    * `urn:openproject-org:api:v3:errors:InternalServerError` (**HTTP 500**)
    Default for HTTP 500 when no further information is available

    * `urn:openproject-org:api:v3:errors:MultipleErrors`
    Multiple errors occurred. See the embedded `errors` array for more details.

    ## Formattable Text

    OpenProject supports text formatting in Markdown. Properties that contain formattable text have a special representation in this API. In this specification their
    type is indicated as `Formattable`. Their representation contains the following properties:

    | Property | Description                                        | Type   | Example                            | Supported operations |
    |:--------:| -------------------------------------------------- | ------ | ---------------------------------- | -------------------- |
    | format   | Indicates the formatting language of the raw text  | String | markdown                           | READ                 |
    | raw      | The raw text, as entered by the user               | String | `I **am** formatted!`              | READ / WRITE         |
    | html     | The text converted to HTML according to the format | String | `I <strong>am</strong> formatted!` | READ                 |

    `format` can as of today have one of the following values:

    * `plain` - only basic formatting, e.g. inserting paragraphs and line breaks into HTML

    * `markdown` - formatting using Markdown

    * `custom` - There is no apparent formatting rule that transforms the raw version to HTML (only used for read only properties)

    Note that `raw` is the only property supporting the **write** operation. A property of type *Formattable* that
    is marked as **read and write**, will only accept changes to the `raw` property. Changes to `format` and `html` will be **silently ignored**.
    It is thus sufficient to solely provide the `raw` property for changes.

    If the *Formattable* is marked as **read only**, the `raw` attribute also becomes **read only**.

    ##### Example

    ```json
    {
      "format": "markdown",
      "raw": "I **am** formatted!",
      "html": "I <strong>am</strong> formatted!"
    }
    ```

    ## Dates, Times, Durations and Timestamps

    Representation of time related values in this API is done according to [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).
    In this specification the following terms will be used as type specifiers (e.g. in tables):

    * `Date` - refers to an ISO 8601 date, e.g. "2014-05-21"

    * `DateTime` - refers to an ISO 8601 combined date and time, optionally with milliseconds, e.g. "2014-05-21T13:37:00Z" or "2014-05-21T13:37:00.396Z"

    * `Duration` - refers to an ISO 8601 duration, e.g. "P1DT18H"

    * `Timestamp` - refers to an ISO 8601 combined date and time, e.g. "2014-05-21T13:37:00Z" or to an ISO 8601 duration, e.g. "P1DT18H".
    The following shorthand values are also being parsed as duration: "1d", "1w", "1m", "1y", "1y-2m", "-2y".
    It can also refer the following relative date keywords: `"oneDayAgo@HH:MM+HH:MM", "lastWorkingDay@HH:MM+HH:MM", "oneWeekAgo@HH:MM+HH:MM", "oneMonthAgo@HH:MM+HH:MM"`.
    The `"HH:MM"` part represents the zero padded hours and minutes, e.g. `"oneMonthAgo@21:00+00:00"`. The last "+HH:MM" part represents the timezone offset from UTC
    associated with the time, e.g. `"oneMonthAgo@21:00+02:00"` means a +2 hour timezone offset from UTC.
    The offset can be positive or negative e.g."oneDayAgo@01:00+01:00", "oneDayAgo@01:00-01:00".
    Values older than 1 day are accepted only with valid Enterprise Token available.

    ## Colors

    Colors are represented in RGB using hexadecimal notation as specified in [CSS Color Module Level 3](https://www.w3.org/TR/css3-color/).
    That is a `#` followed by either three or six hexadecimal digits.

    ##### Example

    ```
        red:   #ff0000 or #f00
        green: #00ff00 or #0f0
        black: #000000 or #000
        white: #ffffff or #fff
    ```

    ## Digests

    Digests (or Hashes) are one way functions that map data of arbitrary size to data of a fixed size.
    In OpenProject they are for example used to calculate checksums for (attachment) files.
    The checksum calculated depends on the hashed data and the algorithm used as hash function.

    Therefore all digests are represented in the following form:

    | Property  | Description                                        | Type   | Example                            |
    |:---------:| -------------------------------------------------- | ------ | ---------------------------------- |
    | algorithm | The algorithm used to compute the digest           | String | md5                                |
    | hash      | The calculated digest in hexadecimal notation      | String | 64c26a8403cd796ea4cf913cda2ee4a9   |

    ##### Example

    ```json
    {
      "algorithm": "md5",
      "hash": "64c26a8403cd796ea4cf913cda2ee4a9"
    }
    ```
  name: Basic Objects
- description: |-
    Whenever a client calls a resource that can return more than one element, it will receive a collection of elements.
    However as collections can become quite large, the API will **not** simply return a JSON array, but a special collection
    object that will contain the actual elements in its embedded property `elements`.

    Collections *may* be paginated, this means that a single response from the server will not contain all elements of the collection,
    but only a subset. In this case the client can issue further requests to retrieve the remaining elements.
    There are two ways to access the result pages of a paginated collection:

    * offset based pagination

    * cursor based pagination

    The available ways of pagination depend on the collection queried. Some collections feature no pagination at all, meaning they
    will always return all elements. Others might only offer one of the two pagination methods or both of them.

    A collection also carries meta information like the total count of elements in the collection or - in case of a paginated collection -
    the amount of elements returned in this response and action links to retrieve the remaining elements.

    ## Local Properties

    | Property | Description                                                     | Type    | Availability                |
    |:--------:| --------------------------------------------------------------- | ------- | --------------------------- |
    | total    | The total amount of elements available in the collection        | Integer | always                      |
    | pageSize | Amount of elements that a response will hold                    | Integer | when paginated              |
    | count    | Actual amount of elements in this response                      | Integer | always                      |
    | offset   | The page number that is requested from paginated collection     | Integer | when offset based available |
    | groups   | Summarized information about aggregation groups                 | Object  | when grouping               |
    | totalSums| Aggregations of supported values for elements of the collection | Object  | when showing sums           |

    ## Links

    | Link             | Description                                                              | Availability                |
    |:----------------:| ------------------------------------------------------------------------ | --------------------------- |
    | self             | Link to the current page in the collection                               | always                      |
    | changeSize       | Templated link to change the page size, might change relative position   | when paginated              |
    | jumpTo           | Templated link to jump to a specified offset                             | when offset based available |
    | nextByOffset     | Link to retrieve the following page of elements (offset based)           | when offset based available |
    | previousByOffset | Link to retrieve the preceding page of elements (offset based)           | when offset based available |
    | nextByCursor     | Link to retrieve the elements following the current page (cursor based)  | when cursor based available |
    | previousByCursor | Link to retrieve the elements preceding the current page (cursor based)  | when cursor based available |
  name: Collections
- description: |-
    Filter objects can be added to a number of endpoints in the OpenProject APIv3. With them, you can create powerful queries to endpoints to return the data that you want.

    They all share the following basic properties:

    - They consist of three items: A property to filter or a specific filter name, one or more values, and a filter operator that defines what query to produce with the given values

    - You can combine any number of distinct filters can be added to the endpoint definitions in this API documentation

    - A combination of filter objects are treated as an AND filter. OR filters are not yet possible in a single query.

    ## Filter syntax

    The filter syntax is a JSON object that can be passed as a GET parameter to the endpoints as an URL-encoded JSON string looks like the following:

    ```json5
    [
      { "<filter name>": { "operator": "<operator>", "values": [<value>, ...] } },
      // ...
    ]
    ```

    **Example**

    Filtering the work packages API endpoint for a work package that matches the subject or ID "12" and has a status with the ID=5.

    ```json
    [
      { "subjectOrId": { "operator": "**", "values": ["12"] } },
      { "status": { "operator": "=", "values": ["5"] } }
    ]
    ```

    With the above JSON stringified and URL-encoded, this can be added to the `/api/v3/work_packages` endpoint using the `filter` parameter to form the URL:

    ```
    https://community.openproject.org/api/v3/work_packages?filters=%5B%7B%22subjectOrId%22:%7B%22operator%22:%22**%22,%22values%22:%5B%2212%22%5D%7D%7D,%7B%22status%22:%7B%22operator%22:%22=%22,%22values%22:%5B%225%22%5D%7D%7D%5D
    ```

    ## Compression

    As the above can become quite long, especially if a lot of filter values are included, the API offers to wrap all query props into a zlib compressed and base64 encoded property (`eprops`).
    The property will then not only include the filter but the complete query props set (e.g. `pageSize`, `offset` and `columns`. So `eprops` is then a JSON object that is compressed and encoded.

    **Example**

    Instead of the request

    ```
    https://community.openproject.org/api/v3/work_packages?filters=[%7B%22subjectOrId%22:%7B%22operator%22:%22**%22,%22values%22:[%2212%22]%7D%7D,%7B%22status%22:%7B%22operator%22:%22=%22,%22values%22:[%225%22]%7D%7D]&pageSize=10&sortBy=[[%22id%22,%20%22asc%22]]
    ```

    Which in a non URL encoded style would be

    ```
    https://community.openproject.org/api/v3/work_packages?filters=[{"subjectOrId":{"operator":"**","values":["12"]}},{"status":{"operator":"=","values":["5"]}}]&pageSize=10&sortBy=[["id", "asc"]]
    ```

    All of the props can be put inside a json object

    ```json
    {
      "filters": "[{\"subjectOrId\":{\"operator\":\"**\",\"values\":[\"12\"]}},{\"status\":{\"operator\":\"=\",\"values\":[\"5\"]}}]",
      "sortBy": "[[\"id\",\"asc\"]]",
      "pageSize": 10
    }
    ```

    Please note, that all objects that have to be json (e.g `filters`) will be double encoded.

    That json object can then be compressed and encoded and the result sent over as the combined `eprops` parameter:

    ```
    https://community.openproject.org/api/v3/work_packages?eprops=eJxtjTELwjAUhP%2FLjSWDFVwCLt2cHBz7OsT2VSKFlLwXQUv%2Bu0lXHe%2B7%2B7gN%0As1%2BUo8Ci3wiS7k8e9RovE8EWEFaOTkMsidA0BEN4uSWxFNIT2iNhyNlUV50m%0A%2BaOdf6zTLg0wkBC1e9f3gv20L52Mpa%2Ft6h588x%2BGbQ%2F5C12YN%2BM%3D%0A
    ```

    ## Available filters

    The availability of filters depend on the endpoint you're querying and will be listed in each endpoint definition. For work packages, you can also [start using filters in the work packages module](https://community.openproject.org/projects/openproject/work_packages) to build your query and then simply copy the URL from your browser to get the resulting filter values and their operators.

    ## Available operators

    The following table is a list of all available operators. Not all endpoints and parameters support all values, but this list serves as a lookup table for identifying and using the operators. When building a filter object, you use the **symbol** listed below.

    | Symbol | Description of filtered properties                           | Values array contains      |
    | ------ | ------------------------------------------------------------ | -------------------------- |
    | `=`    | are equal to one of the given value(s)                       | At least one typed value   |
    | `&=`   | are containing all of the given value(s)                     | At least one typed value   |
    | `!`    | are not equal one of the given value(s)                      | At least one typed value   |
    | `>=`   | are greater or equal than the given value                    | One numerical value        |
    | `<=`   | are lesser or equal than the given value                     | One numerical value        |
    | `t-`   | are the given number of days in the past                     | 1 integer (days)           |
    | `t+`   | are the given number of days in the future                   | 1 integer (days)           |
    | `<t+`  | are *less than* the given number of days in the future       | 1 integer (days)           |
    | `>t+`  | are *more than* the given number of days in the future       | 1 integer (days)           |
    | `>t-`  | are *less than* the given number of days in the past         | 1 integer (days)           |
    | `<t-`  | are *more than* the given number of days in the past         | 1 integer (days)           |
    | `*`    | are not NULL                                                 | *nothing, values is empty* |
    | `!*`   | are NULL                                                     | *nothing, values is empty* |
    | `**`   | searches the given string in all string-based attributes     | One string value           |
    | `=d`   | are on the given date                                        | 1 ISO8601 date/datetime    |
    | `<>d`  | are between the two given dates.                             | 2 ISO8601 date/datetimes   |
    | `w`    | are in this week                                             | *nothing, values is empty* |
    | `t`    | are today                                                    | *nothing, values is empty* |
    | `~`    | are containing the given words (SQL LIKE) in that order      | At least one string value  |
    | `!~`   | are *not* containing the given words (SQL LIKE) in that order | At least one string value  |

    ​

    **Special operators for work packages**

    There are some additional operators only in use for work packages:

    | Symbol | Description of filtered properties         | Values array contains      |
    | ------ | ------------------------------------------ | -------------------------- |
    | `o`    | the status of the work package is *open*   | *nothing, values is empty* |
    | `c`    | the status of the work package is *closed* | *nothing, values is empty* |
    | `ow`   | the work packages have a manual sort order | *nothing, values is empty* |

    There are also relation filters for work packages that have the symbols `blocks/blocked` `children/parent` `follows/precedes` `duplicates/duplicated` `partof/includes` `relates` `requires/required` depending on the direction of the relation and take as value the work package ID that is the target node of the relation.

    **Special values for boolean filters**

    If you're using an operator that requires boolean values, please note that they need to be presented in this form:

    - `['f']` for false
    - `['t']` for true
  name: Filters
- description: |-
    Baseline comparisons allow to compare work packages or collections of work packages with respect to different points in time.

    This helps to answer questions like:

    - Which work packages match a certain set of filters today, which work packages match this set of filters at a certain earlier point in time?
    - Which properties of these work packages have changed with respect to these points in time?

    This tool can be used to analyze how a project plan has changed with respect to a certain baseline date.

    ## Requesting Work Packages for Different Timestamps

    The work-packages API supports a `timestamps` parameter to gather information about a single work package or a collection of work packages for several points in time.

    ```
    GET /api/v3/work_packages?timestamps=2022-01-01T00:00:00Z,PT0S
    ```

    ```
    GET /api/v3/work_packages/123?timestamps=2022-01-01T00:00:00Z,PT0S
    ```

    Each timestamp should be given as an [ISO-8601](https://en.wikipedia.org/wiki/ISO_8601) string, either an absolute date and time with timezone, e.g. `"2022-01-01T00:00:00Z"`, or a relative timestamp utilizing the [ISO-8601-Duration](https://en.wikipedia.org/wiki/ISO_8601#Durations) format, e.g. `"P-1Y"`, which is composed of an initial `"P"` for "Period", and a duration. `"P-1Y"` is interpreted as the relative timestamp "1 year ago".
    Furthermore, a set of predefined relative date keywords can also be passed for the timestamps: `"oneDayAgo@HH:MM+HH:MM", "lastWorkingDay@HH:MM+HH:MM", "oneWeekAgo@HH:MM+HH:MM", "oneMonthAgo@HH:MM+HH:MM"`. The `"HH:MM"` part represents the zero paded hours and minutes, e.g. `"oneMonthAgo@21:00+00:00"`. The last "+HH:MM" part represents the timezone offset from UTC associated with the time,
    e.g. `"oneMonthAgo@21:00+02:00"` means a +2 hour timezone offset from UTC. The offset can be positive or negative e.g."oneDayAgo@01:00+01:00", "oneDayAgo@01:00-01:00".

    Several timestamps should be passed as comma-separated list of these ISO-8601 strings to the `timestamps` parameter, e.g. `"2022-01-01T00:00:00Z,PT0S"`.

    The timestamps should be given in ascending temporal order, such that the first timestamp is the **baseline** timestamp, and the last timestamp is the **current** timestamp.

    Values older than 1 day are accepted only with valid Enterprise Token available.

    ## Response Overview

    When providing a `timestamps` parameter, the response has several additional properties:

    | Property                | Description                                                                            | Type             | Further information                                 |
    | ----------------------- | -------------------------------------------------------------------------------------- | ---------------- | --------------------------------------------------- |
    | `timestamp`             | The requested timestamp corresponding to the surrounding embedded object               | String           | Section *[Timestamps](#timestamps)* below           |
    | `attributesByTimestamp` | Attributes and meta information of the work packages at the respective timestamps      | Array of Objects | Section *[Attributes](#attributes)* below           |
    | `matchesFilters`        | Marks whether the work package matches the filter criteria at the respective timestamp | Bool             | Section *[Filter Matching](#filter-matching)* below |
    | `exists`                | Marks whether the work package exists at the respective timestamp                      | Bool | Section *[Existence](#existence)* below             |

    Each work-package element has the `attributesByTimestamp` as `_embedded` section.

    The properties `timestamp`, `matchesFilters`, and `exists` are wrapped in a `_meta` section, which is added to each work-package element as well as to each element of the `attributesByTimestamp` array.

    ```json5
    // /api/v3/work_packages?timestamps=2022-01-01T00:00:00Z,PT0S
    {
      "_type": "WorkPackageCollection",
      "total": 1,
      "_embedded": {
        "elements": [
          {
            "_type": "WorkPackage",
            "id": 1528,
            "subject": "Current subject of the work package",
            // other attributes ...,
            "_links": {
              "self": {
                "href": "/api/v3/work_packages/1528?timestamps=2022-01-01T00:00:00Z,2023-03-01T01:37:10Z"
              }
            },
            "_meta": {
              "matchesFilters": true,
              "exists": true,
              "timestamp": "PT0S"
            },
            "_embedded": {
              "attributesByTimestamp": [
                {
                  "subject": "Original subject of the work package",
                  "_meta": {
                    "matchesFilters": true,
                    "exists": true,
                    "timestamp": "2022-01-01T00:00:00Z"
                  },
                  "_links": {
                    "self": {
                      "href": "/api/v3/work_packages/1528?timestamps=2022-01-01T00:00:00Z"
                    }
                  },
                },
                {
                  "_meta": {
                    "matchesFilters": true,
                    "exists": true,
                    "timestamp": "PT0S"
                  },
                  "_links": {
                    "self": {
                      "href": "/api/v3/work_packages/1528?timestamps=2023-03-01T01:37:10Z"
                    }
                  }
                }
              ],
            }
          }
        ]
      },
      "_links": {
        "self": {
          "href": "/api/v3/work_packages?timestamps=2022-01-01T00:00:00Z,2023-03-01T01:37:10Z"
        }
      }
    }
    ```

    ## Meta Information

    Each `_meta` section describes the surrounding object of the meta section, which may be the main work-package object, or an attributes object within the `attributesByTimestamp` array.

    Note that the `_meta` information of the most current (rightmost) timestamp is redundant: It is given as `_meta` section of the main work-package object as well as `_meta` section of the last object within the `attributesByTimestamp` array.

    ## Timestamps

    Each `_meta` section contains a `timestamp` property, which is to the requested `timestamp` corresponding to the object the `_meta` section describes.

    The `timestamp` has the same ISO-8601 format as in the `timestamps` request parameter and preserves the absolute or relative character of the requested timestamp.

    Furthermore, each self link corresponding to an earlier point in time has also a `timestamps` request parameter added to it, which is converted to an absolute ISO-8601 string at the execution time of the query. (in the above example, `PT0S` was converted to `2023-03-01T01:37:10Z` as the query was executed at that time.)

    ## Attributes

    To read out the attributes of the work packages at the current timestamp (the last of the given `timestamps`), check the attributes of the work-package objects. To read out the attributes of the work packages at the other given timestamps, check the attributes within `"_embedded"` section `"attributesAtTimestamp"`.

    To save bandwidth, only attributes that differ from the ones in the main work-package object are included in the `"attributesByTimestamp"`. Attributes with the same value as in the main work-package object are not included in the `"attributesByTimestamp"` section.

    ```json5
    // /api/v3/work_packages?timestamps=2022-01-01T00:00:00Z,PT0S
    {
      "_type": "WorkPackageCollection",
      "_embedded": {
        "elements": [
          {
            "_type": "WorkPackage",
            "subject": "Current subject of the work package",
            "_meta": {
              "timestamp": "PT0S"
            },
            "_embedded": {
              "attributesByTimestamp": [
                {
                  "subject": "Original subject of the work package",
                  "_meta": {
                    "timestamp": "2022-01-01T00:00:00Z"
                  }
                },
                {
                  "_meta": {
                    "timestamp": "PT0S"
                  }
                }
              ],
            }
          }
        ]
      }
    }
    ```

    In the above example, the last of the given `timestamps` is `"PT0S"` (which means 0 seconds ago, i.e. now). The work-package attributes at this time are included in the main work-package object. The `"subject"` of the work package at the timestamp `"PT0S"` (now) is `"Current subject of the work package"`.

    The `"_embedded"` section `"attributesByTimestamp"` has an array entry for the timestamp `"PT0S"`, which is the last array entry. Because the value of the `"subject"` is the same as up in the main work-package object, the `"subject"` attribute is left out in the `"attributesByTimestamp"` for the timestamp `"PT0S"`. The `"subject"` of the work package at the timestamp `"PT0S"` (now) is `"Current subject of the work package"`.

    The `"_embedded"` section `"attributesByTimestamp"` has an array entry for the baseline timestamp `"2022-01-01T00:00:00Z"`, which is the first array entry. The `"subject"` of the work package at the timestamp `"2022-01-01T00:00:00Z"` is `"Original subject of the work package"`. It is included in the  `"attributesByTimestamp"` for the timestamp `"2022-01-01T00:00:00Z"` because it differs from the `"subject"` in the main work-package object, which is `"Current subject of the work package"`.

    ## Filter Matching

    The work-packages API supports filtering the query results by one or several search criteria. See: [Filters](../filters)

    To find out whether a work package matches the given set of filter criteria at a certain timestamp, check the `"matchesFilters"` property in the `"_meta"` section for that timestamp:

    ```json5
    // /api/v3/work_packages?filters=...&timestamps=2022-01-01T00:00:00Z,PT0S
    {
      "_type": "WorkPackageCollection",
      "_embedded": {
        "elements": [
          {
            "_type": "WorkPackage",
            "_meta": {
              "matchesFilters": true,
              "timestamp": "PT0S"
            },
            "_embedded": {
              "attributesByTimestamp": [
                {
                  "_meta": {
                    "matchesFilters": false,
                    "timestamp": "2022-01-01T00:00:00Z"
                  }
                },
                {
                  "_meta": {
                    "matchesFilters": true,
                    "timestamp": "PT0S"
                  }
                }
              ],
            }
          }
        ]
      }
    }
    ```

    In the above example, the work package matches the filter criteria at the timestamp `"PT0S"`, but does not match the filter criteria at the timestamp `"2022-01-01T00:00:00Z"`.

    In another example, it might be the other way around: The work package could match the filter criteria (`"matchesFilters": true`) at the baseline timestamp, but not match the filter criteria anymore (`"matchesFilters": false`) at the current timestamp.

    The work package is included in the returned collection if it matches the filter criteria at least at one of the requested timestamps.

    ## Existence

    To find out whether a work package has existed at a requested timestamp, check the `"exists"` property in the `"_meta"` section for that timestamp:

    ```json5
    // /api/v3/work_packages?timestamps=2022-01-01T00:00:00Z,PT0S
    {
      "_type": "WorkPackageCollection",
      "_embedded": {
        "elements": [
          {
            "_type": "WorkPackage",
            "_meta": {
              "exists": true,
              "timestamp": "PT0S"
            },
            "_embedded": {
              "attributesByTimestamp": [
                {
                  "_meta": {
                    "exists": false,
                    "timestamp": "2022-01-01T00:00:00Z"
                  }
                },
                {
                  "_meta": {
                    "exists": true,
                    "timestamp": "PT0S"
                  }
                }
              ],
            }
          }
        ]
      }
    }
    ```

    In the above example, the work package exists at the timestamp `"PT0S"`, but has not existed at the timestamp `"2022-01-01T00:00:00Z"`.

    In another example, it might be the other way around: The work package could exist (`"exists": true`) at the baseline time, but could have been deleted after that time such that it does not exist (`"exists": false`) at the current time. Please note, however, that OpenProject does not support [soft deletion](https://community.openproject.org/projects/openproject/work_packages/40015), yet. Currently, when a work package is deleted, its history is deleted as well, so that its history cannot be retrieved through the baseline API anymore.

    The work package is included in the returned collection if it has existed at least at one of the requested timestamps.

    ## Usage Example

    In this example ruby script, the work packages are retrieved at a baseline date and in their current state. Then the subject of the first work package is compared with respect to the baseline date and the current state.

    ```ruby
    # Define timestamps
    baseline_timestamp = "2022-01-01T00:00:00Z"
    current_timestamp = "PT0S"
    timestamps = [baseline_timestamp, current_timestamp]

    # Retrieve work packages
    url = URI("https://community.openproject.org/api/v3/work_packages?timestamps=#{timestamps.join(',')}")
    response = JSON.parse(Net::HTTP.get(url), object_class: OpenStruct)
    work_packages = response.dig("_embedded", "elements")

    # Extract differing baseline attributes
    work_package = work_packages.first
    baseline_attributes = work_package.dig("_embedded", "attributesByTimestamp").first

    # Compare baseline state to current state of the work package
    if baseline_attributes.subject.present? and baseline_attributes.subject != work_package.subject
      puts "The subject of the work package has changed."
      puts "Subject at the baseline time: #{baseline_attributes.subject}"
      puts "Current subject:              #{work_package.subject}"
    end

    # Check existence
    puts "The work package did exist at the baseline time." if baseline_attributes.dig("_meta", "exists")
    puts "The work package exists at the current time." if work_package.dig("_meta", "exists")

    # Check filter matching
    puts "The work package matches the query filters at the baseline time." if baseline_attributes.dig("_meta", "matchesFilters")
    puts "The work package matches the query filters at the current time." if work_package.dig("_meta", "matchesFilters")
    ```
  name: Baseline Comparisons
- description: |-
    This API provides forms as a concept to aid in editing or creating resources. The goal of forms is to:

    * make writable properties of a resource discoverable

    * show to which values a property can be set

    * validate changes to a resource and indicate validation errors

    These benefits aside, a client can freely choose to immediately edit a resource without prior validation by a form.
    In the case of an invalid request the edit will fail and return appropriate errors nevertheless.

    A form is associated to a single resource and aids in performing changes on that resource.
    When posting to a form endpoint with an empty request body or an empty JSON object,
    you will receive an initial form for the associated resource.
    Subsequent calls to the form should contain a single JSON object as described by the form.

    ## Actions

    | Link                | Description                                                           | Condition                        |
    |:-------------------:| --------------------------------------------------------------------- | -------------------------------- |
    | validate            | Validate changes, show errors and allowed values for changed resource |                                  |
    | commit              | Actually perform changes to the resource                              | form content is valid            |
    | previewMarkup       | Post markup (e.g. markdown) here to receive an HTML-rendered response |                                  |

    ## Linked Properties

    | Link                | Description                                      | Type          | Nullable | Supported operations |
    |:-------------------:| ------------------------------------------------ | ------------- | -------- | -------------------- |
    | self                | This form                                        | Form          |          | READ                 |

    ## Embedded Properties:

    Apart from the linked properties, forms contain always three other embedded properties:

    * `payload`

    * `schema`

    * `validationErrors`

    Their purpose is explained below.

    ### Payload

    The payload contains an edited version of the resource that will be modified when committing the form.
    This representation contains all writable properties of the resource and reflects all changes that the latest call to **validate** included,
    thereby acting as a preview for the changes.

    In case the client tries to set the value to something invalid, the invalid change is also reflected here. However a validation error (see below)
    indicates that a commit of this payload would fail.

    It might happen that setting one property affects the allowed values for another property. Thus by changing a property A
    the current value of another property B might become invalid. If the client did not yet touch the value of B, the payload will
    contain a default value for that property. Nevertheless the client will also receive an appropriate validation error for value B.

    The content of this element *can* be used as a template for the request body of a call to **validate** or **commit**.

    A call to **validate** and **commit** does not need to include all properties that were defined in the `payload` section.
    It is only necessary to include the properties that you want to change, as well as the `lockVersion` if one is present.
    However you *may* include all the properties sent in the `payload` section.

    ### Schema

    The schema embedded in a form is a normal [schema describing the underlying resource](https://www.openproject.org/docs/api/endpoints/schemas/).
    However, the embedded schema can change with each revalidation of the form.
    For example it might be possible, that changing the type of a work package affects its available properties,
    as well as possible values for certain properties.
    As this makes the embedded schema very dynamic, it is not included as a static link.

    ### Validation Errors

    Like a schema the validation errors build a dictionary where the key is a property name.
    Each value is an error object that indicates the error that occurred validating the corresponding property.
    There are only key value pairs for properties that failed validation, the element is empty if all validations succeeded.

    However note that even in the case of validation errors, the response you receive from the form endpoint will be an HTTP 200.
    That is because the main purpose of a form is helping the client to sort out validation errors.

    ### Meta object

    Form resources may have an additional `_meta` object that contains parameters to be sent together with the resource,
    but that do not belong to the resource itself. For example, parameters on if and how to send notifications for the action
    performed with the API request can be sent.

    Each individual endpoint will describe their meta properties, if available.
  name: Forms
- description: |-
    Some endpoints, especially those returning `Collection` resources, support signaling desired properties. By signaling, the client
    can convey to the server the properties to include in a response.

    Currently only `select` is supported which allows to specify the subset of properties a client is interested in. The benefit of using `select`
    is reduced response time. Other signaling, especially expanding the embedded resources to include as well over multiple layers of embedding
    are in consideration to be implemented (probably named `embed`) but as of now, they are not supported. Please also see
    [the specification for OData that inspired this feature](https://www.odata.org/documentation/odata-version-2-0/uri-conventions/).

    For example, a resource `/api/v3/bogus` that without signaling returns:

    ```json
      {
        "_type": "Collection"
        "count": 20,
        "total": 554,
        "_embedded": {
          "elements": [
            {
              "id": 1,
              "name": "Some name"
            },
            {
              "id": 9,
              "name": "Another name"
            }
          ]
        },
        "_links": {
          "self": {
            "href": "/api/v3/bogus",
            "title": "A bogus collection"
          },
          "bar": {
            "href": "/api/v3/bar",
            "title": "Foobar"
          }
        }
      }
    ```

    can via signaling `/api/v3/bogus?select=total,elements/name,bar` be instructed to return:

    ```json
      {
        "total": 554,
        "_embedded": {
          "elements": [
            {
              "name": "Some name"
            },
            {
              "name": "Another name"
            }
          ]
        },
        "_links": {
          "bar": {
            "href": "/api/v3/bar",
            "title": "Foobar"
          }
        }
      }
    ```

    The `select` query property is a comma separated list of the properties to include, e.g. `select=total,elements/name,bar`.
    The API also accepts alternative styles of writing like `select=["total","elements/name","bar"]`. Each individual item in the list
    is the path inside the resource. So while `total` refers to the property on the top level, `elements/name` refers to the property `name` within
    the collection of `elements`. The full path has to be provided for every property, e.g. `select=elements/name,elements/id`.
    The order of the list has no impact on the selection. There is also a wildcard `*` which will result in every property on that level to be selected.
    To select every property in the example above, the client would have to signal `select=*,elements/*`.

    Please note that the nesting into `_embedded` and `_links` is not included in the query prop `select` as
    links in the context of HAL can be considered properties of the resource just the same as unnested properties and forcing
    clients to write the full nesting would not increase clarity.

    Link properties are considered to be a single value that cannot be split up further. Every property within a link will be returned
    if the link is signaled to be selected.

    The `select` signaling flag has been introduced for performance reasons. Not every end point supports it and those that do oftentimes only
    allow a subset of their resource's properties to be selected. End points supporting the `select` query prop are documented accordingly.
  name: Signaling
- description: |-
    An action is a change one can trigger within the OpenProject instance.
    This could be creating a work package, exporting work packages or updating a user.
    An action can also be something where the user is able to be involved so where the user is in the passive role
    e.g. when being assigned a work package.

    A capability combines an action with a context and a principal. It thus communicates, which principal can carry out
    (or be passively involved) which action within a certain context. E.g. a user might have the capability of creating work packages
    within a project.

    In other words, an action is independent of a principal and context while a capability is
    a relation between an action, the context and the principal.

    The actions are most of the time derived from permissions which can be configured via the administrative UI where an administrator
    selects from a set of permissions to be granted per role. But there are other cases, e.g. in order to become assignee or responsible of a work package, a user has
    to have a role which allows having work packages assigned which is not a permission.

    Even though user might have a capability, it might still not be possible to carry out the action
    because some other requirement is not met.
    E.g. a user might have the capability to update work packages, but if a particular work package is
    in a readonly state, that work package cannot be updated.

    *Only a small set of actions that actually already exist in the system are currently exposed via
    the api. They will be added over time.*

    ## Action

    An action describes what can be carried out within the application. Until an action becomes assigned,
    which turns it into a capability, it remains in the state of "could be".

    ### Linked Properties

    |  Link               | Description                              | Type             | Constraints                                                    | Supported operations |
    |:-------------------:|----------------------------------------- | -------------    | -------------------------------------------------------------- | -------------------- |
    | self                | The action                               | Action           | not null                                                       | READ                 |

    ### Local Properties

    | Property    | Description                                                                             | Type        | Constraints    | Supported operations |
    | :---------: | ---------------------------------------------                                           | ----------- | -----------    | -------------------- |
    | id          | Identifier for the action                                                               | String      | Not null       | READ                 |
    | name        | A human readable name for the action *Not yet implemented*                              | String      | Not null       | READ                 |
    | description | Describes what can be done by principals having that action   *Not yet implemented*     | String      | Not null       | READ                 |
    | modules     | Clusters the actions into groups into which they belong logically *Not yet implemented* | []String    | Not null       | READ                 |

    ## Capabilities

    Actions can be assigned to a principal by assigning roles to that principal. E.g. a user might receive the 'work_packages/show'
    action by having a role called reader assigned within a project.

    Whenever a principal is assigned an action within a context, the principal has additional capabilities.

    Exactly which actions can be gained by having a role assigned depends on the configuration of that role.
    The configuration is adaptable by admins within the administration of the OpenProject instance.

    ### Linked Properties

    |  Link               | Description                                                                                           | Type             | Constraints     | Supported operations |
    |-------------------- |-----------------------------------------                                                              | -------------    | --------------- | -------------------- |
    | self                | The capability                                                                                        |                  |                 |                      |
    | action              | The action the principal is granted                                                                   | Action           | not null        | READ                 |
    | context             | The context the principal has this the action in. This is typically a project or the global context.  | Project or null  |                 | READ                 |
    | principal           | The principal being allowed the action.                                                               | Action           | not null        | READ                 |

    ### Local Properties

    | Property    | Description                                   | Type        | Constraints        | Supported operations |
    | :---------: | --------------------------------------------- | ----------- | -----------        | -------------------- |
    | id          | Identifier for the action                     | String      | Not null           | READ                 |
    | name        | A human readable name for the action          | String      | Not null           | READ                 |
  name: Actions & Capabilities
- description: |-
    ## Local Properties

    | Property    | Description      | Type                 | Constraints | Supported operations |
    | :---------: | -------------    | ----                 | ----------- | -------------------- |
    | id          | Activity id      | Integer              | x > 0       | READ                 |
    | version     | Activity version | Integer              | x > 0       | READ                 |
    | comment     |                  | Formattable          |             | READ / WRITE         |
    | details     |                  | Array of Formattable |             | READ                 |
    | createdAt   | Time of creation | DateTime             |             | READ                 |
    | updatedAt   | Time of update   | DateTime             |             | READ                 |

    Activity can be either _type `Activity` or _type `Activity::Comment`.
  name: Activities
- description: |-
    Attachments are files that were uploaded to OpenProject. Each attachment belongs to a single
    container (e.g. a work package or a board message).

    ## Actions

    | Link                | Description                                                          | Condition                                                                                          |
    |:-------------------:|----------------------------------------------------------------------| --------------------------------------------                                                       |
    | delete              | Deletes this attachment                                              | **Permission**: edit on attachment container or being the author for attachments without container |

    ## Linked Properties

    |  Link            | Description                                         | Type          | Constraints | Supported operations |
    |:----------------:| --------------------------------------------------- | ------------- | ----------- | -------------------- |
    | self             | This attachment                                     | Attachment    | not null    | READ                 |
    | container        | The object (e.g. WorkPackage) housing the attachment| Anything      | not null    | READ                 |
    | author           | The user who uploaded the attachment                | User          | not null    | READ                 |
    | downloadLocation | Direct download link to the attachment              | -             | not null    | READ                 |

    ## Local Properties

    | Property     | Description                                     | Type        | Constraints | Supported operations |
    |:------------:| ----------------------------------------------- | ----------- | ----------- | -------------------- |
    | id           | Attachment's id                                 | Integer     | x > 0       | READ                 |
    | title        | The name of the file                            | String      | not null    | READ                 |
    | fileName     | The name of the uploaded file                   | String      | not null    | READ                 |
    | fileSize     | The size of the uploaded file in Bytes          | Integer     | x >= 0      | READ                 |
    | description  | A user provided description of the file         | Formattable | not null    | READ                 |
    | contentType  | The files MIME-Type as determined by the server | String      | not null    | READ                 |
    | digest       | A checksum for the files content                | Digest      | not null    | READ                 |
    | createdAt    | Time of creation                                | DateTime    | not null    | READ                 |
  name: Attachments
- description: |-
    *Note: Budgets are currently only implemented as a stub. Further properties of budgets might be added at a future date, however they will require the view budget permission to be displayed.*

    ## Linked Properties:

    |  Link     | Description                                 | Type          | Constraints           | Supported operations |
    |:---------:|-------------------------------------------- | ------------- | --------------------- | -------------------- |
    | self      | This budget                                 | Budget        | not null              | READ                 |

    ## Properties

    | Property    | Description                                 | Type        | Constraints | Supported operations | Condition                   |
    | :---------: | ------------------------------------------- | ----------- | ----------- | -------------------- | --------------------------- |
    | id          | Budget id                                   | Integer     | x > 0       | READ                 |                             |
    | subject     | Budget name                                 | String      | not empty   | READ                 |                             |
  name: Budgets
- description: |-
    ## Linked Properties

    |  Link           | Description                                         | Type          | Constraints | Supported operations |
    |:---------------:| --------------------------------------------------- | ------------- | ----------- | -------------------- |
    | self            | This category                                       | Category      | not null    | READ                 |
    | project         | The project of this category                        | Project       | not null    | READ                 |
    | defaultAssignee | Default assignee for work packages of this category | User          |             | READ                 |

    ## Local Properties

    | Property   | Description   | Type    | Constraints | Supported operations |
    | :--------: | ------------- | ------- | ----------- | -------------------- |
    | id         | Category id   | Integer | x > 0       | READ                 |
    | name       | Category name | String  |             | READ                 |
  name: Categories
- description: |-
    The configuration endpoint allows to read certain configuration parameters of the OpenProject instance.
    Note that there is no 1:1 relationship between this endpoint and the settings an administrator has at hand to modify the behaviour
    of the application via configuration.yml or ENV variables.

    For now this endpoint will only allow access to settings deemed useful for a client to know in general.

    As clients might rely on the combination of both, the system settings as well as the current user's preferences, the resource
    embeds the current user's preferences so client can fetch both with one request.

    | Link                | Description                                      | Type            | Nullable | Supported operations |
    |:-------------------:| ------------------------------------------------ | -------------   | -------- | -------------------- |
    | self                | The configuration                                | Configuration   |          | READ                 |
    | userPreferences     | The preferences of the current user              | UserPreferences |          | READ                 |

    ## Local Properties

    | Property                  | Description                                        | Type       | Condition         | Supported operations |
    | :-----------------------: | -------------------------------------------------- | ---------- | ----------------- | -------------------- |
    | maximumAttachmentFileSize | The maximum allowed size of an attachment in Bytes | Integer    |                   | READ                 |
    | perPageOptions            | Page size steps to be offered in paginated list UI | Integer[]  |                   | READ                 |
    | hostName                  | The host name configured for the system            | String     |                   | READ                 |
    | activeFeatureFlags        | The list of all feature flags that are active      | String[]   |                   | READ                 |
  name: Configuration
- description: |-
    Custom actions are a preconfigured set of changes that are applied to a work package.

    Currently, this resource is a stub. The conditions and changes defined for the custom action are not yet present in the resource.

    ## Actions

    | Link                | Description                                                          | Condition                                                                                                                        |
    |:-------------------:|----------------------------------------------------------------------| ---------------------------------------                                                                                          |
    | executeImmediately  | Apply the action to a work package                                   |

    ## Linked Properties

    | Property         | Description                                               | Type                  | Constraints                      | Supported operations |
    | :--------------: | ------------------------------------------------------    | -----------           | -------------------------------- | -------------------- |
    | self             | This custom action                                        | CustomAction          | not null                         | READ                 |

    ## Local Properties

    | Property         | Description                                              | Type                  | Constraints  | Supported operations |
    | :--------------: | ------------------------------------------------------   | -----------           | ------------ | -------------------- |
    | id               | Custom action id                                         | Integer               | x > 0        | READ                 |
    | name             | The user selected name of the custom action              | String                |              | READ                 |
    | description      | A text describing the custom action                      | String                |              | READ                 |
  name: Custom actions
- description: |-
    ## Linked Properties

    |  Link         | Description               | Type          | Constraints | Supported operations |
    |:-------------:|-------------------------- | ------------- | ----------- | -------------------- |
    | self          | This custom option        | CustomOption  | not null    | READ                 |

    ## Local Properties

    | Property         | Description                                    | Type     | Constraints | Supported operations |
    |:----------------:| ---------------------------------------------- | -------- | ----------- | -------------------- |
    | id               | The identifier                                 | Integer  |             | READ                 |
    | value            | The value defined for this custom option       | String   |             | READ                 |

    custom options are options of list custom fields.
  name: Custom Options
- description: |-
    A document is a file containing a list of attachments.

    *Please note, that the endpoint is only a stub for now.*

    ## Actions

    None yet

    ## Linked Properties

    | Link          | Description                               | Type           | Constraints           | Supported operations | Condition                                 |
    | :-----------: | -------------------------------------     | -------------  | --------------------- | -------------------- | ----------------------------------------- |
    | self          | This document                             | Document       | not null              | READ                 |                                           |
    | project       | The project the document is in            | Project        | not null              | READ / WRITE         |                                           |
    | attachments   | The attachments belonging to the document | []Attachment   | not null              | READ / WRITE         |                                           |

    ## Local Properties

    | Property     | Description                                               | Type     | Constraints                                          | Supported operations | Condition                                                   |
    | :----------: | --------------------------------------------------------- | -------- | ---------------------------------------------------- | -------------------- | ----------------------------------------------------------- |
    | id           | Document's id                                             | Integer  | x > 0                                                | READ                 |                                                             |
    | title        | The title chosen for the collection of documents          | String   | max 60 characters                                    | READ                 |                                                             |
    | description  | A text describing the documents                           | String   |                                                      | READ                 |                                                             |
    | createdAt    | The time the document was created at                      | DateTime |                                                      | READ                 |                                                             |
  name: Documents
- description: TBD
  name: File links
- description: |-
    A grid is a layout for a page or a part of the page of the OpenProject application. It defines the structure (number of rows and number of columns) as well as the contents of the page.

    The contents is defined by `GridWidget`s. While a `GridWidget` is it's own type, it is not a resource in it's own right as it is an intrinsic part of a `Grid`.

    Depending on what page a grid is defined for, different widgets may be eligible to be placed on the grid. The page might also define the permissions needed for accessing, creating or modifying the grid.

    Currently, the following pages employ grids:

    + /my/page: The my page every user has. Only a user can access or modify their "my page".

    *The delete action is not yet supported*

    ## Actions

    | Link                | Description                                                          | Condition                                                                                           |
    |:-------------------:| -------------------------------------------------------------------- | ----------------------------------------------------------------                                    |
    | updateImmediately   | Directly perform edits on this grid                                  | **Permission**: depends on the page the grid is defined for                                         |
    | update              | Validate edits on the grid via a form resource before committing     | **Permission**: depends on the page the grid is defined for                                         |

    ## Linked Properties

    | Link          | Description                                                       | Type                | Constraints           | Supported operations | Condition                                     |
    | :-----------: | --------------------------------------------------------------    | -------------       | --------------------- | -------------------- | -----------------------------------------     |
    | self          | This grid                                                         | Grid                | not null              | READ                 |                                               |
    | page          | The url of the page the grid is defined for                       | url                 | not null              | READ / WRITE         | The page cannot be changed after the creation |

    ## Local Properties

    | Property     | Description                                               | Type          | Constraints                                          | Supported operations | Condition                   |
    | :----------: | --------------------------------------------------------- | --------      | ---------------------------------------------------- | -------------------- | --------------              |
    | id           | Grid's id                                                 | Integer       | x > 0                                                | READ                 |                             |
    | rowCount     | The number of rows the grid has                           | Integer       | x > 0                                                | READ/WRITE           |                             |
    | columnCount  | The number of columns the grid has                        | Integer       | x > 0                                                | READ/WRITE           |                             |
    | widgets      | The set of `GridWidget`s selected for the grid            | []GridWidget  |                                                      | READ/WRITE           | The widgets cannot overlap  |
    | createdAt    | The time the grid was created                             | DateTime      |                                                      | READ                 |                             |
    | updatedAt    | The time the grid was last updated                        | DateTime      |                                                      | READ                 |                             |

    ## GridWidget Properties

    | Property     | Description                                                                        | Type     | Constraints                                          | Supported operations | Condition      |
    | :----------: | ---------------------------------------------------------                          | -------- | ---------------------------------------------------- | -------------------- | -------------- |
    | identifier   | The kind of widget                                                                 | String   | not null                                             | READ/WRITE           |                |
    | startRow     | The row the widget starts at (1 based)                                             | Integer  | x > 0, x < rowCount of the grid, x < endRow          | READ/WRITE           |                |
    | endRow       | The row the widget ends. The widget's area does not include the row itself.        | Integer  | x > 0, x <= rowCount of the grid, x > startRow       | READ/WRITE           |                |
    | startColumn  | The column the widget starts at (1 based)                                          | Integer  | x > 0, x < columnCount of the grid, x < endColumn    | READ/WRITE           |                |
    | endColumn    | The column the widget ends. The widget's area does not include the column itself.  | Integer  | x > 0, x <= columnCount of the grid, x > startColumn | READ/WRITE           |                |
    | options      | An options hash of values customizable by the widget                               | JSON     |                                                      | READ/WRITE           |                |
  name: Grids
- description: |-
    Groups are collections of users. They support assigning/unassigning multiple users to/from a project in one operation.

    This resource does not yet have the form and schema endpoints. But as all properties are static, clients should still be able
    to work with this resource.

    ## Actions

    ## Actions

    | Link                | Description                                                          | Condition                                                        |
    |:-------------------:| -------------------------------------------------------------------- | ---------------------------------------------------------------- |
    | delete              | Deletes the group.                                                   | **Permission**: Administrator                                    |
    | updateImmediately   | Updates the group's attributes.                                      | **Permission**: Administrator                                    |

    ## Linked Properties

    |  Link              | Description                                                                                                                                                           | Type              | Constraints           | Supported operations | Condition                                                                |
    |:-----------:       |--------------------------------------------------------------                                                                                                         | -------------     | --------------------- | -------------------- | -----------------------------------------                                |
    | self               | This group                                                                                                                                                            | Group             | not null              | READ                 |                                                                          |
    | memberships        | Link to collection of all the group's memberships. The list will only include the memberships in projects in which the requesting user has the necessary permissions. | MemberCollection  |                       | READ                 | **Permission**: view members or manage members in any project            |
    | members            | The list all all the users that are members of the group                                                                                                              | UserCollection    |                       | READ/WRITE           | **Permission**: manage members in any project to read & admin to write   |

    ## Local Properties

    | Property     | Description                                                | Type     | Constraints                                          | Supported operations | Condition                                                      |
    | :----------: | ---------------------------------------------------------  | -------- | ---------------------------------------------------- | -------------------- | -----------------------------------------------------------    |
    | id           | Group's id                                                 | Integer  | x > 0                                                | READ                 |                                                                |
    | name         | Group's full name, formatting depends on instance settings | String   |                                                      | READ/WRITE           | Admin to write                                                 |
    | createdAt    | Time of creation                                           | DateTime |                                                      | READ                 | Only visible by admins                                         |
    | updatedAt    | Time of the most recent change to the user                 | DateTime |                                                      | READ                 | Only visible by admins                                         |
  name: Groups
- description: |-
    ## Linked Properties

    |  Link         | Description               | Type          | Constraints | Supported operations |
    |:-------------:|-------------------------- | ------------- | ----------- | -------------------- |
    | self          | This help text            | HelpText      | not null    | READ                 |
    | editText      | Edit the help text entry  | text/htm      | Admin       | READ                 |

    ## Local Properties

    | Property           | Description                 | Type                 | Constraints | Supported operations |
    | :---------:        | --------------------------- | -------------------- | ----------- | -------------------- |
    | id                 | Help text id                | Integer              | x > 0       | READ                 |
    | attribute          | Attribute name              | String               |             | READ                 |
    | attributeCaption   | Attribute caption           | String               |             | READ                 |
    | helpText           | Help text content           | Formattable          |             | READ                 |
  name: Help texts
- description: |-
    Users and groups can become members of a project. Such a membership will also have one or more roles assigned to it. By that, memberships control the permissions a user has within a project.

    There are also memberships that do not govern the permissions within a certain project but rather govern global permissions. Among the permissions that can be granted like this are the permissions to "Create project" and "Manage users". Those memberships do not have a project associated.

    When creating and updating memberships, a custom message can be sent to users of new and updated memberships. This message can be provided within the `_meta` group.

    ## Linked Properties

    |  Link               | Description                                                   | Type             | Constraints                                                    | Supported operations |
    |:-------------------:|-----------------------------------------                      | -------------    | -------------------------------------------------------------- | -------------------- |
    | self                | This membership                                               | Membership       | not null                                                       | READ                 |
    | project             | The project for which the membership is granted               | Project          |                                                                | READ                 |
    | roles               | The list of roles the user or group is granted in the project | RoleCollection   | not null                                                       | READ                 |
    | principal           | The user or group that was granted membership                 | User or Group    | not null                                                       | READ                 |

    ## Local Properties

    | Property    | Description                                   | Type        | Constraints                                        | Supported operations |
    | :---------: | --------------------------------------------- | ----------- | -----------                                        | -------------------- |
    | id          | Membership id                                 | Integer     | x > 0                                              | READ                 |
    | createdAt   | Time of creation                              | DateTime    | not null                                           | READ                 |
    | updatedAt   | Time of latest update                         | DateTime    | not null                                           | READ                 |

    ## Meta parameters

    | Meta property              | Description                                                                          | Type         | Constraints | Supported operations |Condition |
    | :------------------------: | ---------------------------------------------------                                  | ----         | ----------- | -------------------- |----------|
    | notificationMessage        | The message included in the email(s) send to the users of new or updated memberships | Formattable  |             | READ/WRITE           |          |
  name: Memberships
- description: |-
    News are articles written by users in order to inform other users of important information.

    ## Actions

    None yet

    ## Linked Properties

    | Link          | Description                          | Type           | Constraints           | Supported operations | Condition                                 |
    | :-----------: | -------------------------------------| -------------  | --------------------- | -------------------- | ----------------------------------------- |
    | self          | This news                            | News           | not null              | READ                 |                                           |
    | project       | The project the news is situated in  | Project        | not null              | READ / WRITE         |                                           |
    | author        | The user having created the news     | User           | not null              | READ                 |                                           |

    ## Local Properties

    | Property     | Description                                               | Type     | Constraints                                          | Supported operations | Condition                                                   |
    | :----------: | --------------------------------------------------------- | -------- | ---------------------------------------------------- | -------------------- | ----------------------------------------------------------- |
    | id           | News' id                                                  | Integer  | x > 0                                                | READ                 |                                                             |
    | title        | The headline of the news                                  | String   | max 60 characters                                    | READ                 |                                                             |
    | summary      | A short summary                                           | String   | max 255 characters                                   | READ                 |                                                             |
    | description  | The main body of the news with all the details            | String   |                                                      | READ                 |                                                             |
    | createdAt    | The time the news was created at                          | DateTime |                                                      | READ                 |                                                             |
  name: News
- description: |-
    Notifications are created through notifiable actions in OpenProject.
    Notifications are triggered by actions carried out in the system by users, e.g. editing a work package, but can also be send out because
    of time passing e.g. when a user is notified of a work package that is overdue.

    This endpoint only returns in-app notifications.

    ## Actions

    | Link                | Description                                                          | Condition                   |
    |:-------------------:| -------------------------------------------------------------------- | --------------------------- |
    | read_ian            | Marks the notification as read                                       | notification is unread      |
    | unread_ian          | Marks the notification as unread                                     | notification is read        |

    ## Linked Properties

    | Link          | Description                                       | Type            | Constraints           | Supported operations | Condition                                 |
    | :-----------: | ----------------------------------------          | --------------  | --------------------- | -------------------- | ----------------------------------------- |
    | self          | This notification                                 | Notification    | not null              | READ                 |                                           |
    | project       | The project containing the resource               | Project         | not null              | READ                 |                                           |
    | actor         | The user that caused the notification             | User            |                       | READ                 | optional                                  |
    | resource      | The resource the notification belongs to          | Polymorphic     | not null              | READ                 |                                           |
    | activity      | The journal the notification belongs to           | Polymorphic     |                       | READ                 | optional                                  |
    | details       | A list of objects including detailed information  | Polymorphic     |                       | READ                 | optional                                  |

    ## Local Properties

    | Property     | Description                                               | Type          | Constraints                                          | Supported operations | Condition                                                   |
    | :----------: | --------------------------------------------------------- | --------      | ---------------------------------------------------- | -------------------- | ----------------------------------------------------------- |
    | id           | Primary key                                               | Integer       |                                                      | READ                 |                                                             |
    | subject      | The subject of the notification                           | String        |                                                      | READ                 |                                                             |
    | reason       | The reason causing the notification                       | String        |                                                      | READ                 |                                                             |
    | readIAN      | Whether the notification is read                          | Boolean       |                                                      | READ                 |                                                             |
  name: Notifications
- description: TBD
  name: OAuth 2
- description: |-
    Represents a post in a board. Posts are also referred to as messages in the application.

    *This resource is currently a stub*

    ## Actions

    | Link                | Description                    | Condition                                                                                                                        |
    |:-------------------:|--------------------------------| ---------------------------------------                                                                                          |
    | addAttachment       | Attach a file to the post      | **Permission**: edit messages           |

    ## Linked Properties

    | Property         | Description                                            | Type        | Constraints    | Supported operations |
    | :--------------: | ------------------------------------------------------ | ----------- | -------------- | -------------------- |
    | self             | This post                                              | Post        | not null       | READ                 |
    | attachments      | The files attached to this post                        | Collection  |                | READ                 |
    | project          | The project the post belongs to                        | Project     | not null       | READ                 |

    ## Local Properties

    | Property         | Description                                 | Type                  | Constraints                          | Supported operations |
    | :--------------: | ------------------------------------------- | -----------           | ------------------------------------ | -------------------- |
    | id               | Identifier of this post                     | Integer               | x > 0                                | READ                 |
    | subject          | The post's subject                          | String                | not null                             | READ                 |
  name: Posts
- description: |-
    ## Linked Properties

    |  Link     | Description                                 | Type          | Constraints           | Supported operations |
    |:---------:|-------------------------------------------- | ------------- | --------------------- | -------------------- |
    | self      | This priority                               | Priority      | not null              | READ                 |

    ## Local Properties

    | Property    | Description                                 | Type       | Constraints | Supported operations |
    | :---------: | ------------------------------------------- | ---------- | ----------- | -------------------- |
    | id          | Priority id                                 | Integer    | x > 0       | READ                 |
    | name        | Priority name                               | String     | not empty   | READ                 |
    | position    | Sort index of the priority                  | Integer    | x > 0       | READ                 |
    | isDefault   | Indicates whether this is the default value | Boolean    |             | READ                 |
    | isActive    | Indicates whether the priority is available | Boolean    |             | READ                 |
  name: Priorities
- description: |-
    Projects are containers structuring the information (e.g. work packages, wikis) into smaller groups. They can be used in a classic project management approach but also when structuring work by departments.

    As containers, they also control behaviour of the elements within them. One of the most important aspects of this is that projects limit permissions by having members with a certain permission set (roles) assigned to them.

    ## Actions

    | Link                         | Description                                                          | Condition                         |
    |:--------------------------:  |----------------------------------------------------------------------| --------------------------------- |
    | update                       | Form endpoint that aids in updating this project                     | **Permission**: edit project      |
    | updateImmediately            | Directly update this project                                         | **Permission**: edit project      |
    | delete                       | Delete this project                                                  | **Permission**: admin             |
    | createWorkPackage            | Form endpoint that aids in preparing and creating a work package     | **Permission**: add work packages |
    | createWorkPackageImmediately | Directly creates a work package in the project                       | **Permission**: add work packages |

    ## Linked Properties

    | Link         | Description                                                                                                         | Type          | Constraints | Supported operations |Condition                                                                                  |
    | :----------: | -------------                                                                                                       | ----          | ----------- | -------------------- |-----------------------------------------                                                  |
    | self         | This project                                                                                                        | Project       | not null    | READ                 |                                                                                           |
    | ancestors    | Array of all ancestors of the project, down from the root node (first element) to the parent (last element).        | Collection    | not null    | READ                 | **Permission** view project on the ancestor project. Non visible projects will be omitted |
    | categories   | Categories available in this project                                                                                | Collection    | not null    | READ                 |                                                                                           |
    | types        | Types available in this project                                                                                     | Collection    | not null    | READ                 | **Permission**: view work packages or manage types                                        |
    | versions     | Versions available in this project                                                                                  | Collection    | not null    | READ                 | **Permission**: view work packages or manage versions                                     |
    | memberships  | Memberships in the project                                                                                          | Collection    | not null    | READ                 | **Permission**: view members                                                              |
    | workPackages | Work Packages of this project                                                                                       | Collection    | not null    | READ                 |                                                                                           |
    | parent       | Parent project of the project                                                                                       | Project       |             | READ/WRITE           | **Permission** edit project                                                               |
    | status       | Denotes the status of the project, so whether the project is on track, at risk or is having trouble.                | ProjectStatus |             | READ/WRITE           | **Permission** edit project                                                               |

    Depending on custom fields defined for projects, additional links might exist.

    Note, that the parent and ancestor links may contain the "undisclosed uri" `urn:openproject-org:api:v3:undisclosed` in case an
    ancestor project is defined but the client lacks permission to see it. See the
    [general introduction into links' properties](https://www.openproject.org/docs/api/basic-objects/#local-properties) for more information.

    ## Local Properties

    | Property               | Description                                                                                           | Type              | Constraints                          | Supported operations |
    | :---------------------:| -------------                                                                                         | ----              | -----------                          | -------------------- |
    | id                     | Projects' id                                                                                          | Integer           | x > 0                                | READ/WRITE           |
    | identifier             |                                                                                                       | String            |                                      | READ/WRITE           |
    | name                   |                                                                                                       | String            |                                      | READ/WRITE           |
    | active                 | Indicates whether the project is currently active or already archived                                 | Boolean           |                                      | READ/WRITE           |
    | statusExplanation      | A text detailing and explaining why the project has the reported status                               | Formattable       |                                      | READ/WRITE           |
    | public                 | Indicates whether the project is accessible for everybody                                             | Boolean           |                                      | READ/WRITE           |
    | description            |                                                                                                       | Formattable       |                                      | READ/WRITE           |
    | createdAt              | Time of creation                                                                                      | DateTime          |                                      | READ                 |
    | updatedAt              | Time of the most recent change to the project                                                         | DateTime          |                                      | READ                 |

    Depending on custom fields defined for projects, additional properties might exist.
  name: Projects
- description: |
    A query defines how work packages can be filtered and displayed.
    Clients can define a query once, store it, and use it later on to load the same set of filters and display options.

    ## Actions

    | Link                | Description                                                          | Condition                                                                                                                        |
    |:-------------------:|----------------------------------------------------------------------| ---------------------------------------                                                                                          |
    | star                | Elevates the query to the status of 'starred'                        | **Permission**: save queries for own queries, manage public queries for public queries; Only present if query is not yet starred |
    | unstar              | Removes the 'starred' status                                         | **Permission**: save queries for own queries, manage public queries for public queries; Only present if query is starred         |
    | update              | Use the Form based process to verify the query before persisting     | **Permission**: view work packages                                                                                               |
    | updateImmediately   | Persist the query without using a Form based process for guidance    | **Permission**: save queries for own queries, manage public queries for public queries;                                          |

    ## Linked Properties

    | Property               | Description                                                                                                                                    | Type                  | Constraints                                 | Supported operations |
    | :--------------------: | ------------------------------------------------------                                                                                         | --------------------- | ------------------------------------------- | -------------------- |
    | self                   | This query                                                                                                                                     | Query                 | not null                                    | READ                 |
    | user                   | The user that owns this query                                                                                                                  | User                  | not null                                    | READ                 |
    | project                | The project on which this query operates                                                                                                       | Project               |                                             | READ                 |
    | columns                | Ordered list of QueryColumns. The columns, when mapped to WorkPackage properties determine which WorkPackage properties to display             | []QueryColumn         |                                             | READ                 |
    | highlightedAttributes  | **Only with valid Enterprise Token available:** List of QueryColumns that should get highlighted when `highlightingMode` is set to `inline`.   | []QueryColumn         |                                             | READ                 |
    | sortBy                 | Ordered list of QuerySortBys. Indicates the WorkPackage property the results will be ordered by as well as the direction                       | []QuerySortBy         |                                             | READ                 |
    | groupBy                | The WorkPackage property results of this query are grouped by                                                                                  | String                |                                             | READ                 |
    | results                | The list of work packages returned by applying the filters, sorting and grouping defined in the query                                          | WorkPackageCollection |                                             | READ                 |
    | schema                 | This query's schema                                                                                                                            | Schema                |                                             | READ                 |

    Please note, that all the properties listed above will also be embedded when individual queries are returned but will not be embedded when a list of queries is returned. Whether the properties are embedded or not may be subject to change in the future.

    The `columns` and `highlightedAttributes` properties will be moved into `Views::WorkPackagesTable` so it is deprecated to have it listed within the Query directly.

    ## Local Properties

    | Property         | Description                                                                                              | Type                  | Constraints                                                                         | Supported operations |
    | :--------------: | -------------------------------------------------------------------------------------------------------- | --------------------- | ----------------------------------------------------------------------------------- | -------------------- |
    | id               | Query id                                                                                                 | Integer               | x > 0                                                                               | READ                 |
    | name             | Query name                                                                                               | String                |                                                                                     | READ/WRITE           |
    | filters          | A set of QueryFilters which will be applied to the work packages to determine the resulting work packages| []QueryFilterInstance |                                                                                     | READ/WRITE           |
    | sums             | Should sums (of supported properties) be shown?                                                          | Boolean               |                                                                                     | READ/WRITE           |
    | timelineVisible  | Should the timeline mode be shown?                                                                       | Boolean               |                                                                                     | READ/WRITE           |
    | timelineLabels   | Which labels are shown in the timeline, empty when default                                               | QueryTimelineLabels   |                                                                                     | READ/WRITE           |
    | timelineZoomLevel| Which zoom level should the timeline be rendered in?                                                     | String                | days, weeks, months, quarters, years                                                | READ/WRITE           |
    | timestamps       | The timestamps to filter by when showing changed attributes on work packages.| []Timestamp               |                       | **Values older than 1 day are accepted only with valid Enterprise Token available.**| READ/WRITE           |
    | highlightingMode | Which highlighting mode should the table have?                                                           | String                | none, inline, status, priority, type                                                | READ/WRITE           |
    | showHierarchies  | Should the hierarchy mode be enabled?                                                                    | Boolean               |                                                                                     | READ/WRITE           |
    | hidden           | Should the query be hidden from the query list?                                                          | Boolean               |                                                                                     | READ/WRITE           |
    | public           | Can users besides the owner see the query?                                                               | Boolean               |                                                                                     | READ/WRITE           |
    | starred          | Should the query be highlighted to the user?                                                             | Boolean               |                                                                                     | READ                 |
    | createdAt        | Time of creation                                                                                         | DateTime              | not null                                                                            | READ                 |
    | updatedAt        | Time of the most recent change to the query                                                              | DateTime              | not null                                                                            | READ                 |

    A query that is not assigned to a project (`"project": null`) is called a global query. Global queries filter work packages regardless of the project they are assigned to. As such, a different set of filters exists for those queries.

    The `hidden` property is deprecated as it is replaced by the `Views` concept. A query that isn't hidden will have a `View` while a query that is hidden won't.

    The `timelineVisible`, `timelineLabels`, `timelineZoomLevel`, `highlightingMode` and `showHierarchies` properties will be moved into the more appropriate Views (probably `Views::WorkPackagesTable`) so it is deprecated to have them within the Query directly.

    ## Query Filter Instance

    A QueryFilterInstance defines a filtering applied to the list of work packages. As such it contains:

    * the filter type (`QueryFilter`) used

    * the operator (`QueryOperator`) used

    * the list of values

    The list of values can either consist of a list of links or of a list of strings. If the values are primitive (e.g. Integer, Boolean, Date) they will be displayed as strings and the QueryFilterInstance will have a `values` property.

    ```json
      {
        "_type": "DueDateQueryFilter",
        "name": "Finish date",
        "values": [
          "1"
        ],
        "_links": {
          "filter": {
            "href": "/api/v3/queries/filters/dueDate",
            "title": "Finish date"
          },
          "operator": {
            "href": "/api/v3/queries/operators/<t+",
            "title": "in less than"
          }
          "schema": {
            "href": "/api/v3/queries/filter_instance_schemas/dueDate"
          }
        }
      }
    ```

    If the values are nonprimitive (e.g. User, Project), they will be listed as objects and the QueryFilterInstance will have a `values` link.

    ```json
      {
        "_type": "AssigneeQueryFilter",
        "name": "Assignee",
        "_links": {
          "filter": {
            "href": "/api/v3/queries/filters/assignee",
            "title": "Assignee"
          },
          "operator": {
            "href": "/api/v3/queries/operators/=",
            "title": "is"
          },
          "schema": {
            "href": "/api/v3/queries/filter_instance_schemas/assignee"
          },
          "values": [
            {
              "href": "/api/v3/users/1",
              "title": "OpenProject Admin"
            }
          ]
        }
      }

    ```
  name: Queries
- description: |-
    A QueryColumn can be referenced by a Query to denote the work package properties the client should display for the work packages returned as query results. The columns maps to the WorkPackage by the id property. QueryColumns exist in three types: `QueryColumn::Property`, `QueryColumn::RelationToType` and `QueryColumn::RelationOfType`.

    ## Actions

    As of now, no actions are defined.

    ## Linked Properties

    | Property         | Description                                            | Type                                                                              | Constraints                                    | Supported operations |
    | :--------------: | ------------------------------------------------------ | -----------                                                                       | --------------------------------               | -------------------- |
    | self             | This query column                                      | QueryColumn::Property, QueryColumn::RelationToType or QueryColumn::RelationOfType | not null                                       | READ                 |
    |  type            | The type relations point to                            | Type                                                                              | not null, exists only on QueryColumn::Relation | READ                 |

    ## Local Properties

    | Property         | Description                                            | Type        | Constraints                      | Supported operations |
    | :--------------: | ------------------------------------------------------ | ----------- | -------------------------------- | -------------------- |
    | id               | Query column id                                        | String      | not null                         | READ                 |
    | name             | Query column name                                      | String      | not null                         | READ                 |
  name: Query Columns
- description: |-
    A QueryFilter can be referenced by a filter instance defined for a Query to denote the filtering applied to the query's work package results. This resource is not an instance of an applicable filter but rather the type an applicable filter can have.

    ## Actions

    As of now, no actions are defined.

    ## Linked Properties

    | Property         | Description                                            | Type        | Constraints                      | Supported operations |
    | :--------------: | ------------------------------------------------------ | ----------- | -------------------------------- | -------------------- |
    | self             | This query filter                                      | QueryFilter | not null                         | READ                 |

    ## Local Properties

    | Property         | Description                                            | Type        | Constraints                      | Supported operations |
    | :--------------: | ------------------------------------------------------ | ----------- | -------------------------------- | -------------------- |
    | id               | QueryFilter id                                         | String      | not null                         | READ                 |
  name: Query Filters
- description: |-
    A QueryOperator can be referenced by a QueryFilter to denote the operator to be applied to the filter relation.

    ## Actions

    As of now, no actions are defined.

    ## Linked Properties

    | Property         | Description                                            | Type          | Constraints                      | Supported operations |
    | :--------------: | ------------------------------------------------------ | -----------   | -------------------------------- | -------------------- |
    | self             | This query operator                                    | QueryOperator | not null                         | READ                 |

    ## Local Properties

    | Property         | Description                                            | Type        | Constraints                      | Supported operations |
    | :--------------: | ------------------------------------------------------ | ----------- | -------------------------------- | -------------------- |
    | id               | Query operator id                                      | String      | not null                         | READ                 |
    | name             | Query operator name                                    | String      | not null                         | READ                 |
  name: Query Operators
- description: |-
    A QuerySortBy can be referenced by a Query to denote the sorting applied to the query's work package results. It consists of the columns to sort by as well as the direction (ascending/descending)

    ## Actions

    As of now, no actions are defined.

    ## Linked Properties

    | Property         | Description                                                                                                                                                                                                               | Type        | Constraints                      | Supported operations |
    | :--------------: | ------------------------------------------------------                                                                                                                                                                    | ----------- | -------------------------------- | -------------------- |
    | self             | This query sort by                                                                                                                                                                                                        | QuerySortBy | not null                         | READ                 |
    | column           | The QueryColumn to sort on.                                                                                                                                                                                               | QueryColumn | not null                         | READ                 |
    | direction        | The direction the QueryColumn is to be sorted in. This property is identified by a URI (`urn:openproject-org:api:v3:queries:directions:asc` or `urn:openproject-org:api:v3:queries:directions:desc`) instead of by a URL. |             | not null                         | READ                 |

    ## Local Properties

    | Property         | Description                                            | Type        | Constraints                      | Supported operations |
    | :--------------: | ------------------------------------------------------ | ----------- | -------------------------------- | -------------------- |
    | id               | QuerySortBy id                                         | String      | not null                         | READ                 |
    | name             | QuerySortBy name                                       | String      | not null                         | READ                 |
  name: Query Sort Bys
- description: |-
    A QueryFilterInstanceSchema is a Schema specifically for describing QueryFilterInstances. Because the behaviour of FilterInstances, with regards to the `values` property, differs from one another depending on the chosen Filter, the QueryFilterInstanceSchema explicitly lists the dependencies in its `_dependencies` property. As the property causing the difference is the selected Filter, that property is linked. Apart from that, a QueryFilterInstanceSchema has the same structure a Schema does.

    ## Linked Properties

    | Link                  | Description                                         | Type                      | Constraints | Supported operations |
    | :-------------------: | ----------------------------------------            | -------------             | --------    | -------------------- |
    | self                  | This QueryFilterInstanceSchema (same as for schema) | QueryFilterInstanceSchema | not null    | READ                 |
    | filter                | The filter for which this schema is specific        | Filter                    | not null    | READ                 |

    ## Local Properties

    | Property         | Description                                            | Type         | Constraints                      | Supported operations |
    | :--------------: | ------------------------------------------------------ | ------------ | -------------------------------- | -------------------- |
    | name             | Describes the name attribute                           | Field schema | not null                         | READ                 |
    | filter           | QuerySortBy name                                       | Field schema | not null                         | READ                 |
  name: Query Filter Instance Schema
- description: |-
    Work packages may be related to each other in different ways.

    ```
    +--------------+                            +--------------+
    |              | 1                        1 |              |
    | Work package +-------------+--------------+ Work package |
    |              | from        |           to |              |
    +--------------+             |              +--------------+
                          +------+-------+
                          |   Relation   |
                          +--------------+
                          | type         |
                          | reverseType  |
                          | description  |
                          | lag        |
                          +--------------+
    ```

    ## Actions

    | Link                | Description                                                          | Condition                                     |
    |:-------------------:| -------------------------------------------------------------------- | --------------------------------------------- |
    | update              | Updates the relation between two work packages via a form            | **Permission**: manage work package relations |
    | updateImmediately   | Updates the relation between two work packages                       | **Permission**: manage work package relations |
    | delete              | Destroys the relation between the two work packages                  | **Permission**: manage work package relations |

    ## Linked Properties

    | Link          | Description                           | Type          | Constraints | Supported operations | Condition                                     |
    |:-------------:|-------------------------------------- | ------------- | ----------- | -------------------- | --------------------------------------------- |
    | self          | This relation                         | Relation      | not null    | READ                 | **Permission**: view work packages            |
    | schema        | The schema of this relation           | Schema        | not null    | READ                 |                                               |
    | from          | The emanating work package            | WorkPackage   | not null    | READ                 | **Permission**: view work packages            |
    | to            | The work package the relation ends in | WorkPackage   | not null    | READ                 | **Permission**: view work packages            |

    ## Local Properties

    | Property         | Description                                                   | Type    | Constraints                                                                                                   | Supported operations |
    | :---------------:| ------------------------------------------------------------- | ------- | ------------------------------------------------------------------------------------------------------------- | -------------------- |
    | id               | Relation ID                                                   | Integer | x > 0                                                                                                         | READ                 |
    | name             | The internationalized name of this kind of relation           | String  |                                                                                                               | READ
    | type             | Which kind of relation (blocks, precedes, etc.)               | String  | in: relates, duplicates, duplicated, blocks, blocked, precedes, follows, includes, partof, requires, required | READ / WRITE         |
    | reverseType      | The kind of relation from the other WP's perspective          | String  | in: relates, duplicates, duplicated, blocks, blocked, precedes, follows, includes, partof, requires, required | READ                 |
    | description      | Short text further describing the relation                    | String  |                                                                                                               | READ / WRITE         |
    | lag*             | The number of days between closing of `from` and start of `to`| Integer | x >= 0                                                                                                        | READ / WRITE         |

    \* Only applicable for some relation types such as "follows". You can check using the relation by schema
    endpoint at `/api/v3/relations/schema/{type}`.
  name: Relations
- description: |-
    Throughout OpenProject user input for many properties can be formatted using *Markdown*.
    Using the appropriate rendering endpoint it is possible to render custom formatted inputs into HTML and thus
    receive a preview of the rendered text.

    The request to a rendering endpoint must always have a MIME-Type of `text/plain`.
    The request body is the actual string that shall be rendered as HTML string.
  name: Previewing
- description: |-
    Revisions are sets of updates to files in the context of repositories linked in OpenProject.

    ## Linked Properties

    |  Link            | Description                                                                                       | Type          | Constraints | Supported operations |
    |:----------------:| --------------------------------------------------------------------------------------------------| ------------- | ----------- | -------------------- |
    | self             | This revision                                                                                     | Revision      | not null    | READ                 |
    | project          | The project to which the revision belongs                                                         | Project       | not null    | READ                 |
    | author           | The user that added this revision, if the authorName was mapped to a user in OpenProject          | User          |             | READ                 |
    | showRevision     | A URL to the repository view (outside APIv3) showing this revision                                | -             | not null    | READ                 |

    ## Local Properties

    | Property                | Description                                                                                                                                                 | Type        | Constraints | Supported operations |
    |:-----------------------:| ------------------------------------------------------------------------------------------------------------------------------------------------------------| ----------- | ----------- | -------------------- |
    | id                      | Revision's id, assigned by OpenProject                                                                                                                      | Integer     | x > 0       | READ                 |
    | identifier              | The raw SCM identifier of the revision (e.g. full SHA hash)                                                                                                 | String      | not null    | READ                 |
    | formattedIdentifier     | The SCM identifier of the revision, formatted (e.g. shortened unambiguous SHA hash). May be identical to identifier in many cases                           | String      | not null    | READ                 |
    | authorName              | The name of the author that committed this revision. Note that this name is retrieved from the repository and does not identify a user in OpenProject.      | String      | not null    | READ                 |
    | message                 | The commit message of the revision                                                                                                                          | Formattable | not null    | READ                 |
    | createdAt               | The time this revision was committed to the repository                                                                                                      | DateTime    | not null    | READ                 |
  name: Revisions
- description: |-
    When principals (groups or users) are assigned to a project, they are receive roles in that project. Roles regulate access to specific resources by having permissions configured for them.

    Currently, this is only a stub.

    ## Linked Properties

    | Link                  | Description                               | Type          | Constraints                    | Supported operations |
    | :-------------------: | ----------------------------------------- | ------------- | -------------------------------| -------------------- |
    | self                  | This role                                 | Role          | not null                       | READ                 |

    ## Local Properties

    | Property    | Description                                   | Type        | Constraints | Supported operations |
    | :---------: | --------------------------------------------- | ----------- | ----------- | -------------------- |
    | id          | Role id                                       | Integer     | x > 0       | READ                 |
    | name        | Role name                                     | String      | not null    | READ                 |
  name: Roles
- description: |-
    The root resource contains links to available resources in the API. By following these links
    a client should be able to discover further resources in the API.

    *Note: Currently there is no list action for projects available.*
    *A client will therefore have to know links to projects and can't (yet) discover them.*

    | Link                  | Description                                      | Type            | Nullable | Supported operations | Condition                                        |
    | :-------------------: | ------------------------------------------------ | --------------- | -------- | -------------------- | ---------                                        |
    | configuration         | The configuration of this OpenProject instance   | Configuration   |          | READ                 |                                                  |
    | user                  | The user currently logged-in                     | User            |          | READ                 | logged in                                        |
    | userPreferences       | The preferences of the logged-in user            | UserPreference  |          | READ                 | logged in                                        |
    | priorities            | List of available priorities                     | Collection      |          | READ                 | **Permission** View work packages in any project |
    | statuses              | List of available work package statuses          | Collection      |          | READ                 | **Permission** View work packages in any project |
    | types                 | List of available work package types             | Collection      |          | READ                 | **Permission** View work packages in any project |
    | workPackages          | List of all work packages                        | Collection      |          | READ                 | **Permission** View work packages in any project |
    | users                 | List of all users                                | Collection      |          | READ                 | **Permission** Administrator                     |

    ## Local Properties

    | Property                  | Description                                          | Type       | Condition                                | Supported operations |
    | :-----------------------: | ---------------------------------------------------- | ---------- | ---------------------------------        | -------------------- |
    | instanceName              | The name of the OpenProject instance                 | String     |                                          | READ                 |
    | coreVersion               | The OpenProject core version number for the instance | String     | **Permission** requires admin privileges | READ                 |
  name: Root
- description: |-
    The schema provides detailed information about the properties of a resource.

    The schema is represented by a dictionary where keys are names of resource properties and values are
    objects describing the corresponding property.

    These objects are called **field schema** and form the core of the schema representation.
    Each of them can contain its own `_links` and `_embedded` section.

    ## Linked Properties

    | Link                | Description                              | Type          | Nullable | Supported operations |
    |:-------------------:| ---------------------------------------- | ------------- | -------- | -------------------- |
    | self                | This schema                              | Schema        |          | READ                 |

    ## Local Properties

    | Property            | Description                                                                        | Type             |
    | :-----------------: | ---------------------------------------------------------------------------------- | ---------------- |
    | _dependencies       | A list of dependencies between one property's value and another property           | SchemaDependency |

    The `_dependencies` property contains the list of dependencies that exist between the value selected for one of the properties of the described resource and the resource's structure. Depending on the value, additional properties might exist or properties might have other values allowed to be assigned. See [SchemaDependency](https://www.openproject.org/docs/api/endpoints/schemas/#schema-dependencies) for more information.

    # Field schema

    ## Linked Properties

    | Property             | Description                                                    | Conditions                                           |
    | :--------------:     | -------------------------------------------------------------- | ---------------------------------------------        |
    | allowedValues        | List of resources that are assignable by the current user.     | Will not exist if `allowedValuesSchemas` is present. |
    | allowedValuesSchemas | Link to schemas further describing the property.               | Will not exist if `allowedValues` is present.        |

    The `allowedValues` can either contain a list of canonical links or just a single link to a collection resource.
    This is an optimization to allow efficient handling of both small resource lists (that can be enumerated inline) and large
    resource lists (requiring one or more separate requests).

    The `allowedValuesSchemas` will on rare occasions (e.g. for a [Query](https://www.openproject.org/docs/api/endpoints/queries/)) replace `allowedValues`. This is done when there is no fixed set of allowed values. Instead, the allowed values will have to follow a schema, or one of a list of schemas, in its own right.

    Only one of the links (`allowedValues`, `allowedValuesSchemas`) will exist for any given property.

    ## Local Properties

    | Property          | Description                                                                        | Type         | Default |
    |:-----------------:| ---------------------------------------------------------------------------------- | ------------ | ------- |
    | type              | The data type of the property                                                      | MetaType     |         |
    | name              | Human readable name of the property as it could be displayed in a UI               | String       |         |
    | required          | If true this property is not nullable                                              | Boolean      | true    |
    | hasDefault        | If true this property will have a default value if none is provided                | Boolean      | false   |
    | writable          | If false it is not allowed to **change** the property value                        | Boolean      | true    |
    | minLength         | The value of the property must at least contain the specified amount of characters | Integer      | 0       |
    | maxLength         | The value of the property must at most contain the specified amount of characters  | Integer      | ∞       |
    | regularExpression | The value of the property must match the given regular expression (if not null)    | String       | null    |
    | location          | If present, contains a reference to the location of the property in the JSON       | String       | null    |
    | description       | If present, contains a formattable, human readable description                     | Formattable  | null    |
    | deprecated        | If present, the client should consider the existence of the property deprecated    | Boolean      | false   |

    All of the above properties that do not have a default value *must* be present in the schema.
    For properties that have a default value, the client can assume the default value, if the property is missing.

    Note that regular expressions used in the API follow the rules of [Ruby Regular Expressions](https://ruby-doc.org/core-2.2.6/Regexp.html).

    ### Location property

    The location property gives a hint as to where to find the resource property:

      * when not set, it is in the resource top level attributes;
      * when set to `_links`, it is under the path `_links.propertyName`;
      * when set to `_meta`, it is under the path `_meta.propertyName`.

    For example, for a work package schema, the field schema of the `user` property has a location
    property set to `_links`. This means that the `user` property will be found under the path
    `_links.user` of the json payload of the work package resource.

    # Schema Dependencies

    A `SchemaDependency` describes the dependencies between a value chosen for a resource's property
    and the resource's structure. By that, additional properties or changes in a property are
    described.

    A `SchemaDependency` will never describe a property to disappear, only to appear. As such it
    always provides additional information. For a property that is depending on another property's
    value, this can result in not being listed in the resource's schema itself at all. This will be
    the case if the existence of the property as a whole will be dependent. If only one of the aspects
    (e.g. *writable*) of the property changes with the selected value, the property itself will
    already be listed in the schema, but it will lack the dependent aspect.

    Given that SchemaDependencies will only add information, and the content type of JSON, a client should be able to join the two objects, the schema and the dependency, into one object easily.

    SchemaDependencies are always embedded inside a Schema's `_dependencies` attribute. As such, they are not independently existing resources. Consequently, they do not have a `self` reference.

    ## Linked Properties

    A SchemaDependency does not have any links.

    ## Local Properties

    | Property            | Description                                                                        | Type             |
    | :-----------------: | ---------------------------------------------------------------------------------- | ---------------- |
    | on                  | The name of the property on which the dependency exists                            | string           |
    | dependencies        | The additions to a schema grouped by the value of the depending property           | object           |

    The following excerpt exemplifies the objects that can be found as a value of the `dependencies` property:

    ```json
    {
      "_type": "SchemaDependency",
      "on": "someProperty",
      "dependencies": {
        "1": {
          "loremIpsum": {
            "type": "User",
            "name": "Lorem ipsum",
            "required": true,
            "hasDefault": false,
            "writable": true,
            "location": "_links",
            "description": {
                "format": "markdown",
                "raw": "A description for field Lorem ipsum. This may contain [links](https://example.com).",
                "html": "<p>A description for field Lorem ipsum. This may contain <a href=\"https://example.com\">links</a>.</p>"
            };
            "_links": {
              "allowedValues": {
                "href": "/api/v3/some/path/to/users"
              }
            }
          }
        },
        "2": {
          "loremIpsum": {
            "type": "User",
            "name": "Lorem ipsum",
            "required": true,
            "hasDefault": false,
            "writable": true,
            "location": "_links",
            "_links": {
              "allowedValues": {
                "href": "/api/v3/a/totally/different/path/to/other/users"
              }
            }
          }
        },
        "3": {
          "loremIpsum": {
            "type": "User",
            "name": "Lorem ipsum",
            "required": true,
            "hasDefault": false,
            "writable": false,
            "location": "_links",
          }
        },
        "4": {}
      }
    }
    ```

    Given the example above:
      * If the depending property is `1`, `2` or `3`:
        * The client must set the property `loremIpsum`, because of `"required": true` for all three field schemas
        * When the depending property is `1` or `2`, the values allowed to be set for `loremIpsum` property differ
        * When the depending property is `3`, the `loremIpsum` property will not be writable
      * If the depending property is `4`, the `loremIpsum` property does not exist

    Because of the limitation of JSON objects, all keys will be strings, even when the depending value is actually something different (e.g. Integer, Date).
    This is also true for resources where the resource url is used as the key.
  name: Schemas
- description: |-
    ## Linked Properties

    |  Link         | Description               | Type          | Constraints | Supported operations |
    |:-------------:|-------------------------- | ------------- | ----------- | -------------------- |
    | self          | This status               | Status        | not null    | READ                 |

    ## Local Properties

    | Property         | Description                                                   | Type    | Constraints   | Supported operations |
    | :--------:       | -------------                                                 | ------- | -----------   | -------------------- |
    | id               | Status id                                                     | Integer | x > 0         | READ                 |
    | name             | Status name                                                   | String  |               | READ                 |
    | position         | Sort index of the status                                      | Integer |               | READ                 |
    | isDefault        |                                                               | Boolean |               | READ                 |
    | isClosed         | are tickets of this status considered closed?                 | Boolean |               | READ                 |
    | isReadonly       | are tickets of this status read only?                         | Boolean |               | READ                 |
    | defaultDoneRatio | The percentageDone being applied when changing to this status | Integer | 0 <= x <= 100 | READ                 |
  name: Statuses
- description: |-
    ## Actions

    | Link                | Description                                                                | Condition                                                                                           |
    |:-------------------:| -------------------------------------------------------------------------- | ----------------------------------------------------------------                                    |
    | updateImmediately   | Directly perform edits on this time entry                                  | **Permission**: 'edit time entries' or 'edit own time entries' if the time entry belongs to the user, or 'log own time' if the time entry is ongoing |
    | update              | Form endpoint that aids in preparing and performing edits on a TimeEntry   | **Permission**: 'edit time entries' or 'edit own time entries' if the time entry belongs to the user, or 'log own time' if the time entry is ongoing |
    | delete              | Delete this time entry                                                     | **Permission**: 'edit time entries' or 'edit own time entries' if the time entry belongs to the user, or 'log own time' if the time entry is ongoing |

    ## Linked Properties

    | Link          | Description                                                                                                                             | Type                | Constraints           | Supported operations | Condition                                                 |
    | :-----------: | --------------------------------------------------------------                                                                          | -------------       | --------------------- | -------------------- | --------------------------------------------------------- |
    | self          | This time entry                                                                                                                         | TimeEntry           | not null              | READ                 |                                                           |
    | project       | The project the time entry is bundled in. The project might be different from the work package's project once the workPackage is moved. | Project             | not null              | READ / WRITE         |                                                           |
    | workPackage   | The work package the time entry is created on                                                                                           | WorkPackage         |                       | READ / WRITE         |                                                           |
    | user          | The user the time entry tracks expenditures for                                                                                         | User                | not null              | READ / WRITE          | **Permission**: Log time for other users permission      |
    | activity      | The time entry activity the time entry is categorized as                                                                                | TimeEntriesActivity |                       | READ / WRITE         |                                                           |

    Depending on custom fields defined for time entries, additional links might exist.

    Time entries are either linked to a work package or to a project. If they are linked to a project, the work package reference is empty. If they are linked to a work package, the project reference is filled up automatically to point to the work package's project.

    ## Local Properties

    | Property     | Description                                               | Type     | Constraints                                          | Supported operations | Condition                                                   |
    | :----------: | --------------------------------------------------------- | -------- | ---------------------------------------------------- | -------------------- | ----------------------------------------------------------- |
    | id           | Time entries' id                                          | Integer  | x > 0                                                | READ                 |                                                             |
    | comment      | A text provided by the user detailing the time entry      | String   |                                                      | READ / WRITE         |                                                             |
    | spentOn      | The date the expenditure is booked for                    | Date     |                                                      | READ / WRITE         |                                                             |
    | hours        | The time quantifying the expenditure                      | Time     |                                                      | READ / WRITE         |                                                             |
    | ongoing      | Whether the time entry is actively tracking               | Boolean  |                                                      | READ / WRITE         |                                                             |
    | createdAt    | The time the time entry was created                       | DateTime |                                                      | READ                 |                                                             |
    | updatedAt    | The time the time entry was last updated                  | DateTime |                                                      | READ                 |                                                             |

    Depending on custom fields defined for time entries, additional properties might exist.
  name: Time entries
- description: |-
    Time entries are classified by an activity which is one item of a set of user defined activities (e.g. Design, Specification, Development).

    ## Actions

    None

    ## Linked Properties

    | Link          | Description                                                    | Type                | Constraints           | Supported operations | Condition                                 |
    | :-----------: | -------------------------------------------------------------- | -------------       | --------------------- | -------------------- | ----------------------------------------- |
    | self          | This time entry activity                                       | TimeEntriesActivity | not null              | READ                 |                                           |
    | projects      | List of projects the time entry is active in                   | []Project           | not null              | READ / WRITE         |                                           |

    ## Local Properties

    | Property     | Description                                                  | Type     | Constraints                                          | Supported operations | Condition                                                   |
    | :----------: | ---------------------------------------------------------    | -------- | ---------------------------------------------------- | -------------------- | ----------------------------------------------------------- |
    | id           | Time entries' id                                             | Integer  | x > 0                                                | READ                 |                                                             |
    | name         | The human readable name chosen for this activity             | String   | max 30 characters                                    | READ                 |                                                             |
    | position     | The rank the activity has in a list of activities            | Date     |                                                      | READ                 |                                                             |
    | default      | Flag to signal whether this activity is the default activity | Boolean  |                                                      | READ                 |                                                             |
  name: Time entry activities
- description: |-
    Work package types represented in the system.

    Types exist globally and are then activated for projects.

    ## Linked Properties

    |  Link         | Description               | Type          | Constraints | Supported operations |
    |:-------------:|-------------------------- | ------------- | ----------- | -------------------- |
    | self          | This type                 | Type          | not null    | READ                 |

    ## Local Properties

    | Property         | Description                                          | Type     | Constraints | Supported operations |
    |:----------------:| ---------------------------------------------------- | -------- | ----------- | -------------------- |
    | id               | Type id                                              | Integer  | x > 0       | READ                 |
    | name             | Type name                                            | String   |             | READ                 |
    | color            | The color used to represent this type                | Color    |             | READ                 |
    | position         | Sort index of the type                               | Integer  |             | READ                 |
    | isDefault        | Is this type active by default in new projects?      | Boolean  |             | READ                 |
    | isMilestone      | Do work packages of this type represent a milestone? | Boolean  |             | READ                 |
    | createdAt        | Time of creation                                     | DateTime |             | READ                 |
    | updatedAt        | Time of the most recent change to the user           | DateTime |             | READ                 |
  name: Types
- description: |-
    ## Linked Properties

    |  Link     | Description                                              | Type           | Constraints           | Supported operations |
    |:---------:|----------------------------------------------------------| -------------- | --------------------- | -------------------- |
    | self      | This UserPreferences                                     | UserPreferences| not null              | READ                 |
    | user      | The user that this preference belongs to                 | User           | not null              | READ                 |

    ## Local Properties

    | Property               | Description                                                                     | Type                | Constraints | Supported operations |
    |:----------------------:| -----------------------------------------------------------                     | ----------          | ----------- | -------------------- |
    | autoHidePopups         | Whether to hide popups (e.g. success messages) after 5 seconds                  | Boolean             |             | READ / WRITE         |
    | hideMail               | Hide mail address from other users                                              | Boolean             |             | READ / WRITE         |
    | notifications          | The settings for the notifications to be received by the user                   | NotificationSetting |             | READ / WRITE         |
    | timeZone               | Current selected time zone                                                      | String              |             | READ / WRITE         |
    | commentSortDescending  | Sort comments in descending order                                               | Boolean             |             | READ / WRITE         |
    | warnOnLeavingUnsaved   | Issue warning when leaving a page with unsaved text                             | Boolean             |             | READ / WRITE         |
  name: UserPreferences
- description: |-
    ## Actions

    | Link                | Description                                                          | Condition                                                        |
    |:-------------------:| -------------------------------------------------------------------- | ---------------------------------------------------------------- |
    | lock                | Restrict the user from logging in and performing any actions         | not locked; **Permission**: Administrator                        |
    | show                | Link to the OpenProject user page (HTML)                             |                                                                  |
    | unlock              | Allow a locked user to login and act again                           | locked; **Permission**: Administrator                            |
    | updateImmediately   | Updates the user's attributes.                                       | **Permission**: Administrator, manage_user global permission       |
    | delete              | Permanently remove a user from the instance                          | **Permission**: Administrator, self-delete                       |

    ## Linked Properties

    |  Link       | Description                                                                                                                                                          | Type              | Constraints           | Supported operations | Condition                                                     |
    |:-----------:|--------------------------------------------------------------                                                                                                        | -------------     | --------------------- | -------------------- | -----------------------------------------                     |
    | self        | This user                                                                                                                                                            | User              | not null              | READ                 |                                                               |
    | auth_source | Link to the user's auth source (endpoint not yet implemented)                                                                                                        | LdapAuthSource        |                       | READ / WRITE         | **Permission**: Administrator                                 |
    | members     | Link to collection of all the user's memberships. The list will only include the memberships in projects in which the requesting user has the necessary permissions. | MemberCollection  |                       | READ                 | **Permission**: view members or manage members in any project |

    Depending on custom fields defined for users, additional links might exist.

    ## Local Properties

    | Property     | Description                                               | Type     | Constraints                                          | Supported operations | Condition                                                                             |
    | :----------: | --------------------------------------------------------- | -------- | ---------------------------------------------------- | -------------------- | -----------------------------------------------------------                           |
    | id           | User's id                                                 | Integer  | x > 0                                                | READ                 |                                                                                       |
    | login        | User's login name                                         | String   | unique, 256 max length                               | READ / WRITE         | **Permission**: Administrator, manage_user global permission                            |
    | firstName    | User's first name                                         | String   | 30 max length                                        | READ / WRITE         | **Permission**: Administrator, manage_user global permission                            |
    | lastName     | User's last name                                          | String   | 30 max length                                        | READ / WRITE         | **Permission**: Administrator, manage_user global permission                            |
    | name         | User's full name, formatting depends on instance settings | String   |                                                      | READ                 |                                                                                       |
    | email        | User's email address                                      | String   | unique, 60 max length                                | READ / WRITE         | E-Mail address not hidden, **Permission**: Administrator, manage_user global permission |
    | admin        | Flag indicating whether or not the user is an admin       | Boolean  | in: [true, false]                                    | READ / WRITE         | **Permission**: Administrator                                                         |
    | avatar       | URL to user's avatar                                      | Url      |                                                      | READ                 |                                                                                       |
    | status       | The current activation status of the user (see below)     | String   | in: ["active", "registered", "locked", "invited"]    | READ                 |                                                                                       |
    | language     | User's language                                           | String   | ISO 639-1                                            | READ / WRITE         | **Permission**: Administrator, manage_user global permission                            |
    | password     | User's password for the default password authentication   | String   |                                                      | WRITE                | **Permission**: Administrator                                                         |
    | identity_url | User's identity_url for OmniAuth authentication           | String   |                                                      | READ / WRITE         | **Permission**: Administrator                                                         |
    | createdAt    | Time of creation                                          | DateTime |                                                      | READ                 |                                                                                       |
    | updatedAt    | Time of the most recent change to the user                | DateTime |                                                      | READ                 |                                                                                       |

    Depending on custom fields defined for users, additional properties might exist.

    The `status` of a user can be one of:

    * `active` - the user can log in with the account right away

    * `invited` - the user is invited and is pending registration

    If the user's `status` is set to `active` during creation a means of authentication
    has to be provided which is one of the following:

    * `password` - The password with which the user logs in.

    * `auth_source` - Link to an LDAP auth source.

    * `identity_url` - The identity URL of an OmniAuth authentication provider.

    If all of these are missing the creation will fail with an "missing password" error.

    The `language` is limited to those activated in the system.

    Due to data privacy, the user's properties are limited to reveal as little about the user as possible.
    Thus `login`, `firstName`, `lastName`, `language`, `createdAt` and `updatedAt` are hidden for all
    users except for admins or the user themselves.

    Please note that custom fields are not yet supported by the api although the backend supports them.
  name: Users
- description: |-
    `Values::Property` represents a single key - value pair. That pair typically is an
    excerpt of the properties of a resource. `Values::Property` itself is not an independent resource. It will always be nested and as such
    will only exist as part of another resource.

    It is currently used e.g. in the Notification resource.

    ## Linked Properties

    | Property         | Description                 | Type                | Constraints           | Supported operations | Condition                 |
    | :--------------: | ----------------------------| -----------         | --------------------- | -------------------- | ------------------------- |
    | self             | This value                  | Values::Property    | not null              | READ                 |                           |
    | schema           | This value's schema         | Schema              | not null              | READ                 |                           |

    ## Local Properties

    | Property         | Description                                            | Type         | Constraints    | Supported operations | Condition                    |
    | :--------------: | ------------------------------------------------------ | -----------  | -------------- | -------------------- | ---------------------------- |
    | property         | The pairs' key name                                    | String       | not null       | READ                 |                              |
    | value            | The pairs' value                                       | Polymorphic  |                | READ                 |                              |
  name: Values::Property
- description: |-
    Work Packages can be assigned to a version. As such, versions serve to group Work Packages into logical units where each group comprises all the work packages that needs to be finished in order for the version to be finished.

    ## Actions

    | Link                | Description                                                              | Condition                              |
    |:-------------------:|--------------------------------------------------------------------------| ---------------------------------------|
    | update              | Form endpoint that aids in preparing and performing edits on the version | **Permission**: manage versions        |
    | updateImmediately   | Directly perform edits on the version                                    | **Permission**: manage versions        |

    ## Linked Properties

    |  Link               | Description                              | Type          | Constraints                                                    | Supported operations |
    |:-------------------:|----------------------------------------- | ------------- | -------------------------------------------------------------- | -------------------- |
    | self                | This version                             | Version       | not null                                                       | READ                 |
    | definingProject     | The project to which the version belongs | Project       | only present if the project is visible for the current user    | READ                 |
    | availableInProjects | Projects where this version can be used  | Projects      | not null                                                       | READ                 |

    Depending on custom fields defined for versions, additional linked properties might exist.

    ## Local Properties

    | Property    | Description                                   | Type        | Constraints                                        | Supported operations |
    | :---------: | --------------------------------------------- | ----------- | -----------                                        | -------------------- |
    | id          | Version id                                    | Integer     | x > 0                                              | READ                 |
    | name        | Version name                                  | String      | not null, may not exceed 60 characters             | READ / WRITE         |
    | description |                                               | Formattable |                                                    | READ / WRITE         |
    | startDate   |                                               | Date        |                                                    | READ / WRITE         |
    | endDate     |                                               | Date        |                                                    | READ / WRITE         |
    | status      | The current status of the version             | String      | not null, only 'open', 'finished', 'closed'        | READ / WRITE         |
    | sharing     | The current status of the version             | String      | not null, limited to fixed set as defined by form  | READ / WRITE         |
    | createdAt   | Time of creation                              | DateTime    | not null                                           | READ                 |
    | updatedAt   | Time of the most recent change to the version | DateTime    | not null                                           | READ                 |

    Depending on custom fields defined for versions, additional properties might exist.
  name: Versions
- description: "A View is a representation of some information. That information might\
    \ be a query (currently it always is).\nThe view will store the configuration\
    \ on how to display the information but not the information itself.\n\nA View\
    \ might then be a graph, a table, a gantt chart or something completely different.\n\
    The client will have to choose how to represenent in the view. \n\nA View instance\
    \ will always be of a subtype of `Views`, e.g. `Views::WorkPackageslist`. The\
    \ properties between each `Views` type might differ a lot.\n\n**The View is a\
    \ new concept so it is prone to change.**\n\nCurrently a lot of restrictions still\
    \ apply:\n  * There will always be a query associated to the view when in the\
    \ complete concept, this limitation should not be necessary.\n  * A query can\
    \ only have one view associated.\n  * There is neither an update nor a delete\
    \ endpoint and the schema and form endpoints are also missing. \n    To delete\
    \ a view, simply delete the query.\n  * Most of the properties are deduced from\
    \ the associated query and can thus only be updated via updating the query.\n\
    \  * The properties are not different between `Views` subtypes.\n\n## Linked Properties\n\
    \n| Link                  | Description                                      \
    \                                                                         | Type\
    \                      | Constraints            | Supported operations |\n| :-------------------:\
    \ | ----------------------------------------                                 \
    \                                                 | -------------            \
    \ | --------               | -------------------- |\n| self                  |\
    \ This view                                                                  \
    \                                               | View (a subtype of it)    |\
    \ not null               | READ                 |\n| query                 | This\
    \ query from which to fetch the data                                         \
    \                                          | Query                     | not null\
    \               | READ/WRITE           |\n| project               | This project\
    \ the view is defined in (deduces from the query). If no project is specified,\
    \ the View is considered global.  | Project                   | Deduced from the\
    \ query | READ                 |\n\n## Local Properties\n\n| Property        \
    \ | Description                                           | Type             \
    \     | Constraints                               | Supported operations|\n| :--------------:\
    \ | ------------------------------------------------------| -----------      \
    \     | ------------------------------------      | --------------------|\n| _type\
    \            | The subtype chosen                                    | String\
    \                |                                           | READ          \
    \      |\n| id               | View id                                       \
    \        | Integer               | x > 0                                     |\
    \ READ                |\n| name             | View name                      \
    \                       | String                | Deduced from the query     \
    \               | READ                |\n| public           | Can users besides\
    \ the owner see the view?             | Boolean               | Deduced from the\
    \ query                    | READ                |\n| starred          | Should\
    \ the view be highlighted to the user?           | Boolean               | Deduced\
    \ from the query                    | READ                |\n| createdAt     \
    \   | Time of creation                                      | DateTime       \
    \       | not null                                  | READ                |\n\
    | updatedAt        | Time of the most recent change to the view            | DateTime\
    \              | not null                                  | READ            \
    \    |"
  name: Views
- description: |-
    Represents an individual page in a project's wiki.

    *This resource is currently a stub*

    ## Actions

    | Link                | Description                                                          | Condition                                                                                                                        |
    |:-------------------:|----------------------------------------------------------------------| ---------------------------------------                                                                                          |
    | addAttachment       | Attach a file to the wiki page                                       | **Permission**: edit wiki page      |

    ## Linked Properties

    | Property         | Description                                            | Type        | Constraints    | Supported operations |
    | :--------------: | ------------------------------------------------------ | ----------- | -------------- | -------------------- |
    | self             | This wiki page                                         | WikiPage    | not null       | READ                 |
    | attachments      | The files attached to this wiki page                   | Collection  |                | READ                 |
    | project          | The project the wiki page belongs to                   | Project     | not null       | READ                 |

    ## Local Properties

    | Property         | Description                                 | Type                  | Constraints                          | Supported operations |
    | :--------------: | ------------------------------------------- | -----------           | ------------------------------------ | -------------------- |
    | id               | Identifier of this wiki page                | Integer               | x > 0                                | READ                 |
    | title            | The wiki page's title                       | String                | not null                             | READ                 |
  name: Wiki Pages
- description: |-
    ## Actions

    | Link                | Description                                                              | Condition                              |
    |:-------------------:|--------------------------------------------------------------------------| ---------------------------------------|
    | addAttachment       | Attach a file to the WP                                                  | **Permission**: edit work package      |
    | addComment          | Post comment to WP                                                       | **Permission**: add work package notes |
    | addRelation         | Adds a relation to this work package.                                    | **Permission**: manage wp relations    |
    | addWatcher          | Add any user to WP watchers                                              | **Permission**: add watcher            |
    | customActions       | Collection of predefined changes that can be applied to the work package |                                        |
    | logTime             | Log time on the work package                                             | **Permission**: Log time, Log own time |
    | previewMarkup       | Post markup (in markdown) here to receive an HTML-rendered response      |                                        |
    | removeWatcher       | Remove any user from WP watchers                                         | **Permission**: delete watcher         |
    | unwatch             | Remove current user from WP watchers                                     | logged in; watching                    |
    | update              | Form endpoint that aids in preparing and performing edits on a WP        | **Permission**: edit work package      |
    | updateImmediately   | Directly perform edits on a work package                                 | **Permission**: edit work package      |
    | watch               | Add current user to WP watchers                                          | logged in; not watching                |

    ## Linked Properties

    | Link               | Description                                                                                                                                           | Type         | Constraints                               | Supported operations  | Condition                                 |
    | :----------------: | ----------------------------------------------------------------------------------------------------------------------------------------------------- | ------------ | ------------                              | --------------------- | ----------------------------------------- |
    | self               | This work package                                                                                                                                     | WorkPackage  | not null                                  | READ                  |                                           |
    | schema             | The schema of this work package                                                                                                                       | Schema       | not null                                  | READ                  |                                           |
    | ancestors          | Array of all visible ancestors of the work package, with the root node being the first element                                                        | Collection   | not null                                  | READ                  | **Permission** view work packages         |
    | attachments        | The files attached to this work package                                                                                                               | Collection   | not null                                  | READ / WRITE          |                                           |
    | author             | The person that created the work package                                                                                                              | User         | not null                                  | READ                  |                                           |
    | assignee           | The person that is intended to work on the work package                                                                                               | User         |                                           | READ / WRITE          |                                           |
    | availableWatchers  | All users that can be added to the work package as watchers.                                                                                          | User         |                                           | READ                  | **Permission** add work package watchers  |
    | budget             | The budget this work package is associated to                                                                                                         | Budget       |                                           | READ / WRITE          | **Permission** view cost objects          |
    | category           | The category of the work package                                                                                                                      | Category     |                                           | READ / WRITE          |                                           |
    | children           | Array of all visible children of the work package                                                                                                     | Collection   | not null                                  | READ                  | **Permission** view work packages         |
    | parent             | Parent work package                                                                                                                                   | WorkPackage  | Needs to be visible (to the current user) | READ / WRITE          |                                           |
    | priority           | The priority of the work package                                                                                                                      | Priority     | not null                                  | READ / WRITE          |                                           |
    | project            | The project to which the work package belongs                                                                                                         | Project      | not null                                  | READ / WRITE          |                                           |
    | responsible        | The person that is responsible for the overall outcome                                                                                                | User         |                                           | READ / WRITE          |                                           |
    | relations          | Relations this work package is involved in                                                                                                            | Relation     |                                           | READ                  | **Permission** view work packages         |
    | revisions          | Revisions that are referencing the work package                                                                                                       | Revision     |                                           | READ                  | **Permission** view changesets            |
    | status             | The current status of the work package                                                                                                                | Status       | not null                                  | READ / WRITE          |                                           |
    | timeEntries        | All time entries logged on the work package. Please note that this is a link to an HTML resource for now and as such, the link is subject to change.  | N/A          |                                           | READ                  | **Permission** view time entries          |
    | type               | The type of the work package                                                                                                                          | Type         | not null                                  | READ / WRITE          |                                           |
    | version            | The version associated to the work package                                                                                                            | Version      |                                           | READ / WRITE          |                                           |
    | watchers           | All users that are currently watching this work package                                                                                               | Collection   |                                           | READ                  | **Permission** view work package watchers |

    ## Local Properties

    | Property                | Description                                                                                                                                                                   | Type        | Constraints                                                                                                                                                                                  | Supported operations | Condition                        |
    | :--------------:        | ------------------------------------------------------                                                                                                                        | ----------- | ------------------------------------------------------------------------------------------------------                                                                                       | -------------------- | -------------------------------- |
    | id                      | Work package id                                                                                                                                                               | Integer     | x > 0                                                                                                                                                                                        | READ                 |                                  |
    | lockVersion             | The version of the item as used for optimistic locking                                                                                                                        | Integer     |                                                                                                                                                                                              | READ                 |                                  |
    | subject                 | Work package subject                                                                                                                                                          | String      | not null; 1 <= length <= 255                                                                                                                                                                 | READ / WRITE         |                                  |
    | type                    | Name of the work package's type                                                                                                                                               | String      | not null                                                                                                                                                                                     | READ                 |                                  |
    | description             | The work package description                                                                                                                                                  | Formattable |                                                                                                                                                                                              | READ / WRITE         |                                  |
    | scheduleManually        | If false (default) schedule automatically.                                                                                                                                    | Boolean     |                                                                                                                                                                                              | READ / WRITE         |                                  |
    | startDate               | Scheduled beginning of a work package                                                                                                                                         | Date        | Cannot be set for parent work packages unless it is scheduled manually; must be equal or greater than the earliest possible start date; Exists only on work packages of a non milestone type | READ / WRITE         |                                  |
    | dueDate                 | Scheduled end of a work package                                                                                                                                               | Date        | Cannot be set for parent work packages unless it is scheduled manually; must be greater than or equal to the start date; Exists only on work packages of a non milestone type                | READ / WRITE         |                                  |
    | date                    | Date on which a milestone is achieved                                                                                                                                         | Date        | Exists only on work packages of a milestone type                                                                                                                                             | READ / WRITE         |                                  |
    | derivedStartDate        | Similar to start date but is not set by a client but rather deduced by the work packages' descendants. If manual scheduleManually is active, the two dates can deviate.       | Date        |                                                                                                                                                                                              | READ                 |                                  |
    | derivedDueDate          | Similar to due date but is not set by a client but rather deduced by the work packages' descendants. If manual scheduleManually is active, the two dates can deviate.         | Date        |                                                                                                                                                                                              | READ                 |                                  |
    | duration                | The amount of time in hours the work package needs to be completed.                                                                                                           | Duration    | Not available for milestone type of work packages.                                                                                                                                           | READ / WRITE         |                                  |
    | estimatedTime           | Corresponds to work. Time a work package likely needs to be completed.                                                                                                        | Duration    |                                                                                                                                                                                              | READ / WRITE         |                                  |
    | derivedEstimatedTime    | Corresponds to total work. Time a work package likely needs to be completed including itself and its descendants.                                                             | Duration    |                                                                                                                                                                                              | READ                 |                                  |
    | remainingTime           | Corresponds to remaining work. Remaining time a work package likely needs to be completed.                                                                                    | Duration    |                                                                                                                                                                                              | READ / WRITE         |                                  |
    | derivedRemainingTime    | Corresponds to total remaining work. Remaining time a work package likely needs to be completed including itself and its descendants.                                         | Duration    |                                                                                                                                                                                              | READ                 |                                  |
    | ignoreNonWorkingDays    | When scheduling, whether or not to ignore the non working days being defined. A work package with the flag set to true will be allowed to be scheduled to a non working day.  | Boolean     | Cannot be set for parent work packages unless it is scheduled manually                                                                                                                       | READ                 |                                  |
    | spentTime               | The time booked for this work package by users working on it                                                                                                                  | Duration    |                                                                                                                                                                                              | READ                 | **Permission** view time entries |
    | percentageDone          | Corresponds to % complete. Amount of total completion for a work package.                                                                                                     | Integer     | 0 <= x <= 100; can be null                                                                                                                                                                   | READ                 |                                  |
    | derivedPercentageDone   | Corresponds to total % complete. Amount of total completion for a work package and its descendants.                                                                           | Integer     | 0 <= x <= 100; can be null                                                                                                                                                                   | READ                 |                                  |
    | readonly                | If true, the work package is in a readonly status so with the exception of the status, no other property can be altered.                                                      | Boolean     |                                                                                                                                                                                              | READ                 | Enterprise edition only          |
    | createdAt               | Time of creation                                                                                                                                                              | DateTime    |                                                                                                                                                                                              | READ                 |                                  |
    | updatedAt               | Time of the most recent change to the work package                                                                                                                            | DateTime    |                                                                                                                                                                                              | READ                 |                                  |

    Note that the properties listed here only cover the built-in properties of the OpenProject Core.
    Using plug-ins and custom fields a work package might contain various additional properties.
    A client can consult the schema information to which the work package links. The schema will contain information about
    all properties of the linking work package, including properties added by plug-ins and custom fields.

    Custom fields are identified by a key in the form of `customFieldN`, where `N` is an integer. Depending on their type,
    they can occur as properties or as linked properties. A client has to consult the schema to resolve
    the human readable name of custom fields.

    Properties that cannot be set directly on parent work packages are inferred from their children instead:

    * `startDate` is the earliest start date from its children if manual scheduling is activated.

    * `dueDate` is the latest finish date from its children if manual scheduling is activated.

    * `derivedEstimatedTime` is the sum of estimated times from its children and the work package's own estimated time.

    * `derivedRemainingTime` is the sum of remaining times from its children and the work package's own remaining time

    * `derivedPercentageDone` is computed by the work package's derivedEstimatedTime and derivedRemainingTime.

    `startDate` can also not be earlier than a finish date of any predecessor.

    While attachments are returned as a link whose content is to be fetched separately, clients can choose to
    replace the work package's attachments by providing an array of already uploaded [Attachment resources](https://www.openproject.org/docs/api/endpoints/attachments/)
    on [create](https://www.openproject.org/docs/api/endpoints/work-packages/#create-work-package)
    and [update](https://www.openproject.org/docs/api/endpoints/work-packages/#update-a-work-package). The attachments the work package has had prior to the request will be removed.
  name: Work Packages
- description: |-
    The work schedule defines if days are working days or non-working days.

    A day can be a non-working day if any of these two conditions are met:

      - the day is a recurring non-working week day: a weekend day. For instance
        Sunday is not worked in most countries;
      - the day has been defined as a non-working day: national bank holidays or
        other days deemed special. For instance the 1st of January is New Year's
        day and is a bank holiday in most countries.

    Endpoints can define which week days are working/non-working days, and which
    dates are non-working days.

    To represent the work schedule, `Day`, `WeekDay`, and `NonWorkingDay` models are used.

    ## Day Actions

    None

    ## Day Linked Properties

    | Link              | Description                                                      | Type                      | Constraints | Supported operations |
    | :---------------: | ---------------------------------------------------------------- | ------------------------- | ----------- | -------------------- |
    | self              | This day                                                         | Day                       | not null    | READ                 |
    | nonWorkingReasons | A list of resources describing why this day is a non-working day | (WeekDay/NonWorkingDay)[] |             | READ                 |
    | weekDay           | The week day for this day                                        | WeekDay                   | not null    | READ                 |

    ## Day Local Properties

    | Property   | Description                                 | Type    | Constraints    | Supported operations |
    | :--------: | ------------------------------------------- | ------- | -------------- | -------------------- |
    | date       | The date in ISO8601 format (YYYY-MM-DD)     | Date    | not null       | READ                 |
    | name       | The name of the day                         | String  | not null       | READ                 |
    | working    | `true` for a working day, `false` otherwise | Boolean | not null       | READ                 |


    ## WeekDay Actions

    | Link   | Description          | Condition                          |
    | :----: | -------------------- | ---------------------------------- |
    | update | Update this week day | **Permission**: edit work schedule |

    ## WeekDay Linked Properties

    | Link | Description   | Type    | Constraints | Supported operations |
    | :--: | ------------- | ------- | ----------- | -------------------- |
    | self | This week day | WeekDay | not null    | READ                 |

    ## WeekDay Local Properties

    | Property | Description                                         | Type    | Constraints    | Supported operations |
    | :------: | --------------------------------------------------- | ------- | -------------- | -------------------- |
    | day      | The week day from 1 to 7. 1 is Monday. 7 is Sunday. | Integer | x >= 1, x <= 7 | READ                 |
    | name     | The name of the week day                            | String  | not null       | READ                 |
    | working  | `true` for a working week day, `false` otherwise    | Boolean | not null       | READ/WRITE           |


    ## NonWorkingDay Actions

    | Link   | Description                 | Condition                          |
    | :----: | --------------------------- | ---------------------------------- |
    | update | Update this non-working day | **Permission**: edit work schedule |

    ## NonWorkingDay Linked Properties

    | Link | Description          | Type          | Constraints | Supported operations |
    | :--: | -------------------- | ------------- | ----------- | -------------------- |
    | self | This non-working day | NonWorkingDay | not null    | READ                 |

    ## NonWorkingDay Local Properties

    | Property | Description                             | Type   | Constraints | Supported operations |
    | :------: | --------------------------------------- | ------ | ----------- | -------------------- |
    | date     | The date in ISO8601 format (YYYY-MM-DD) | Date   | not null    | READ                 |
    | name     | The name of the non-working day day     | String | not null    | READ/WRITE           |
  name: Work Schedule
paths:
  /api/v3:
    get:
      description: "Returns the root resource, containing basic information about\
        \ the server instance and a collection of useful links."
      operationId: view_root
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/RootModel'
          description: OK
      summary: View root
      tags:
      - Root
  /api/v3/actions:
    get:
      description: |-
        Returns a collection of actions. The client can choose to filter the actions similar to how work packages are filtered.
        In addition to the provided filters, the server will reduce the result set to only contain actions, for which the requesting client
        has sufficient permissions.
      operationId: List_actions
      parameters:
      - description: |-
          JSON specifying filter conditions.
          Accepts the same format as returned by the [queries](https://www.openproject.org/docs/api/endpoints/queries/) endpoint.
          Currently supported filters are:

          + id: Returns only the action having the id or all actions except those having the id(s).
        example: "[{ \"id\": { \"operator\": \"=\", \"values\": [\"memberships/create\"\
          ] }\" }]"
        explode: true
        in: query
        name: filters
        required: false
        schema:
          type: string
        style: form
      - description: |-
          JSON specifying sort criteria.
          Accepts the same format as returned by the [queries](https://www.openproject.org/docs/api/endpoints/queries/) endpoint. Currently supported sorts are:

          + *No sort supported yet*
        example: "[[\"id\", \"asc\"]]"
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          default: "[[\"id\", \"asc\"]]"
          type: string
        style: form
      responses:
        "200":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _embedded:
                      elements:
                      - _links:
                          self:
                            href: /api/v3/actions/work_packages/create
                            title: Add work package
                        _type: Action
                        description: "Creating a work package within a project including\
                          \ the uploading of attachments. Some attributes might not\
                          \ be selected, e.g version which requires a second permission"
                        id: work_packages/create
                        modules:
                        - work_packages
                        name: Add work package
                      - _links:
                          self:
                            href: /api/v3/actions/work_packages/assign_versions
                            title: Assigning version
                        _type: Action
                        description: Assigning a work package to a version when creating/updating
                          a work package. Only principals having this permission can
                          assign a value to the version property of the work package
                          resource.
                        id: work_packages/assign_versions
                        modules:
                        - work_packages
                        - versions
                        name: Assign version
                    _links:
                      self:
                        href: /api/v3/actions
                    _type: Collection
                    count: 2
                    total: 2
              schema:
                $ref: '#/components/schemas/List_actionsModel'
          description: OK
      summary: List actions
      tags:
      - Actions & Capabilities
  /api/v3/actions/{id}:
    get:
      description: Returns an individual action.
      operationId: View_action
      parameters:
      - description: action id which is the name of the action
        example: work_packages/create
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _links:
                      self:
                        href: /api/v3/actions/work_packages/create
                        title: Add work package
                    _type: Action
                    description: "Creating a work package within a project including\
                      \ the uploading of attachments. Some attributes might not be\
                      \ selected, e.g version which requires a second permission"
                    id: work_packages/create
                    modules:
                    - work_packages
                    name: Add work package
              schema:
                $ref: '#/components/schemas/View_actionModel'
          description: OK
        "404":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:openproject-org:api:v3:errors:NotFound
                    message: The requested resource could not be found.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Returned if the action does not exist.
      summary: View action
      tags:
      - Actions & Capabilities
  /api/v3/activities/{id}:
    get:
      description: ""
      operationId: View_activity
      parameters:
      - description: Activity id
        example: "1"
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _links:
                      self:
                        href: /api/v3/activity/1
                        title: Priority changed from High to Low
                      user:
                        href: /api/v3/users/1
                        title: John Sheppard - admin
                      workPackage:
                        href: /api/v3/work_packages/1
                        title: quis numquam qui voluptatum quia praesentium blanditiis
                          nisi
                    _type: Activity::Comment
                    comment:
                      format: markdown
                      html: <p>Lorem ipsum dolor sit amet.</p>
                      raw: Lorem ipsum dolor sit amet.
                    createdAt: 2014-05-21T08:51:20.396Z
                    updatedAt: 2014-05-21T09:14:02.300Z
                    details:
                    - format: markdown
                      html: <p>Lorem ipsum dolor sit amet.</p>
                      raw: Lorem ipsum dolor sit amet.
                    id: 1
                    version: 31
              schema:
                $ref: '#/components/schemas/ActivityModel'
          description: OK
      summary: View activity
      tags:
      - Activities
    patch:
      description: "Updates an activity's comment and, on success, returns the updated\
        \ activity."
      operationId: Update_activity
      parameters:
      - description: Activity id
        example: "1"
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Update_activity_request'
      responses:
        "200":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _links:
                      self:
                        href: /api/v3/activity/1
                        title: Priority changed from High to Low
                      user:
                        href: /api/v3/users/1
                        title: John Sheppard - admin
                      workPackage:
                        href: /api/v3/work_packages/1
                        title: quis numquam qui voluptatum quia praesentium blanditiis
                          nisi
                    _type: Activity::Comment
                    comment:
                      format: markdown
                      html: <p>Lorem ipsum dolor sit amet.</p>
                      raw: Lorem ipsum dolor sit amet.
                    createdAt: 2014-05-21T08:51:20.396Z
                    updatedAt: 2014-05-21T09:14:02.776Z
                    details:
                    - format: markdown
                      html: <p>Lorem ipsum dolor sit amet.</p>
                      raw: Lorem ipsum dolor sit amet.
                    id: 1
                    version: 31
              schema:
                $ref: '#/components/schemas/ActivityModel'
          description: OK
        "400":
          $ref: '#/components/responses/InvalidRequestBody'
        "403":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:openproject-org:api:v3:errors:MissingPermission
                    message: You are not allowed to edit the comment of this journal
                      entry.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permission:** edit journals
        "406":
          $ref: '#/components/responses/MissingContentType'
        "415":
          $ref: '#/components/responses/UnsupportedMediaType'
        "422":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:openproject-org:api:v3:errors:PropertyIsReadOnly
                    message: The ID of an activity can't be changed.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Returned if the client tries to modify a read-only property.
      summary: Update activity
      tags:
      - Activities
  /api/v3/attachments:
    post:
      description: |-
        Clients can create attachments without a container first and attach them later on.
        This is useful if the container does not exist at the time the attachment is uploaded.
        After the upload, the client can then claim such containerless attachments for any resource eligible (e.g. WorkPackage) on subsequent requests.
        The upload and the claiming *must* be done for the same user account. Attachments uploaded by another user cannot be claimed and
        once claimed for a resource, they cannot be claimed by another.

        The upload request must be of type `multipart/form-data` with exactly two parts.

        The first part *must* be called `metadata`. Its content type is expected to be `application/json`,
        the body *must* be a single JSON object, containing at least the `fileName` and optionally the attachments `description`.

        The second part *must* be called `file`, its content type *should* match the mime type of the file.
        The body *must* be the raw content of the file.
        Note that a `filename` *must* be indicated in the `Content-Disposition` of this part, although it will be ignored.
        Instead the `fileName` inside the JSON of the metadata part will be used.
      operationId: create_attachment
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/create_attachment_request'
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AttachmentModel'
          description: OK
        "400":
          content:
            application/hal+json:
              example:
                _type: Error
                errorIdentifier: urn:openproject-org:api:v3:errors:InvalidRequestBody
                message: The request could not be parsed as JSON.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the client sends a not understandable request. Reasons include:

            * Omitting one of the required parts (metadata and file)

            * sending unparsable JSON in the metadata part
        "403":
          content:
            application/hal+json:
              example:
                _type: Error
                errorIdentifier: urn:openproject-org:api:v3:errors:MissingPermission
                message: You are not allowed to delete this attachment.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permission:** At least one permission in any project: edit work package, add work package, edit messages, edit wiki pages (plugins might extend this list)
        "406":
          $ref: '#/components/responses/MissingContentType'
        "415":
          $ref: '#/components/responses/UnsupportedMediaType'
        "422":
          content:
            application/hal+json:
              example:
                _type: Error
                errorIdentifier: urn:openproject-org:api:v3:errors:PropertyConstraintViolation
                message: File is too large (maximum size is 5242880 Bytes).
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the client tries to send an invalid attachment.
            Reasons are:

            * Omitting the file name (`fileName` property of metadata part)

            * Sending a file that is too large
      summary: Create Attachment
      tags:
      - Attachments
  /api/v3/attachments/{id}:
    delete:
      description: Permanently deletes the specified attachment.
      operationId: delete_attachment
      parameters:
      - description: Attachment id
        example: "1"
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "204":
          description: |-
            Returned if the attachment was deleted successfully.

            Note that the response body is empty as of now. In future versions of the API a body
            *might* be returned along with an appropriate HTTP status.
        "403":
          content:
            application/hal+json:
              example:
                _type: Error
                errorIdentifier: urn:openproject-org:api:v3:errors:MissingPermission
                message: You are not allowed to delete this attachment.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permission:** edit permission for the container of the attachment or being the author for attachments without container

            *Note that you will only receive this error, if you are at least allowed to see the attachment.*
        "404":
          content:
            application/hal+json:
              example:
                _type: Error
                errorIdentifier: urn:openproject-org:api:v3:errors:NotFound
                message: The specified attachment does not exist.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the attachment does not exist or the client does not have sufficient permissions
            to see it.

            **Required permission:** view permission for the container of the attachment or being the author for attachments without container

            *Note: A client without sufficient permissions shall not be able to test for the existence of an attachment.
            That's why a 404 is returned here, even if a 403 might be more appropriate.*
        "406":
          $ref: '#/components/responses/MissingContentType'
        "415":
          $ref: '#/components/responses/UnsupportedMediaType'
      summary: Delete attachment
      tags:
      - Attachments
    get:
      description: ""
      operationId: view_attachment
      parameters:
      - description: Attachment id
        example: "1"
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AttachmentModel'
          description: OK
        "404":
          content:
            application/hal+json:
              example:
                _type: Error
                errorIdentifier: urn:openproject-org:api:v3:errors:NotFound
                message: The specified attachment does not exist.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the attachment does not exist or the client does not have sufficient permissions
            to see it.

            **Required permission:** view permission for the container of the attachment or being the author for attachments without container

            *Note: A client without sufficient permissions shall not be able to test for the existence of an attachment.
            That's why a 404 is returned here, even if a 403 might be more appropriate.*
      summary: View attachment
      tags:
      - Attachments
  /api/v3/budgets/{id}:
    get:
      description: ""
      operationId: view_Budget
      parameters:
      - description: Budget id
        example: "1"
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _links:
                      self:
                        href: /api/v3/budgets/1
                        title: Q3 2015
                    _type: Budget
                    id: 1
                    subject: Q3 2015
              schema:
                $ref: '#/components/schemas/BudgetModel'
          description: OK
        "403":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:openproject-org:api:v3:errors:MissingPermission
                    message: You are not allowed to see this budget.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permission:** view work packages **or** view budgets (on the budgets project)
      summary: view Budget
      tags:
      - Budgets
  /api/v3/capabilities:
    get:
      description: "Returns a collection of actions assigned to a principal in a context.\
        \ The client can choose to filter the actions similar to how work packages\
        \ are filtered. In addition to the provided filters, the server will reduce\
        \ the result set to only contain actions, for which the requesting client\
        \ has sufficient permissions"
      operationId: List_capabilities
      parameters:
      - description: |-
          JSON specifying filter conditions.
          Accepts the same format as returned by the [queries](https://www.openproject.org/docs/api/endpoints/queries/) endpoint.

          + action: Get all capabilities of a certain action

          + principal: Get all capabilities of a principal

          + context: Get all capabilities within a context. Note that for a project context the client needs to provide `p{id}`, e.g. `p5` and for the global context a `g`
        example: "[{ \"principal\": { \"operator\": \"=\", \"values\": [\"1\"] }\"\
          \ }]"
        explode: true
        in: query
        name: filters
        required: false
        schema:
          type: string
        style: form
      - description: |-
          JSON specifying sort criteria.
          Accepts the same format as returned by the [queries](https://www.openproject.org/docs/api/endpoints/queries/) endpoint. Currently supported sorts are:

          + id: Sort by the capabilities id
        example: "[[\"id\", \"asc\"]]"
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          default: "[[\"id\", \"asc\"]]"
          type: string
        style: form
      responses:
        "200":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _embedded:
                      elements:
                      - _links:
                          action:
                            href: /api/v3/actions/work_packages/create
                            title: Add work package
                          context:
                            href: /api/v3/projects/123
                            title: A project
                          principal:
                            href: /api/v3/users/567
                            title: Some user
                          self:
                            href: /api/v3/capabilities/work_packages/create/p123-567
                        _type: Capability
                        id: work_packages/create/p123-567
                      - _links:
                          action:
                            href: /api/v3/actions/work_packages/assignee
                          context:
                            href: /api/v3/projects/123
                            title: A project
                          principal:
                            href: /api/v3/users/567
                            title: Some user
                          self:
                            href: /api/v3/capabilities/work_packages/assignee/p123-567
                        _type: Capability
                        id: work_packages/assignee/p123-567
                      - _links:
                          action:
                            href: /api/v3/actions/memberships/create
                          context:
                            href: /api/v3/projects/345
                            title: A project
                          principal:
                            href: /api/v3/users/821
                            title: Some user
                          self:
                            href: /api/v3/capabilities/memberships/create/p345-821
                            title: Create members
                        _type: Capability
                        id: memberships/create/p345-821
                      - _links:
                          context:
                            href: /api/v3/capabilities/context/global
                            title: Global
                          principal:
                            href: /api/v3/users/567
                            title: Some user
                          self:
                            href: /api/v3/capabilities/users/delete/g-567
                            title: Delete user
                        _type: Capability
                        id: users/delete/g-567
                    _links:
                      changeSize:
                        href: "/api/v3/capabilities?pageSize={size}"
                        templated: true
                      jumpTo:
                        href: "/api/v3/capabilities?offset={offset}"
                        templated: true
                      self:
                        href: /api/v3/capabilities
                    _type: Collection
                    count: 4
                    total: 4
              schema:
                $ref: '#/components/schemas/List_capabilitiesModel'
          description: OK
      summary: List capabilities
      tags:
      - Actions & Capabilities
  /api/v3/capabilities/context/global:
    get:
      description: Returns the global capability context. This context is necessary
        to consistently link to a context even if the context is not a project.
      operationId: View_global_context
      responses:
        "200":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _links:
                      self:
                        href: /api/v3/capabilities/context/global
                    _type: CapabilityContext::Global
                    id: global
              schema:
                $ref: '#/components/schemas/View_global_contextModel'
          description: OK
        "404":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:openproject-org:api:v3:errors:NotFound
                    message: The requested resource could not be found.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Returned if the action does not exist.
      summary: View global context
      tags:
      - Actions & Capabilities
  /api/v3/capabilities/{id}:
    get:
      description: ""
      operationId: View_capabilities
      parameters:
      - description: capability id
        example: work_packages/create/p123-567
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _links:
                      action:
                        href: /api/v3/actions/work_packages/create
                        title: Add work package
                      context:
                        href: /api/v3/projects/123
                        title: A project
                      principal:
                        href: /api/v3/users/567
                        title: Some user
                      self:
                        href: /api/v3/capabilities/work_packages/create/p123-567
                    _type: Capability
                    id: work_packages/create/p123-567
              schema:
                $ref: '#/components/schemas/View_capabilitiesModel'
          description: OK
        "404":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:openproject-org:api:v3:errors:NotFound
                    message: The requested resource could not be found.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Returned if the capability does not exist.
      summary: View capabilities
      tags:
      - Actions & Capabilities
  /api/v3/categories/{id}:
    get:
      description: ""
      operationId: View_Category
      parameters:
      - description: Category id
        example: "1"
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _links:
                      defaultAssignee:
                        href: /api/v3/users/42
                        title: John Sheppard
                      project:
                        href: /api/v3/projects/11
                        title: Example project
                      self:
                        href: /api/v3/categories/10
                        title: Category with assignee
                    _type: Category
                    id: 10
                    name: Foo
              schema:
                $ref: '#/components/schemas/CategoryModel'
          description: OK
        "404":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:openproject-org:api:v3:errors:NotFound
                    message: The specified category does not exist.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the category does not exist or the client does not have sufficient permissions
            to see it.

            **Required permission:** view project (defining the category)

            *Note: A client without sufficient permissions shall not be able to test for the existence of
            a category. That's why a 404 is returned here, even if a 403 might be more appropriate.*
      summary: View Category
      tags:
      - Categories
  /api/v3/configuration:
    get:
      description: ""
      operationId: View_configuration
      responses:
        "200":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _type: Configuration
                    _links:
                      self:
                        href: /api/v3/configuration
                      userPreferences:
                        href: /api/v3/my_preferences
                    maximumAttachmentFileSize: 5242880
                    hostName: example.com:8080
                    perPageOptions:
                    - 1
                    - 10
                    - 100
                    activeFeatureFlags:
                    - aFeatureFlag
                    - anotherFeatureFlag
              schema:
                $ref: '#/components/schemas/ConfigurationModel'
          description: OK
      summary: View configuration
      tags:
      - Configuration
  /api/v3/custom_actions/{id}:
    get:
      description: Retrieves a custom action by id.
      operationId: get_custom_action
      parameters:
      - description: The id of the custom action to fetch
        example: 42
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CustomActionModel'
          description: OK
        "403":
          content:
            application/hal+json:
              example:
                _type: Error
                errorIdentifier: urn:openproject-org:api:v3:errors:MissingPermission
                message: You are not authorized to access this resource.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permission:** edit work packages in any project
        "404":
          content:
            application/hal+json:
              example:
                _type: Error
                errorIdentifier: urn:openproject-org:api:v3:errors:NotFound
                message: The requested resource could not be found.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Returned if the custom action does not exist.
      summary: Get a custom action
      tags:
      - Custom actions
  /api/v3/custom_actions/{id}/execute:
    post:
      description: |-
        A POST to this end point executes the custom action on the work package provided in the payload. The altered work package will be returned. In order to avoid executing
         the custom action unbeknown to a change that has already taken place, the client has to provide the work package's current lockVersion.
      operationId: Execute_custom_action
      parameters:
      - description: The id of the custom action to execute
        example: "1"
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Execute_custom_action_request'
      responses:
        "200":
          description: OK
        "400":
          $ref: '#/components/responses/InvalidRequestBody'
        "403":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:openproject-org:api:v3:errors:MissingPermission
                    message: You are not authorized to access this resource.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permission:** edit work packages - Additional permissions might be required based on the custom action.
        "404":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:openproject-org:api:v3:errors:NotFound
                    message: The requested resource could not be found.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Returned if the custom action does not exist.
        "406":
          $ref: '#/components/responses/MissingContentType'
        "409":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:openproject-org:api:v3:errors:UpdateConflict
                    message: Couldn't update the resource because of conflicting modifications.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Returned if the client provided an outdated lockVersion or
            no lockVersion at all.
        "415":
          $ref: '#/components/responses/UnsupportedMediaType'
        "422":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _embedded:
                      details:
                        attribute: lag
                    _type: Error
                    errorIdentifier: urn:openproject-org:api:v3:errors:PropertyConstraintViolation
                    message: Lag must be a number greater than or equal to 0
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Returned if the custom action was not executed successfully
            e.g. when a constraint on a work package property was violated.
      summary: Execute custom action
      tags:
      - Custom actions
  /api/v3/custom_options/{id}:
    get:
      description: ""
      operationId: View_Custom_Option
      parameters:
      - description: The custom option's identifier
        example: "1"
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _links:
                      self:
                        href: /api/v3/custom_options/1
                    _type: CustomOption
                    value: Foo
              schema:
                $ref: '#/components/schemas/CustomOptionModel'
          description: OK
        "404":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:openproject-org:api:v3:errors:NotFound
                    message: The requested resource could not be found.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the custom option does not exist or the client does not have sufficient permissions to see it.

            **Required permission:** view work package in any project the custom option's custom field is active in.
      summary: View Custom Option
      tags:
      - Custom Options
  /api/v3/days/non_working:
    get:
      description: |-
        Lists all one-time non working days, such as holidays.
        It does not lists the non working weekdays, such as each Saturday, Sunday.
        For listing the weekends, the `/api/v3/days` endpoint should be used.

        All days from current year are returned by default.
      operationId: list_non_working_days
      parameters:
      - description: |-
          JSON specifying filter conditions.

          Accepts the same format as returned by the [queries](https://www.openproject.org/docs/api/endpoints/queries/)
          endpoint. Currently supported filters are:

          + date: the inclusive date interval to scope days to look up. When
            unspecified, default is from the beginning to the end of current year.

            Example: `{ "date": { "operator": "<>d", "values": ["2022-05-02","2022-05-26"] } }`
            would return days between May 5 and May 26 2022, inclusive.
        example: "[{ \"date\": { \"operator\": \"<>d\", \"values\": [\"2022-05-02\"\
          ,\"2022-05-26\"] } }]"
        explode: true
        in: query
        name: filters
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/NonWorkingDayCollectionModel'
          description: OK
        "400":
          $ref: '#/components/responses/InvalidRequestBody'
        "406":
          $ref: '#/components/responses/MissingContentType'
        "415":
          $ref: '#/components/responses/UnsupportedMediaType'
      summary: Lists all non working days
      tags:
      - Work Schedule
    post:
      description: |-
        **(NOT IMPLEMENTED)**
        Marks a day as being a non-working day.

        Note: creating a non-working day will not affect the start and finish dates
        of work packages but will affect their duration.
      operationId: create_non_working_day
      requestBody:
        content:
          application/json:
            example:
              _type: NonWorkingDay
              date: 2022-12-25
              name: Christmas
            schema:
              $ref: '#/components/schemas/NonWorkingDayModel'
      responses:
        "201":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/NonWorkingDayModel'
          description: Non-working day created.
        "400":
          $ref: '#/components/responses/InvalidRequestBody'
        "403":
          content:
            application/hal+json:
              example:
                _type: Error
                errorIdentifier: urn:openproject-org:api:v3:errors:InvalidQuery
                message: You are not authorized to access this resource.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Returned if the client does not have sufficient permissions.
        "406":
          $ref: '#/components/responses/MissingContentType'
        "415":
          $ref: '#/components/responses/UnsupportedMediaType'
      summary: Creates a non-working day (NOT IMPLEMENTED)
      tags:
      - Work Schedule
  /api/v3/days/non_working/{date}:
    delete:
      description: |-
        **(NOT IMPLEMENTED)**
        Removes the non-working day at the given date.

        Note: deleting a non-working day will not affect the start and finish dates
        of work packages but will affect their duration.
      operationId: delete_non_working_day
      parameters:
      - description: The date of the non-working day to view in ISO 8601 format.
        example: 2022-05-06
        explode: false
        in: path
        name: date
        required: true
        schema:
          format: date
          type: string
        style: simple
      responses:
        "204":
          description: |-
            No Content.

            The operation succeeded.
        "400":
          $ref: '#/components/responses/InvalidRequestBody'
        "404":
          content:
            application/hal+json:
              example:
                _type: Error
                errorIdentifier: urn:openproject-org:api:v3:errors:NotFound
                message: The requested resource could not be found.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Returned if the given date is not a non-working day.
        "406":
          $ref: '#/components/responses/MissingContentType'
        "415":
          $ref: '#/components/responses/UnsupportedMediaType'
      summary: Removes a non-working day (NOT IMPLEMENTED)
      tags:
      - Work Schedule
    get:
      description: Returns the non-working day information for a given date.
      operationId: view_non_working_day
      parameters:
      - description: The date of the non-working day to view in ISO 8601 format.
        example: 2022-05-06
        explode: false
        in: path
        name: date
        required: true
        schema:
          format: date
          type: string
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/NonWorkingDayModel'
          description: OK
        "400":
          $ref: '#/components/responses/InvalidRequestBody'
        "404":
          content:
            application/hal+json:
              example:
                _type: Error
                errorIdentifier: urn:openproject-org:api:v3:errors:NotFound
                message: The requested resource could not be found.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Returned if the given date is not a non-working day.
      summary: View a non-working day
      tags:
      - Work Schedule
    patch:
      description: |-
        **(NOT IMPLEMENTED)**
        Update the non-working day information for a given date.
      operationId: update_non_working_day
      parameters:
      - description: The date of the non-working day to view in ISO 8601 format.
        example: 2022-05-06
        explode: false
        in: path
        name: date
        required: true
        schema:
          format: date
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              _type: NonWorkingDay
              date: 2022-05-01
              name: Labour day
            schema:
              $ref: '#/components/schemas/NonWorkingDayModel'
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/NonWorkingDayModel'
          description: OK
        "400":
          $ref: '#/components/responses/InvalidRequestBody'
        "404":
          content:
            application/hal+json:
              example:
                _type: Error
                errorIdentifier: urn:openproject-org:api:v3:errors:NotFound
                message: The requested resource could not be found.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Returned if the given date is not a non-working day.
        "406":
          $ref: '#/components/responses/MissingContentType'
        "415":
          $ref: '#/components/responses/UnsupportedMediaType'
      summary: Update a non-working day attributes (NOT IMPLEMENTED)
      tags:
      - Work Schedule
  /api/v3/days/week:
    get:
      description: Lists week days with work schedule information.
      operationId: list_week_days
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/WeekDayCollectionModel'
          description: OK
        "400":
          $ref: '#/components/responses/InvalidRequestBody'
      summary: Lists week days
      tags:
      - Work Schedule
    patch:
      description: |-
        **(NOT IMPLEMENTED)**
        Update multiple week days with work schedule information.
      operationId: update_week_days
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WeekDayCollectionWriteModel'
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/WeekDayCollectionModel'
          description: OK
        "400":
          $ref: '#/components/responses/InvalidRequestBody'
        "404":
          content:
            application/hal+json:
              example:
                _type: Error
                errorIdentifier: urn:openproject-org:api:v3:errors:InvalidQuery
                message: The requested resource could not be found.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Returned if a week day resource can not be found.
        "406":
          $ref: '#/components/responses/MissingContentType'
        "415":
          $ref: '#/components/responses/UnsupportedMediaType'
      summary: Update week days (NOT IMPLEMENTED)
      tags:
      - Work Schedule
  /api/v3/days/week/{day}:
    get:
      description: View a week day and its attributes.
      operationId: view_week_day
      parameters:
      - description: The week day from 1 to 7. 1 is Monday. 7 is Sunday.
        explode: false
        in: path
        name: day
        required: true
        schema:
          maximum: 7
          minimum: 1
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/WeekDayModel'
          description: OK
        "400":
          $ref: '#/components/responses/InvalidRequestBody'
        "404":
          content:
            application/hal+json:
              example:
                _type: Error
                errorIdentifier: urn:openproject-org:api:v3:errors:InvalidQuery
                message: The requested resource could not be found.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Returned if the day is out of the 1-7 range.
      summary: View a week day
      tags:
      - Work Schedule
    patch:
      description: |-
        **(NOT IMPLEMENTED)**
        Makes a week day a working or non-working day.

        Note: changing a week day working attribute will not affect the start and
        finish dates of work packages but will affect their duration attribute.
      operationId: update_week_day
      parameters:
      - description: The week day from 1 to 7. 1 is Monday. 7 is Sunday.
        explode: false
        in: path
        name: day
        required: true
        schema:
          maximum: 7
          minimum: 1
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            example:
              _type: WeekDay
              working: false
            schema:
              $ref: '#/components/schemas/WeekDayWriteModel'
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/WeekDayModel'
          description: |-
            Update succeeded.

            Response will include the week day with updated attributes.
        "400":
          $ref: '#/components/responses/InvalidRequestBody'
        "403":
          content:
            application/hal+json:
              example:
                _type: Error
                errorIdentifier: urn:openproject-org:api:v3:errors:InvalidQuery
                message: You are not authorized to access this resource.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Returned if the client does not have sufficient permissions.
        "404":
          content:
            application/hal+json:
              example:
                _type: Error
                errorIdentifier: urn:openproject-org:api:v3:errors:InvalidQuery
                message: The requested resource could not be found.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Returned if the day is out of the 1-7 range.
        "406":
          $ref: '#/components/responses/MissingContentType'
        "415":
          $ref: '#/components/responses/UnsupportedMediaType'
      summary: Update a week day attributes (NOT IMPLEMENTED)
      tags:
      - Work Schedule
  /api/v3/days:
    get:
      description: |-
        Lists days information for a given date interval.

        All days from the beginning of current month to the end of following month
        are returned by default.
      operationId: list_days
      parameters:
      - description: |-
          JSON specifying filter conditions.

          Accepts the same format as returned by the [queries](https://www.openproject.org/docs/api/endpoints/queries/)
          endpoint. Currently supported filters are:

          + date: the inclusive date interval to scope days to look up. When
            unspecified, default is from the beginning of current month to the end
            of following month.

            Example: `{ "date": { "operator": "<>d", "values": ["2022-05-02","2022-05-26"] } }`
            would return days between May 5 and May 26 2022, inclusive.

          + working: when `true`, returns only the working days. When `false`,
            returns only the non-working days (weekend days and non-working days).
            When unspecified, returns both working and non-working days.

            Example: `{ "working": { "operator": "=", "values": ["t"] } }`
            would exclude non-working days from the response.
        example: "[{ \"date\": { \"operator\": \"<>d\", \"values\": [\"2022-05-02\"\
          ,\"2022-05-26\"] } }, { \"working\": { \"operator\": \"=\", \"values\":\
          \ [\"f\"] } }]"
        explode: true
        in: query
        name: filters
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/DayCollectionModel'
          description: OK
        "400":
          $ref: '#/components/responses/InvalidRequestBody'
        "406":
          $ref: '#/components/responses/MissingContentType'
        "415":
          $ref: '#/components/responses/UnsupportedMediaType'
      summary: Lists days
      tags:
      - Work Schedule
  /api/v3/days/{date}:
    get:
      description: View the day information for a given date.
      operationId: view_day
      parameters:
      - description: The date of the non-working day to view in ISO 8601 format.
        example: 2022-05-06
        explode: false
        in: path
        name: date
        required: true
        schema:
          format: date
          type: string
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/DayModel'
          description: OK
        "400":
          $ref: '#/components/responses/InvalidRequestBody'
      summary: View day
      tags:
      - Work Schedule
  /api/v3/documents:
    get:
      description: The documents returned depend on the provided parameters and also
        on the requesting user's permissions.
      operationId: List_Documents
      parameters:
      - description: Page number inside the requested collection.
        example: "25"
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 1
          type: integer
        style: form
      - description: Number of elements to display per page.
        example: "25"
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          type: integer
        style: form
      - description: |-
          JSON specifying sort criteria.
          Accepts the same format as returned by the [queries](https://www.openproject.org/docs/api/endpoints/queries/) endpoint. Currently supported sorts are:

          + id: Sort by primary key

          + created_at: Sort by document creation datetime
        example: "[[\"created_at\", \"asc\"]]"
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _embedded:
                      elements:
                      - _links:
                          addAttachment:
                            href: /api/v3/documents/1/attachments
                            method: post
                          attachments:
                            href: /api/v3/documents/1/attachments
                          project:
                            href: /api/v3/projects/19
                            title: Some project
                          self:
                            href: /api/v3/documents/1
                            title: Some document
                        _type: Document
                        createdAt: 2018-12-10T20:53:39.184Z
                        description:
                          format: markdown
                          html: <p>Videlicet deserunt aequitas cognatus. Concedo quia
                            est quia pariatur vorago vallum. Calco autem atavus accusamus
                            conscendo cornu ulterius. Tam patria ago consectetur ventito
                            sustineo nihil caecus. Supra officiis eos velociter somniculosus
                            tonsor qui. Suffragium aduro arguo angustus cogito quia
                            tolero vulnus. Supplanto sortitus cresco apud vestrum
                            qui.</p>
                          raw: Videlicet deserunt aequitas cognatus. Concedo quia
                            est quia pariatur vorago vallum. Calco autem atavus accusamus
                            conscendo cornu ulterius. Tam patria ago consectetur ventito
                            sustineo nihil caecus. Supra officiis eos velociter somniculosus
                            tonsor qui. Suffragium aduro arguo angustus cogito quia
                            tolero vulnus. Supplanto sortitus cresco apud vestrum
                            qui.
                        id: 1
                        title: Some other document
                      - _links:
                          addAttachment:
                            href: /api/v3/documents/2/attachments
                            method: post
                          attachments:
                            href: /api/v3/documents/2/attachments
                          project:
                            href: /api/v3/projects/29
                            title: Some other project
                          self:
                            href: /api/v3/documents/2
                            title: Some other document
                        _type: Document
                        createdAt: 2018-12-10T20:55:54.049Z
                        description:
                          format: markdown
                          html: <p>Videlicet deserunt aequitas cognatus. Concedo quia
                            est quia pariatur vorago vallum. Calco autem atavus accusamus
                            conscendo cornu ulterius. Tam patria ago consectetur ventito
                            sustineo nihil caecus. Supra officiis eos velociter somniculosus
                            tonsor qui. Suffragium aduro arguo angustus cogito quia
                            tolero vulnus. Supplanto sortitus cresco apud vestrum
                            qui.</p>
                          raw: Videlicet deserunt aequitas cognatus. Concedo quia
                            est quia pariatur vorago vallum. Calco autem atavus accusamus
                            conscendo cornu ulterius. Tam patria ago consectetur ventito
                            sustineo nihil caecus. Supra officiis eos velociter somniculosus
                            tonsor qui. Suffragium aduro arguo angustus cogito quia
                            tolero vulnus. Supplanto sortitus cresco apud vestrum
                            qui.
                        id: 2
                        title: Some other document
                    _links:
                      changeSize:
                        href: /api/v3/documents?offset=1&pageSize=%7Bsize%7D
                        templated: true
                      jumpTo:
                        href: /api/v3/documents?offset=%7Boffset%7D&pageSize=30
                        templated: true
                      self:
                        href: /api/v3/documents?offset=1&pageSize=30
                    _type: Collection
                    count: 2
                    offset: 1
                    pageSize: 30
                    total: 2
              schema:
                $ref: '#/components/schemas/DocumentsModel'
          description: OK
        "400":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:openproject-org:api:v3:errors:InvalidQuery
                    message:
                    - Filters Invalid filter does not exist.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Returned if the client sends invalid request parameters e.g.
            filters
        "403":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:openproject-org:api:v3:errors:MissingPermission
                    message: You are not authorized to view this resource.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Returned if the client is not logged in and login is required.
      summary: List Documents
      tags:
      - Documents
  /api/v3/documents/{id}:
    get:
      description: ""
      operationId: View_document
      parameters:
      - description: Document id
        example: "1"
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _embedded:
                      attachments:
                        _embedded...:
                          elements: []
                        _links:
                          self:
                            href: /api/v3/documents/1/attachments
                        _type: Collection
                        count: 2
                        total: 2
                      project:
                        _type: Project...
                    _links:
                      addAttachment:
                        href: /api/v3/documents/1/attachments
                        method: post
                      attachments:
                        href: /api/v3/documents/1/attachments
                      project:
                        href: /api/v3/projects/19
                        title: Some project
                      self:
                        href: /api/v3/documents/1
                        title: Some document
                    _type: Document
                    createdAt: 2018-12-10T20:53:39.698Z
                    description:
                      format: markdown
                      html: <p>Videlicet deserunt aequitas cognatus. Concedo quia
                        est quia pariatur vorago vallum. Calco autem atavus accusamus
                        conscendo cornu ulterius. Tam patria ago consectetur ventito
                        sustineo nihil caecus. Supra officiis eos velociter somniculosus
                        tonsor qui. Suffragium aduro arguo angustus cogito quia tolero
                        vulnus. Supplanto sortitus cresco apud vestrum qui.</p>
                      raw: Videlicet deserunt aequitas cognatus. Concedo quia est
                        quia pariatur vorago vallum. Calco autem atavus accusamus
                        conscendo cornu ulterius. Tam patria ago consectetur ventito
                        sustineo nihil caecus. Supra officiis eos velociter somniculosus
                        tonsor qui. Suffragium aduro arguo angustus cogito quia tolero
                        vulnus. Supplanto sortitus cresco apud vestrum qui.
                    id: 1
                    title: Some other document
              schema:
                $ref: '#/components/schemas/DocumentModel'
          description: OK
        "404":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:openproject-org:api:v3:errors:NotFound
                    message: The requested resource could not be found.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the document does not exist or if the user does not have permission to view it.

            **Required permission** `view documents` in the project the document belongs to
      summary: View document
      tags:
      - Documents
  /api/v3/example/form:
    post:
      description: This is an example of how a form might look like. Note that this
        endpoint does not exist in the actual implementation.
      operationId: show_or_validate_form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/show_or_validate_form_request'
      responses:
        "200":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _embedded:
                      payload:
                        _links:
                          status:
                            href: /api/v3/statuses/1
                        _type: Example
                        lockVersion: 5
                        subject: An example title
                      schema:
                        _links:
                          self:
                            href: /api/v3/example/schema
                        _type: Schema
                        lockVersion:
                          type: Integer
                          writable: false
                        status:
                          _embedded:
                            allowedValues:
                            - _links:
                                self:
                                  href: /api/v3/statuses/1
                              _type: Status
                              createdAt: 2014-05-21T08:51:20.396Z
                              defaultDoneRatio: 0
                              id: 1
                              isClosed: false
                              isDefault: true
                              name: New
                              position: 1
                              updatedAt: 2014-05-21T09:12:00.647Z
                            - _links:
                                self:
                                  href: /api/v3/statuses/2
                              _type: Status
                              createdAt: 2014-05-21T08:51:20.396Z
                              defaultDoneRatio: 100
                              id: 2
                              isClosed: true
                              isDefault: false
                              name: Closed
                              position: 2
                              updatedAt: 2014-05-21T09:12:00.647Z
                          _links:
                            allowedValues:
                            - href: /api/v3/statuses/1
                              title: New
                            - href: /api/v3/statuses/2
                              title: Closed
                          type: Status
                        subject:
                          maxLength: 255
                          minLength: 1
                          type: String
                      validationErrors:
                        subject:
                          _type: Error
                          errorIdentifier: urn:openproject-org:api:v3:errors:BadExampleError
                          message: For the purpose of this example we need a validation
                            error. The remainder of the response pretends there were
                            no errors.
                    _links:
                      commit:
                        href: /api/v3/example
                        method: PATCH
                      previewMarkup:
                        href: /api/v3/render/markdown
                        method: POST
                      self:
                        href: /api/v3/example/form
                      validate:
                        href: /api/v3/example/form
                        method: POST
                    _type: Form
              schema:
                $ref: '#/components/schemas/Example_FormModel'
          description: OK
        "400":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:openproject-org:api:v3:errors:InvalidRequestBody
                    message: "The request body was neither empty, nor did it contain\
                      \ a single JSON object."
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Occurs when the client did not send a valid JSON object in the request body and the request body
            was not empty.

            Note that this error only occurs when the content is not at all a single JSON object.
            It **does not occur** for requests containing undefined properties or invalid property values.
        "403":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:openproject-org:api:v3:errors:MissingPermission
                    message: You are not allowed to edit example resources.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Returned if the client does not have sufficient permissions
            to modify the associated resource.
        "406":
          $ref: '#/components/responses/MissingContentType'
        "409":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:openproject-org:api:v3:errors:UpdateConflict
                    message: The resource you are about to edit was changed in the
                      meantime.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Returned if underlying resource was changed since the client
            requested the form. This is determined using the `lockVersion` property.
        "415":
          $ref: '#/components/responses/UnsupportedMediaType'
      summary: show or validate form
      tags:
      - Forms
  /api/v3/example/schema:
    get:
      description: This is an example of how a schema might look like. Note that this
        endpoint does not exist in the actual implementation.
      operationId: view_the_schema
      responses:
        "200":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _dependencies: []
                    _links:
                      self:
                        href: /api/v3/example/schema
                    _type: Schema
                    lockVersion:
                      name: Resource Version
                      type: Integer
                      writable: false
                    status:
                      _embedded:
                        allowedValues:
                        - _links:
                            self:
                              href: /api/v3/statuses/1
                          _type: Status
                          createdAt: 2014-05-21T08:51:20.396Z
                          defaultDoneRatio: 0
                          id: 1
                          isClosed: false
                          isDefault: true
                          name: New
                          position: 1
                          updatedAt: 2014-05-21T09:12:00.441Z
                        - _links:
                            self:
                              href: /api/v3/statuses/2
                          _type: Status
                          createdAt: 2014-05-21T08:51:20.396Z
                          defaultDoneRatio: 100
                          id: 2
                          isClosed: true
                          isDefault: false
                          name: Closed
                          position: 2
                          updatedAt: 2014-05-21T09:12:00.441Z
                      _links:
                        allowedValues:
                        - href: /api/v3/statuses/1
                          title: New
                        - href: /api/v3/statuses/2
                          title: Closed
                      location: _links
                      name: Status
                      type: Status
                    subject:
                      maxLength: 255
                      minLength: 1
                      name: Subject
                      type: String
              schema:
                $ref: '#/components/schemas/Example_SchemaModel'
          description: OK
      summary: view the schema
      tags:
      - Schemas
  /api/v3/examples:
    get:
      description: ""
      operationId: view_aggregated_result
      parameters:
      - description: |-
          The column to group by.
          Note: Aggregation is as of now only supported by the work package collection.
          You can pass any column name as returned by the [queries](https://www.openproject.org/docs/api/endpoints/queries/) endpoint.
        example: status
        explode: true
        in: query
        name: groupBy
        required: false
        schema:
          type: string
        style: form
      - description: ""
        example: true
        explode: true
        in: query
        name: showSums
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          description: OK
      summary: view aggregated result
      tags:
      - Collections
  /api/v3/file_links/{id}:
    delete:
      description: |-
        Removes a file link on a work package.

        The request contains only the file link identifier as a path parameter. No request body is needed.
      operationId: delete_file_link
      parameters:
      - description: File link id
        example: 42
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: OK
        "403":
          content:
            application/hal+json:
              example:
                _type: Error
                errorIdentifier: urn:openproject-org:api:v3:errors:MissingPermission
                message: You are not authorized to access this resource.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permission:** manage file links

            *Note that you will only receive this error, if you are at least allowed to see the corresponding work package.*
        "404":
          content:
            application/hal+json:
              example:
                _type: Error
                errorIdentifier: urn:openproject-org:api:v3:errors:NotFound
                message: The requested resource could not be found.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the work package or the file link does not exist or the client does not have sufficient permissions
            to see it.

            **Required permission:** view work package, view file links
      summary: Removes a file link.
      tags:
      - File links
    get:
      description: Gets a single file link resource of a work package.
      operationId: view_file_link
      parameters:
      - description: File link id
        example: 42
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/FileLinkReadModel'
          description: OK
        "404":
          content:
            application/hal+json:
              example:
                _type: Error
                errorIdentifier: urn:openproject-org:api:v3:errors:NotFound
                message: The requested resource could not be found.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the work package does not exist or the client does not have sufficient permissions to see it.

            **Required permission:** view work package, view file links
      summary: Gets a file link.
      tags:
      - File links
  /api/v3/file_links/{id}/open:
    get:
      description: |-
        Creates a uri to open the origin file linked by the given file link. This uri depends on the storage type and
        is always located on the origin storage itself.
      operationId: open_file_link
      parameters:
      - description: File link id
        example: 42
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: "Boolean flag indicating, if the file should be opened directly\
          \ or rather the directory location."
        example: true
        explode: true
        in: query
        name: location
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "303":
          description: |-
            Returned if the request was successful. In the `Location` header is the uri where the client can open the origin
            file on the storage.
          headers:
            Location:
              explode: false
              schema:
                format: uri
                type: string
              style: simple
        "404":
          content:
            application/hal+json:
              example:
                _type: Error
                errorIdentifier: urn:openproject-org:api:v3:errors:NotFound
                message: The requested resource could not be found.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the work package does not exist or the client does not have sufficient permissions to see it.

            **Required permission:** view work package, view file links
      summary: Creates an opening uri of the linked file.
      tags:
      - File links
  /api/v3/file_links/{id}/download:
    get:
      description: |-
        Creates a uri to download the origin file linked by the given file link. This uri depends on the storage type and
        is always located on the origin storage itself.
      operationId: download_file_link
      parameters:
      - description: File link id
        example: 42
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "303":
          description: |-
            Returned if the request was successful. In the `Location` header is the uri where the client can download the
            origin file from the storage.
          headers:
            Location:
              explode: false
              schema:
                format: uri
                type: string
              style: simple
        "404":
          content:
            application/hal+json:
              example:
                _type: Error
                errorIdentifier: urn:openproject-org:api:v3:errors:NotFound
                message: The requested resource could not be found.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the work package does not exist or the client does not have sufficient permissions to see it.

            **Required permission:** view work package, view file links
      summary: Creates a download uri of the linked file.
      tags:
      - File links
  /api/v3/grids:
    get:
      description: |-
        Lists all grids matching the provided filters and being part of the selected query page. The grids returned will
        also depend on the permissions of the requesting user.
      operationId: list_grids
      parameters:
      - description: Page number inside the requested collection.
        example: "25"
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 1
          type: integer
        style: form
      - description: Number of elements to display per page.
        example: "25"
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          default: 30
          type: integer
        style: form
      - description: |-
          JSON specifying filter conditions. Accepts the same format as returned by
          the [queries](https://www.openproject.org/docs/api/endpoints/queries/) endpoint. Currently supported filters
          are:

          - page: Filter grid by work package
        example: "[{ \"page\": { \"operator\": \"=\", \"values\": [\"/my/page\"] }\
          \ }]"
        explode: true
        in: query
        name: filters
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/hal+json:
              examples:
                Simple grid collection:
                  $ref: '#/components/examples/GridSimpleCollectionResponse'
              schema:
                $ref: '#/components/schemas/GridCollectionModel'
          description: OK
        "400":
          $ref: '#/components/responses/InvalidQuery'
        "403":
          content:
            application/hal+json:
              example:
                _type: Error
                errorIdentifier: urn:openproject-org:api:v3:errors:MissingPermission
                message: You are not authorized to view this resource.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Returned if the client is not logged in and login is required.
      summary: List grids
      tags:
      - Grids
    post:
      description: |-
        Creates a new grid applying the attributes provided in the body. The constraints applied to the grid depend on the
        page the grid is placed in which is why the create form end point should be used to be guided when wanting to
        create a grid.
      operationId: create_grid
      requestBody:
        content:
          application/json:
            examples:
              Simple grid creation:
                $ref: '#/components/examples/GridSimplePatchModel'
            schema:
              $ref: '#/components/schemas/GridWriteModel'
      responses:
        "201":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/GridReadModel'
          description: Created
        "400":
          $ref: '#/components/responses/InvalidRequestBody'
        "403":
          content:
            application/hal+json:
              example:
                _type: Error
                errorIdentifier: urn:openproject-org:api:v3:errors:MissingPermission
                message: You are not authorized to access this resource.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permission:** Depends on the page the grid is defined for.
        "406":
          $ref: '#/components/responses/MissingContentType'
        "415":
          $ref: '#/components/responses/UnsupportedMediaType'
        "422":
          description: |-
            Returned if:

            * a constraint for a property was violated (`PropertyConstraintViolation`)
      summary: Create a grid
      tags:
      - Grids
  /api/v3/grids/form:
    post:
      description: ""
      operationId: Grid_Create_Form
      responses:
        "200":
          description: OK
      summary: Grid Create Form
      tags:
      - Grids
  /api/v3/grids/{id}:
    get:
      description: Fetches a single grid identified by its id.
      operationId: get_grid
      parameters:
      - description: Grid id
        example: "42"
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              examples:
                Simple grid:
                  $ref: '#/components/examples/GridSimpleResponse'
              schema:
                $ref: '#/components/schemas/GridReadModel'
          description: OK
        "404":
          content:
            application/hal+json:
              example:
                _type: Error
                errorIdentifier: urn:openproject-org:api:v3:errors:NotFound
                message: The requested resource could not be found.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the Grid does not exist or if the user does not have permission to view it.

            **Required permission** depends on the page the grid is defined for
      summary: Get a grid
      tags:
      - Grids
    patch:
      description: |-
        Updates the given grid by applying the attributes provided in the body. The constraints applied to the grid depend
        on the page the grid is placed in which is why the create form end point should be used to be guided when wanting
        to update a grid.
      operationId: update_grid
      requestBody:
        content:
          application/json:
            examples:
              Simple grid patch:
                $ref: '#/components/examples/GridSimplePatchModel'
            schema:
              $ref: '#/components/schemas/GridWriteModel'
      responses:
        "200":
          content:
            application/hal+json:
              examples:
                Simple grid:
                  $ref: '#/components/examples/GridSimpleResponse'
              schema:
                $ref: '#/components/schemas/GridReadModel'
          description: OK
        "400":
          $ref: '#/components/responses/InvalidRequestBody'
        "403":
          content:
            application/hal+json:
              example:
                _type: Error
                errorIdentifier: urn:openproject-org:api:v3:errors:MissingPermission
                message: You are not authorized to access this resource.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permission:** The permission depends on the page the grid is placed in.
        "406":
          $ref: '#/components/responses/MissingContentType'
        "415":
          $ref: '#/components/responses/UnsupportedMediaType'
        "422":
          description: |-
            Returned if:

            * a constraint for a property was violated (`PropertyConstraintViolation`)
      summary: Update a grid
      tags:
      - Grids
  /api/v3/grids/{id}/form:
    post:
      description: ""
      operationId: Grid_Update_Form
      parameters:
      - description: ID of the grid being modified
        example: "1"
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _embedded:
                      payload:
                        columnCount: 5
                        rowCount: 6
                        widgets:
                        - _type: GridWidget
                          endColumn: 3
                          endRow: 8
                          identifier: time_entries_current_user
                          startColumn: 1
                          startRow: 1
                        - _type: GridWidget
                          endColumn: 5
                          endRow: 8
                          identifier: news
                          startColumn: 4
                          startRow: 3
                        - _type: GridWidget
                          endColumn: 6
                          endRow: 3
                          identifier: documents
                          startColumn: 3
                          startRow: 1
                      schema:
                        _links: {}
                        _type: Schema
                        columnCount:
                          hasDefault: false
                          name: Number of columns
                          required: true
                          type: Integer
                          writable: true
                        createdAt:
                          hasDefault: false
                          name: Created on
                          required: true
                          type: DateTime
                          writable: false
                        id:
                          hasDefault: false
                          name: ID
                          required: true
                          type: Integer
                          writable: false
                        rowCount:
                          hasDefault: false
                          name: Number of rows
                          required: true
                          type: Integer
                          writable: true
                        scope:
                          _links: {}
                          hasDefault: false
                          name: Page
                          required: true
                          type: Href
                          writable: false
                        updatedAt:
                          hasDefault: false
                          name: Updated on
                          required: true
                          type: DateTime
                          writable: false
                        widgets:
                          _links: {}
                          hasDefault: false
                          name: Widgets
                          required: true
                          type: "[]GridWidget"
                          writable: true
                      validationErrors:
                        widgets:
                          _embedded:
                            errors:
                            - _embedded:
                                details:
                                  attribute: widgets
                              _type: Error
                              errorIdentifier: urn:openproject-org:api:v3:errors:PropertyConstraintViolation
                              message: Widgets is outside of the grid.
                            - _embedded:
                                details:
                                  attribute: widgets
                              _type: Error
                              errorIdentifier: urn:openproject-org:api:v3:errors:PropertyConstraintViolation
                              message: Widgets is outside of the grid.
                          _type: Error
                          errorIdentifier: urn:openproject-org:api:v3:errors:MultipleErrors
                          message: Multiple field constraints have been violated.
                    _links:
                      self:
                        href: /api/v3/grids/2/form
                        method: post
                      validate:
                        href: /api/v3/grids/2/form
                        method: post
                    _type: Form
              schema:
                type: object
          description: OK
        "403":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:openproject-org:api:v3:errors:MissingPermission
                    message: You are not authorized to access this resource.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permission:** depends on the page the grid is defined for.

            *Note that you will only receive this error, if you are at least allowed to see the corresponding grid.*
        "404":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:openproject-org:api:v3:errors:NotFound
                    message: The requested resource could not be found.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the grid does not exist or the client does not have sufficient permissions to see it.

            **Required permission:** view work package
        "406":
          $ref: '#/components/responses/MissingContentType'
        "415":
          $ref: '#/components/responses/UnsupportedMediaType'
      summary: Grid Update Form
      tags:
      - Grids
  /api/v3/groups:
    get:
      description: |-
        Returns a collection of groups. The client can choose to filter the
        groups similar to how work packages are filtered. In addition to the provided
        filters, the server will reduce the result set to only contain groups, for which
        the requesting client has sufficient permissions (*view_members*, *manage_members*).
      operationId: list_groups
      parameters:
      - description: |-
          JSON specifying sort criteria.
          Accepts the same format as returned by the [queries](https://www.openproject.org/docs/api/endpoints/queries/) endpoint. Currently supported sorts are:

          + id: Sort by primary key

          + created_at: Sort by group creation datetime

          + updated_at: Sort by the time the group was updated last
        example: "[[\"id\", \"asc\"]]"
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          default: "[[\"id\", \"asc\"]]"
          type: string
        style: form
      - description: Comma separated list of properties to include.
        example: "total,elements/name,elements/self,self"
        explode: true
        in: query
        name: select
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/GroupCollectionModel'
          description: OK
        "403":
          content:
            application/hal+json:
              example:
                _type: Error
                errorIdentifier: urn:openproject-org:api:v3:errors:MissingPermission
                message: You are not authorized to access this resource.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permission:** View members or manage members in any project
      summary: List groups
      tags:
      - Groups
    post:
      description: Creates a new group applying the attributes provided in the body.
      operationId: create_group
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupWriteModel'
      responses:
        "201":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/GroupModel'
          description: Created
        "400":
          $ref: '#/components/responses/InvalidRequestBody'
        "403":
          content:
            application/hal+json:
              example:
                _type: Error
                errorIdentifier: urn:openproject-org:api:v3:errors:MissingPermission
                message: You are not authorized to access this resource.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permission:** Administrator
        "406":
          $ref: '#/components/responses/MissingContentType'
        "415":
          $ref: '#/components/responses/UnsupportedMediaType'
        "422":
          content:
            application/hal+json:
              example:
                _embedded:
                  details:
                    attribute: name
                _type: Error
                errorIdentifier: urn:openproject-org:api:v3:errors:PropertyConstraintViolation
                message: Name can't be blank.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if:

            * a constraint for a property was violated (`PropertyConstraintViolation`)
      summary: Create group
      tags:
      - Groups
  /api/v3/groups/{id}:
    delete:
      description: Deletes the group.
      operationId: delete_group
      parameters:
      - description: Group id
        example: 1
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "202":
          description: |-
            Returned if the group was marked for deletion.

            Note that the response body is empty as of now. In future versions of the API a body
            *might* be returned, indicating the progress of deletion.
        "403":
          content:
            application/hal+json:
              example:
                _type: Error
                errorIdentifier: urn:openproject-org:api:v3:errors:MissingPermission
                message: You are not authorized to access this resource.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permission:** Administrator
        "404":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:openproject-org:api:v3:errors:NotFound
                    message: The requested resource could not be found.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the group does not exist or the client does not have sufficient permissions
            to see it.

            **Required permission:** Administrator

            *Note: A client without sufficient permissions shall not be able to test for the existence of
            a version. That's why a 404 is returned here, even if a 403 might be more appropriate.*
        "406":
          $ref: '#/components/responses/MissingContentType'
        "415":
          $ref: '#/components/responses/UnsupportedMediaType'
      summary: Delete group
      tags:
      - Groups
    get:
      description: Fetches a group resource.
      operationId: get_group
      parameters:
      - description: Group id
        example: 1
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              examples:
                group response:
                  $ref: '#/components/examples/GroupResponse'
              schema:
                $ref: '#/components/schemas/GroupModel'
          description: OK
        "404":
          content:
            application/hal+json:
              example:
                _type: Error
                errorIdentifier: urn:openproject-org:api:v3:errors:NotFound
                message: The requested resource could not be found.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the group does not exist or if the API user does not have permission to view them.

            **Required permission** If the user has the *manage members* permission in at least one project the user will be able to query all groups. If not, the user
            will be able to query all groups which are members in projects, he has the *view members* permission in.
      summary: Get group
      tags:
      - Groups
    patch:
      description: |-
        Updates the given group by applying the attributes provided in the body.

        Please note that the `members` array provided will override the existing set of members (similar to a PUT). A
        client thus has to provide the complete list of members the group is to have after the PATCH even if only one
        member is to be added.
      operationId: update_group
      parameters:
      - description: Group id
        example: 1
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupWriteModel'
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/GroupModel'
          description: OK
        "400":
          $ref: '#/components/responses/InvalidRequestBody'
        "403":
          content:
            application/hal+json:
              example:
                _type: Error
                errorIdentifier: urn:openproject-org:api:v3:errors:MissingPermission
                message: You are not authorized to access this resource.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permission:** Administrator
        "404":
          content:
            application/hal+json:
              example:
                _type: Error
                errorIdentifier: urn:openproject-org:api:v3:errors:NotFound
                message: The requested resource could not be found.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the group does not exist or the client does not have sufficient permissions
            to see it.

            **Required permission** If the user has the *manage members* permission in at least one project the user will be able to query all groups. If not, the user
            will be able to query all groups which are members in projects, he has the *view members* permission in.

            *Note: A client without sufficient permissions shall not be able to test for the existence of
            a version. That's why a 404 is returned here, even if a 403 might be more appropriate.*
        "406":
          $ref: '#/components/responses/MissingContentType'
        "415":
          $ref: '#/components/responses/UnsupportedMediaType'
        "422":
          content:
            application/hal+json:
              example:
                _embedded:
                  details:
                    attribute: members
                _type: Error
                errorIdentifier: urn:openproject-org:api:v3:errors:PropertyConstraintViolation
                message: Member is already taken.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if:

            * a constraint for a property was violated (`PropertyConstraintViolation`)
      summary: Update group
      tags:
      - Groups
  /api/v3/help_texts:
    get:
      description: List the complete collection of help texts.
      operationId: list_help_texts
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/HelpTextCollectionModel'
          description: OK
      summary: List help texts
      tags:
      - Help texts
  /api/v3/help_texts/{id}:
    get:
      description: Fetches the help text from the given id.
      operationId: get_help_text
      parameters:
      - description: Help text id
        example: 1
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/HelpTextModel'
          description: OK
        "404":
          content:
            application/hal+json:
              example:
                _type: Error
                errorIdentifier: urn:openproject-org:api:v3:errors:NotFound
                message: The requested resource could not be found.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Returned if the help text does not exist.
      summary: Get help text
      tags:
      - Help texts
  /api/v3/meetings/{id}:
    get:
      description: Retrieve an individual meeting as identified by the id parameter
      operationId: View_Meeting
      parameters:
      - description: Meeting identifier
        example: "1"
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _embedded:
                      project:
                        _type: Project...
                        id: 12
                      author:
                        _type: User...
                        id: 2
                    _links:
                      addAttachment:
                        href: /api/v3/meetings/72/attachments
                        method: post
                      attachments:
                        href: /api/v3/meetings/72/attachments
                      project:
                        href: /api/v3/projects/12
                        title: some project
                      author:
                        href: /api/v3/users/2
                        title: Peggie Feeney
                      self:
                        href: /api/v3/meetings/72
                    _type: Meeting
                    id: 72
                    lockVersion: 5
                    title: A meeting
                    startTime: 2014-05-21T08:00:00.000Z
                    duration: 120
                    createdAt: 2014-05-21T08:51:20.396Z
                    updatedAt: 2014-05-21T09:14:02.776Z
              schema:
                $ref: '#/components/schemas/MeetingModel'
          description: OK
        "404":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:openproject-org:api:v3:errors:NotFound
                    message: The requested resource could not be found.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the meeting does not exist or the client does not have sufficient permissions to see it.

            **Required permission:** view meetings in the page's project
      summary: View Meeting Page
      tags:
      - Meetings
  /api/v3/meetings/{id}/attachments:
    get:
      description: ""
      operationId: List_attachments_by_meeting
      parameters:
      - description: ID of the meeting whose attachments will be listed
        example: "1"
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _embedded:
                      elements:
                      - _links:
                          author:
                            href: /api/v3/users/1
                            title: OpenProject Admin
                          container:
                            href: /api/v3/meetings/72
                            title: meeting
                          delete:
                            href: /api/v3/attachments/376
                            method: delete
                          downloadLocation:
                            href: /api/v3/attachments/376/content
                          self:
                            href: /api/v3/attachments/376
                            title: 200.gif
                        _type: Attachment
                        contentType: image/gif
                        createdAt: 2018-06-01T07:24:19.896Z
                        description:
                          format: plain
                          html: ""
                          raw: ""
                        digest:
                          algorithm: md5
                          hash: 7ac9c97ef73d47127f590788b84c0c1c
                        fileName: some.gif
                        fileSize: 3521772
                        id: 376
                    _links:
                      self:
                        href: /api/v3/meetings/72/attachments
                    _type: Collection
                    count: 1
                    total: 1
              schema:
                $ref: '#/components/schemas/Attachments_Model'
          description: OK
        "404":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:openproject-org:api:v3:errors:NotFound
                    message: The requested resource could not be found.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the meeting does not exist or the client does not have sufficient permissions
            to see it.

            **Required permission:** view meetings

            *Note: A client without sufficient permissions shall not be able to test for the existence of a meeting.
            That's why a 404 is returned here, even if a 403 might be more appropriate.*
      summary: List attachments by meeting
      tags:
      - Attachments
    post:
      description: Adds an attachment with the meeting as it's container.
      operationId: Add_attachment_to_meeting
      parameters:
      - description: ID of the meeting to receive the attachment
        example: "1"
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _embedded:
                      author:
                        _links:
                          lock:
                            href: /api/v3/users/1/lock
                            method: post
                            title: Set lock on admin
                          self:
                            href: /api/v3/users/1
                            title: OpenProject Admin
                          showUser:
                            href: /users/1
                            type: text/html
                          updateImmediately:
                            href: /api/v3/users/1
                            method: patch
                            title: Update admin
                        _type: User
                        admin: true
                        avatar: ""
                        createdAt: 2015-03-20T12:56:52.343Z
                        email: null
                        firstName: OpenProject
                        id: 1
                        identityUrl: null
                        lastName: Admin
                        login: admin
                        name: OpenProject Admin
                        status: active
                        updatedAt: 2018-05-29T13:57:44.662Z
                      container:
                        _links:
                          addAttachment:
                            href: /api/v3/meetings/72/attachments
                            method: post
                          attachments:
                            href: /api/v3/meetings/72/attachments
                          project:
                            href: /api/v3/projects/12
                            title: Demo project
                          self:
                            href: /api/v3/meetings/72
                        _type: Meeting
                        id: 72
                        title: meeting
                    _links:
                      author:
                        href: /api/v3/users/1
                        title: OpenProject Admin
                      container:
                        href: /api/v3/meetings/72
                        title: meeting
                      delete:
                        href: /api/v3/attachments/376
                        method: delete
                      downloadLocation:
                        href: /api/v3/attachments/376/content
                      self:
                        href: /api/v3/attachments/376
                        title: 200.gif
                    _type: Attachment
                    contentType: image/gif
                    createdAt: 2018-06-01T07:24:19.896Z
                    description:
                      format: plain
                      html: ""
                      raw: ""
                    digest:
                      algorithm: md5
                      hash: 7ac9c97ef73d47127f590788b84c0c1c
                    fileName: some.gif
                    fileSize: 3521772
                    id: 376
          description: OK
        "400":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:openproject-org:api:v3:errors:InvalidRequestBody
                    message: The request could not be parsed as JSON.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the client sends a not understandable request. Reasons include:

            * Omitting one of the required parts (metadata and file)

            * sending unparsable JSON in the metadata part
        "403":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:openproject-org:api:v3:errors:MissingPermission
                    message: You are not allowed to delete this attachment.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permission:** edit meetings

            *Note that you will only receive this error, if you are at least allowed to see the meeting*
        "404":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:openproject-org:api:v3:errors:NotFound
                    message: The requested resource could not be found.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the meeting does not exist or the client does not have sufficient permissions
            to see it.

            **Required permission:** view meetings

            *Note: A client without sufficient permissions shall not be able to test for the existence of a meeting
            That's why a 404 is returned here, even if a 403 might be more appropriate.*
        "406":
          $ref: '#/components/responses/MissingContentType'
        "415":
          $ref: '#/components/responses/UnsupportedMediaType'
        "422":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:openproject-org:api:v3:errors:PropertyConstraintViolation
                    message: File is too large (maximum size is 5242880 Bytes).
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the client tries to send an invalid attachment.
            Reasons are:

            * Omitting the file name (`fileName` property of metadata part)

            * Sending a file that is too large
      summary: Add attachment to meeting
      tags:
      - Attachments
  /api/v3/memberships:
    get:
      description: |-
        Returns a collection of memberships. The client can choose to filter
        the memberships similar to how work packages are filtered. In addition to the
        provided filters, the server will reduce the result set to only contain memberships,
        for which the requesting client has sufficient permissions (*view_members*, *manage_members*).
      operationId: list_memberships
      parameters:
      - description: |-
          JSON specifying filter conditions.
          Accepts the same format as returned by the [queries](https://www.openproject.org/docs/api/endpoints/queries/)
          endpoint. Currently supported filters are:

          + any_name_attribute: filters memberships based on the name of the principal. All possible name variants
            (and also email and login) are searched.
          + blocked: reduces the result set to all memberships that are temporarily blocked or that are not blocked
            temporarily.
          + group: filters memberships based on the name of a group. The group however is not the principal used for
            filtering. Rather, the memberships of the group are used as the filter values.
          + name: filters memberships based on the name of the principal. Note that only the name is used which depends
            on a setting in the OpenProject instance.
          + principal: filters memberships based on the id of the principal.
          + project: filters memberships based on the id of the project.
          + role: filters memberships based on the id of any role assigned to the membership.
          + status: filters memberships based on the status of the principal.
          + created_at: filters memberships based on the time the membership was created.
          + updated_at: filters memberships based on the time the membership was updated last.
        examples:
          name-filter:
            summary: Filtering on the name of the principal
            value: "[{ \"name\": { \"operator\": \"=\", \"values\": [\"A User\"] }\"\
              \ }]"
          global-memberships:
            summary: Get memberships for global roles
            value: "[{ \"project\": { \"operator\": \"!*\", \"values\": null }\" }]"
        explode: true
        in: query
        name: filters
        required: false
        schema:
          type: string
        style: form
      - description: |-
          JSON specifying sort criteria.
          Accepts the same format as returned by the [queries](https://www.openproject.org/docs/api/endpoints/queries/)
          endpoint. Currently supported sorts are:

          + id: Sort by primary key
          + name: Sort by the name of the principal. Note that this depends on the setting for how the name is to be
            displayed at least for users.
          + email: Sort by the email address of the principal. Groups and principal users, which do not have an email,
            are sorted last.
          + status: Sort by the status of the principal. Groups and principal users, which do not have a status, are
            sorted together with the active users.
          + created_at: Sort by membership creation datetime
          + updated_at: Sort by the time the membership was updated last
        example: "[[\"id\", \"asc\"]]"
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          default: "[[\"id\", \"asc\"]]"
          type: string
        style: form
      responses:
        "200":
          content:
            application/hal+json:
              examples:
                simple membership collection:
                  $ref: '#/components/examples/MembershipSimpleCollectionResponse'
              schema:
                $ref: '#/components/schemas/MembershipCollectionModel'
          description: OK
        "400":
          $ref: '#/components/responses/InvalidQuery'
        "403":
          content:
            application/hal+json:
              example:
                _type: Error
                errorIdentifier: urn:openproject-org:api:v3:errors:MissingPermission
                message: You are not authorized to view this resource.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Returned if the client is not logged in and login is required.
      summary: List memberships
      tags:
      - Memberships
    post:
      description: |-
        Creates a new membership applying the attributes provided in the body.

        You can use the form and schema to retrieve the valid attribute values and by that be guided towards successful
        creation.

        By providing a `notificationMessage` within the `_meta` block of the payload, the client can include a customized
        message to the user of the newly created membership. In case of a group, the message will be sent to every user
        belonging to the group.

        By including `{ "sendNotifications": false }` within the `_meta` block of the payload, no notifications is send
        out at all.
      operationId: create_membership
      requestBody:
        content:
          application/json:
            examples:
              global role:
                $ref: '#/components/examples/MembershipCreateRequestGlobalRole'
              no notification:
                $ref: '#/components/examples/MembershipCreateRequestNoNotification'
              custom message:
                $ref: '#/components/examples/MembershipCreateRequestCustomMessage'
            schema:
              $ref: '#/components/schemas/MembershipWriteModel'
      responses:
        "201":
          content:
            application/hal+json:
              examples:
                simple membership:
                  $ref: '#/components/examples/MembershipSimpleResponse'
              schema:
                $ref: '#/components/schemas/MembershipReadModel'
          description: Created
        "400":
          $ref: '#/components/responses/InvalidRequestBody'
        "403":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:openproject-org:api:v3:errors:MissingPermission
                    message: You are not authorized to access this resource.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permission:** Manage members
        "406":
          $ref: '#/components/responses/MissingContentType'
        "415":
          $ref: '#/components/responses/UnsupportedMediaType'
        "422":
          content:
            application/hal+json:
              example:
                _embedded:
                  details:
                    attribute: project
                _type: Error
                errorIdentifier: urn:openproject-org:api:v3:errors:PropertyConstraintViolation
                message: Project can't be blank.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if:

            - a constraint for a property was violated (`PropertyConstraintViolation`)
      summary: Create a membership
      tags:
      - Memberships
  /api/v3/memberships/available_projects:
    get:
      description: |-
        Gets a list of projects in which a membership can be created in. The list contains all projects in which the user
        issuing the request has the manage members permissions.
      operationId: get_memberships_available_projects
      responses:
        "200":
          content:
            application/hal+json:
              examples:
                simple project collection:
                  $ref: '#/components/examples/ProjectCollection'
              schema:
                $ref: '#/components/schemas/ProjectCollectionModel'
          description: OK
        "403":
          content:
            application/hal+json:
              example:
                _type: Error
                errorIdentifier: urn:openproject-org:api:v3:errors:MissingPermission
                message: You are not authorized to access this resource.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permission:** manage members
      summary: Available projects for memberships
      tags:
      - Memberships
  /api/v3/memberships/form:
    post:
      description: |-
        Requests and validates the creation form for memberships. The request payload, if sent, is validated. The form
        endpoint itself does not create a membership.
      operationId: form_create_membership
      requestBody:
        content:
          application/json:
            examples:
              global role:
                $ref: '#/components/examples/MembershipCreateRequestGlobalRole'
              no notification:
                $ref: '#/components/examples/MembershipCreateRequestNoNotification'
              custom message:
                $ref: '#/components/examples/MembershipCreateRequestCustomMessage'
            schema:
              $ref: '#/components/schemas/MembershipWriteModel'
      responses:
        "200":
          content:
            application/hal+json:
              examples:
                form:
                  $ref: '#/components/examples/MembershipFormResponse'
              schema:
                $ref: '#/components/schemas/MembershipFormModel'
          description: OK
        "400":
          $ref: '#/components/responses/InvalidRequestBody'
        "403":
          content:
            application/hal+json:
              example:
                _type: Error
                errorIdentifier: urn:openproject-org:api:v3:errors:MissingPermission
                message: You are not authorized to access this resource.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permission:** manage memberships in any project
        "406":
          $ref: '#/components/responses/MissingContentType'
        "415":
          $ref: '#/components/responses/UnsupportedMediaType'
      summary: Form create membership
      tags:
      - Memberships
  /api/v3/memberships/schema:
    get:
      description: Retrieves the schema for the membership resource object.
      operationId: get_membership_schema
      responses:
        "200":
          content:
            application/hal+json:
              examples:
                schema:
                  $ref: '#/components/examples/MembershipSchemaResponse'
              schema:
                $ref: '#/components/schemas/MembershipSchemaModel'
          description: OK
        "403":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:openproject-org:api:v3:errors:MissingPermission
                    message: You are not authorized to access this resource.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the client does not have sufficient permissions to see the schema.

            **Required permission:** manage members or view memberships on any project
      summary: Schema membership
      tags:
      - Memberships
  /api/v3/memberships/{id}:
    delete:
      description: Deletes the membership.
      operationId: delete_membership
      parameters:
      - description: Membership id
        example: 1
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "204":
          description: Returned if the membership was successfully deleted
        "403":
          content:
            application/hal+json:
              example:
                _type: Error
                errorIdentifier: urn:openproject-org:api:v3:errors:MissingPermission
                message: You are not authorized to access this resource.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permission:** manage members
        "404":
          content:
            application/hal+json:
              example:
                _type: Error
                errorIdentifier: urn:openproject-org:api:v3:errors:NotFound
                message: The requested resource could not be found.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the membership does not exist or the client does not have sufficient permissions
            to see it.

            **Required permission:** view members

            *Note: A client without sufficient permissions shall not be able to test for the existence of
            a version. That's why a 404 is returned here, even if a 403 might be more appropriate.*
        "406":
          $ref: '#/components/responses/MissingContentType'
        "415":
          $ref: '#/components/responses/UnsupportedMediaType'
      summary: Delete membership
      tags:
      - Memberships
    get:
      description: Retrieves a membership resource identified by the given id.
      operationId: get_membership
      parameters:
      - description: Membership id
        example: 1
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              examples:
                simple membership:
                  $ref: '#/components/examples/MembershipSimpleResponse'
              schema:
                $ref: '#/components/schemas/MembershipReadModel'
          description: OK
        "404":
          content:
            application/hal+json:
              example:
                _type: Error
                errorIdentifier: urn:openproject-org:api:v3:errors:NotFound
                message: The requested resource could not be found.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the membership does not exist or the client does not have sufficient permissions
            to see it.

            **Required permission:** view members **or** manage members

            *Note: A client without sufficient permissions shall not be able to test for the existence of
            a membership. That's why a 404 is returned here, even if a 403 might be more appropriate.*
      summary: Get a membership
      tags:
      - Memberships
    patch:
      description: |-
        Updates the given membership by applying the attributes provided in the body.

        By providing a `notificationMessage` within the `_meta` block of the payload, the client can include a customized message to the user
        of the updated membership. In case of a group, the message will be sent to every user belonging to the group.

        By including `{ "sendNotifications": false }` within the `_meta` block of the payload, no notifications is send out at all.
      operationId: update_membership
      parameters:
      - description: Membership id
        example: 1
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              add roles:
                $ref: '#/components/examples/MembershipUpdateAdditionalRoles'
            schema:
              $ref: '#/components/schemas/MembershipWriteModel'
      responses:
        "200":
          content:
            application/hal+json:
              examples:
                simple membership:
                  $ref: '#/components/examples/MembershipSimpleResponse'
              schema:
                $ref: '#/components/schemas/MembershipReadModel'
          description: OK
        "400":
          $ref: '#/components/responses/InvalidRequestBody'
        "403":
          content:
            application/hal+json:
              example:
                _type: Error
                errorIdentifier: urn:openproject-org:api:v3:errors:MissingPermission
                message: You are not authorized to access this resource.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permission:** Manage members in the membership's project.
        "404":
          content:
            application/hal+json:
              example:
                _type: Error
                errorIdentifier: urn:openproject-org:api:v3:errors:NotFound
                message: The requested resource could not be found.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the membership does not exist or the client does not have sufficient permissions
            to see it.

            **Required permission:** view member

            *Note: A client without sufficient permissions shall not be able to test for the existence of
            a version. That's why a 404 is returned here, even if a 403 might be more appropriate.*
        "406":
          $ref: '#/components/responses/MissingContentType'
        "415":
          $ref: '#/components/responses/UnsupportedMediaType'
        "422":
          content:
            application/hal+json:
              example:
                _embedded:
                  details:
                    attribute: roles
                _type: Error
                errorIdentifier: urn:openproject-org:api:v3:errors:PropertyConstraintViolation
                message: Roles has an unassignable role.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if:

            * a constraint for a property was violated (`PropertyConstraintViolation`)
      summary: Update membership
      tags:
      - Memberships
  /api/v3/memberships/{id}/form:
    post:
      description: |-
        Requests and validates the update form for a membership identified by the given id. The request payload, if sent,
        is validated. The form endpoint itself does not change the membership.
      operationId: form_update_membership
      parameters:
      - description: Membership id
        example: 1
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              no notification:
                $ref: '#/components/examples/MembershipCreateRequestNoNotification'
              custom message:
                $ref: '#/components/examples/MembershipCreateRequestCustomMessage'
            schema:
              $ref: '#/components/schemas/MembershipWriteModel'
      responses:
        "200":
          content:
            application/hal+json:
              examples:
                simple membership:
                  $ref: '#/components/examples/MembershipSimpleResponse'
              schema:
                $ref: '#/components/schemas/MembershipReadModel'
          description: OK
        "400":
          $ref: '#/components/responses/InvalidRequestBody'
        "403":
          content:
            application/hal+json:
              example:
                _type: Error
                errorIdentifier: urn:openproject-org:api:v3:errors:MissingPermission
                message: You are not authorized to access this resource.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permission:** manage versions in the version's project
        "406":
          $ref: '#/components/responses/MissingContentType'
        "415":
          $ref: '#/components/responses/UnsupportedMediaType'
      summary: Form update membership
      tags:
      - Memberships
  /api/v3/my_preferences:
    get:
      description: ""
      operationId: Show_my_preferences
      responses:
        "200":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _links:
                      self:
                        href: /api/v3/my_preferences
                      user:
                        href: /api/v3/users/1
                        title: John Sheppard
                      updateImmediately:
                        href: /api/v3/users/3/preferences
                        method: patch
                    _type: UserPreferences
                    commentSortDescending: true
                    hideMail: false
                    timeZone: Europe/Berlin
                    warnOnLeavingUnsaved: true
                    notifications:
                      watched: false
                      involved: true
                      mentioned: false
                      shared: true
                      newsAdded: "false,"
                      newsCommented: false
                      documentAdded: false
                      forumMessages: false
                      wikiPageAdded: false
                      wikiPageUpdated: false
                      membershipAdded: false
                      membershipUpdated: false
                      workPackageCommented: false
                      workPackageProcessed: false
                      workPackagePrioritized: false
                      workPackageScheduled: false
                      _links:
                        project:
                          href: null
              schema:
                $ref: '#/components/schemas/UserPreferencesModel'
          description: OK
        "401":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:openproject-org:api:v3:errors:Unauthenticated
                    message: You need to be authenticated to access this resource.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Returned if no user is currently authenticated
      summary: Show my preferences
      tags:
      - UserPreferences
    patch:
      description: "When calling this endpoint the client provides a single object,\
        \ containing the properties that it wants to change, in the body."
      operationId: Update_UserPreferences
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Update_UserPreferences_request'
      responses:
        "200":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _links:
                      self:
                        href: /api/v3/my_preferences
                      user:
                        href: /api/v3/users/1
                        title: John Sheppard
                      updateImmediately:
                        href: /api/v3/users/3/preferences
                        method: patch
                    _type: UserPreferences
                    commentSortDescending: true
                    hideMail: false
                    timeZone: Europe/Berlin
                    warnOnLeavingUnsaved: true
                    notifications:
                      watched: false
                      involved: true
                      mentioned: false
                      shared: true
                      newsAdded: "false,"
                      newsCommented: false
                      documentAdded: false
                      forumMessages: false
                      wikiPageAdded: false
                      wikiPageUpdated: false
                      membershipAdded: false
                      membershipUpdated: false
                      workPackageCommented: false
                      workPackageProcessed: false
                      workPackagePrioritized: false
                      workPackageScheduled: false
                      _links:
                        project:
                          href: null
              schema:
                $ref: '#/components/schemas/UserPreferencesModel'
          description: OK
        "400":
          $ref: '#/components/responses/InvalidRequestBody'
        "401":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:openproject-org:api:v3:errors:Unauthenticated
                    message: You need to be authenticated to access this resource.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Returned if no user is currently authenticated
        "406":
          $ref: '#/components/responses/MissingContentType'
        "415":
          $ref: '#/components/responses/UnsupportedMediaType'
        "422":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:openproject-org:api:v3:errors:PropertyConstraintViolation
                    message: Time zone is not set to one of the allowed values.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the update contains invalid properties.
            Reasons are:

            * Specifying an invalid type

            * Using an unknown time zone
      summary: Update my preferences
      tags:
      - UserPreferences
  /api/v3/news:
    get:
      description: Lists news. The news returned depend on the provided parameters
        and also on the requesting user's permissions.
      operationId: List_News
      parameters:
      - description: Page number inside the requested collection.
        example: "25"
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 1
          type: integer
        style: form
      - description: Number of elements to display per page.
        example: "25"
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          type: integer
        style: form
      - description: |-
          JSON specifying sort criteria.
          Accepts the same format as returned by the [queries](https://www.openproject.org/docs/api/endpoints/queries/) endpoint. Currently supported sorts are:

          + id: Sort by primary key

          + created_at: Sort by news creation datetime
        example: "[[\"created_at\", \"asc\"]]"
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          type: string
        style: form
      - description: |-
          JSON specifying filter conditions.
          Accepts the same format as returned by the [queries](https://www.openproject.org/docs/api/endpoints/queries/) endpoint. Currently supported filters are:

          + project_id: Filter news by project
        example: "[{ \"project_id\": { \"operator\": \"=\", \"values\": [\"1\", \"\
          2\"] } }]"
        explode: true
        in: query
        name: filters
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _embedded:
                      elements:
                      - _links:
                          author:
                            href: /api/v3/users/2
                            title: Peggie Feeney
                          project:
                            href: /api/v3/projects/1
                            title: Seeded Project
                          self:
                            href: /api/v3/news/1
                            title: asperiores possimus nam doloribus ab
                        _type: News
                        createdAt: 2015-03-20T12:57:01.209Z
                        description:
                          format: markdown
                          html: <p>Videlicet deserunt aequitas cognatus. Concedo quia
                            est quia pariatur vorago vallum. Calco autem atavus accusamus
                            conscendo cornu ulterius. Tam patria ago consectetur ventito
                            sustineo nihil caecus. Supra officiis eos velociter somniculosus
                            tonsor qui. Suffragium aduro arguo angustus cogito quia
                            tolero vulnus. Supplanto sortitus cresco apud vestrum
                            qui.</p>
                          raw: Videlicet deserunt aequitas cognatus. Concedo quia
                            est quia pariatur vorago vallum. Calco autem atavus accusamus
                            conscendo cornu ulterius. Tam patria ago consectetur ventito
                            sustineo nihil caecus. Supra officiis eos velociter somniculosus
                            tonsor qui. Suffragium aduro arguo angustus cogito quia
                            tolero vulnus. Supplanto sortitus cresco apud vestrum
                            qui.
                        id: 1
                        summary: Celebrer spiculum colo viscus claustrum atque. Id
                          nulla culpa sumptus. Comparo crapula depopulo demonstro.
                        title: asperiores possimus nam doloribus ab
                      - _links:
                          author:
                            href: /api/v3/users/2
                            title: Peggie Feeney
                          project:
                            href: /api/v3/projects/1
                            title: Seeded Project
                          self:
                            href: /api/v3/news/2
                            title: terminatio tutamen. Officia adeptio sp
                        _type: News
                        createdAt: 2015-03-20T12:57:01.262Z
                        description:
                          format: markdown
                          html: <p>Amicitia alius cattus voluntarius. Virgo viduo
                            terminatio tutamen. Officia adeptio spectaculum atavus
                            nisi cum concido bis. Harum caecus auxilium sol theatrum
                            eaque consequatur. Omnis aeger suus adipisci cicuta. Cur
                            delicate alias curto cursim atqui talio fugiat.</p>
                          raw: Amicitia alius cattus voluntarius. Virgo viduo terminatio
                            tutamen. Officia adeptio spectaculum atavus nisi cum concido
                            bis. Harum caecus auxilium sol theatrum eaque consequatur.
                            Omnis aeger suus adipisci cicuta. Cur delicate alias curto
                            cursim atqui talio fugiat.
                        id: 2
                        summary: Consequatur sequi surculus creo tui aequitas.
                        title: terminatio tutamen. Officia adeptio sp
                    _links:
                      changeSize:
                        href: /api/v3/news?offset=1&pageSize=%7Bsize%7D
                        templated: true
                      jumpTo:
                        href: /api/v3/news?offset=%7Boffset%7D&pageSize=2
                        templated: true
                      nextByOffset:
                        href: /api/v3/news?offset=2&pageSize=2
                      self:
                        href: /api/v3/news?offset=1&pageSize=2
                    _type: Collection
                    count: 2
                    offset: 1
                    pageSize: 2
                    total: 78
              schema:
                $ref: '#/components/schemas/List_of_NewsModel'
          description: OK
        "400":
          $ref: '#/components/responses/InvalidRequestBody'
        "403":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:openproject-org:api:v3:errors:MissingPermission
                    message: You are not authorized to view this resource.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Returned if the client is not logged in and login is required.
      summary: List News
      tags:
      - News
  /api/v3/news/{id}:
    get:
      description: ""
      operationId: View_news
      parameters:
      - description: news id
        example: "1"
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _embedded:
                      author:
                        _type: User...
                      project:
                        _type: Project...
                    _links:
                      author:
                        href: /api/v3/users/2
                        title: Peggie Feeney
                      project:
                        href: /api/v3/projects/1
                        title: A project
                      self:
                        href: /api/v3/news/1
                        title: asperiores possimus nam doloribus ab
                    _type: News
                    createdAt: 2015-03-20T12:57:01.601Z
                    description:
                      format: markdown
                      html: <p>Videlicet deserunt aequitas cognatus. Concedo quia
                        est quia pariatur vorago vallum. Calco autem atavus accusamus
                        conscendo cornu ulterius. Tam patria ago consectetur ventito
                        sustineo nihil caecus. Supra officiis eos velociter somniculosus
                        tonsor qui. Suffragium aduro arguo angustus cogito quia tolero
                        vulnus. Supplanto sortitus cresco apud vestrum qui.</p>
                      raw: Videlicet deserunt aequitas cognatus. Concedo quia est
                        quia pariatur vorago vallum. Calco autem atavus accusamus
                        conscendo cornu ulterius. Tam patria ago consectetur ventito
                        sustineo nihil caecus. Supra officiis eos velociter somniculosus
                        tonsor qui. Suffragium aduro arguo angustus cogito quia tolero
                        vulnus. Supplanto sortitus cresco apud vestrum qui.
                    id: 1
                    summary: Celebrer spiculum colo viscus claustrum atque. Id nulla
                      culpa sumptus. Comparo crapula depopulo demonstro.
                    title: asperiores possimus nam doloribus ab
              schema:
                $ref: '#/components/schemas/NewsModel'
          description: OK
        "404":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:openproject-org:api:v3:errors:NotFound
                    message: The requested resource could not be found.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the news does not exist or if the user does not have permission to view it.

            **Required permission** being member of the project the news belongs to
      summary: View news
      tags:
      - News
  /api/v3/notifications:
    get:
      description: |-
        Returns the collection of available in-app notifications. The notifications returned depend on the provided
        parameters and also on the requesting user's permissions.

        Contrary to most collections, this one also links to and embeds schemas for the `details` properties of the notifications returned.
        This is an optimization. Clients will receive the information necessary to display the various types of details that a notification
        can carry.
      operationId: list_notifications
      parameters:
      - description: Page number inside the requested collection.
        example: 25
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 1
          type: integer
        style: form
      - description: Number of elements to display per page.
        example: 25
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          default: 20
          type: integer
        style: form
      - description: |-
          JSON specifying sort criteria.
          Accepts the same format as returned by the [queries](https://www.openproject.org/docs/api/endpoints/queries/) endpoint. Currently supported sorts are:

          + id: Sort by primary key

          + reason: Sort by notification reason

          + readIAN: Sort by read status
        example: "[[\"reason\", \"asc\"]]"
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          type: string
        style: form
      - description: |-
          string specifying group_by criteria.

          + reason: Group by notification reason

          + project: Sort by associated project
        example: reason
        explode: true
        in: query
        name: groupBy
        required: false
        schema:
          type: string
        style: form
      - description: |-
          JSON specifying filter conditions.
          Accepts the same format as returned by the [queries](https://www.openproject.org/docs/api/endpoints/queries/) endpoint. Currently supported filters are:

          + id: Filter by primary key

          + project: Filter by the project the notification was created in

          + readIAN: Filter by read status

          + reason: Filter by the reason, e.g. 'mentioned' or 'assigned' the notification was created because of

          + resourceId: Filter by the id of the resource the notification was created for. Ideally used together with the `resourceType` filter.

          + resourceType: Filter by the type of the resource the notification was created for. Ideally used together with the `resourceId` filter.
        example: "[{ \"readIAN\": { \"operator\": \"=\", \"values\": [\"t\"] } }]"
        explode: true
        in: query
        name: filters
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/hal+json:
              examples:
                Collection of notifications:
                  $ref: '#/components/examples/NotificationCollection'
              schema:
                $ref: '#/components/schemas/NotificationCollectionModel'
          description: OK
        "403":
          content:
            application/hal+json:
              example:
                _type: Error
                errorIdentifier: urn:openproject-org:api:v3:errors:MissingPermission
                message: You are not authorized to view this resource.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Returned if the client is not logged in and login is required.
        "422":
          content:
            application/hal+json:
              example:
                _type: Error
                errorIdentifier: urn:openproject-org:api:v3:errors:InvalidQuery
                message: Filters Invalid filter does not exist.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Returned if the client sends invalid request parameters e.g.
            filters
      summary: Get notification collection
      tags:
      - Notifications
  /api/v3/notifications/read_ian:
    post:
      description: |-
        Marks the whole notification collection as read. The collection contains only elements the authenticated user can
        see, and can be further reduced with filters.
      operationId: read_notifications
      parameters:
      - description: |-
          JSON specifying filter conditions.
          Accepts the same format as returned by the [queries](https://www.openproject.org/docs/api/endpoints/queries/)
          endpoint. Currently supported filters are:

          + id: Filter by primary key

          + project: Filter by the project the notification was created in

          + reason: Filter by the reason, e.g. 'mentioned' or 'assigned' the notification was created because of

          + resourceId: Filter by the id of the resource the notification was created for. Ideally used together with the
            `resourceType` filter.

          + resourceType: Filter by the type of the resource the notification was created for. Ideally used together with
            the `resourceId` filter.
        example: "[{ \"reason\": { \"operator\": \"=\", \"values\": [\"mentioned\"\
          ] } }]"
        explode: true
        in: query
        name: filters
        required: false
        schema:
          type: string
        style: form
      responses:
        "204":
          description: OK
        "400":
          content:
            application/hal+json:
              example:
                _type: Error
                errorIdentifier: urn:openproject-org:api:v3:errors:InvalidQuery
                message:
                - Filters Invalid filter does not exist.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Returned if the request is not properly formatted.
        "406":
          $ref: '#/components/responses/MissingContentType'
        "415":
          $ref: '#/components/responses/UnsupportedMediaType'
      summary: Read all notifications
      tags:
      - Notifications
  /api/v3/notifications/unread_ian:
    post:
      description: |-
        Marks the whole notification collection as unread. The collection contains only elements the authenticated user can
        see, and can be further reduced with filters.
      operationId: unread_notifications
      parameters:
      - description: |-
          JSON specifying filter conditions.
          Accepts the same format as returned by the [queries](https://www.openproject.org/docs/api/endpoints/queries/)
          endpoint. Currently supported filters are:

          + id: Filter by primary key

          + project: Filter by the project the notification was created in

          + reason: Filter by the reason, e.g. 'mentioned' or 'assigned' the notification was created because of

          + resourceId: Filter by the id of the resource the notification was created for. Ideally used together with the
            `resourceType` filter.

          + resourceType: Filter by the type of the resource the notification was created for. Ideally used together with
            the `resourceId` filter.
        example: "[{ \"reason\": { \"operator\": \"=\", \"values\": [\"mentioned\"\
          ] } }]"
        explode: true
        in: query
        name: filters
        required: false
        schema:
          type: string
        style: form
      responses:
        "204":
          description: OK
        "400":
          $ref: '#/components/responses/InvalidRequestBody'
        "406":
          $ref: '#/components/responses/MissingContentType'
        "415":
          $ref: '#/components/responses/UnsupportedMediaType'
      summary: Unread all notifications
      tags:
      - Notifications
  /api/v3/notifications/{id}:
    get:
      description: Returns the notification identified by the notification id.
      operationId: view_notification
      parameters:
      - description: notification id
        example: "1"
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              examples:
                Date alert notification:
                  $ref: '#/components/examples/DateAlertNotification'
                Mentioned notification:
                  $ref: '#/components/examples/MentionedNotification'
              schema:
                $ref: '#/components/schemas/NotificationModel'
          description: OK
        "404":
          content:
            application/hal+json:
              example:
                _type: Error
                errorIdentifier: urn:openproject-org:api:v3:errors:NotFound
                message: The requested resource could not be found.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the notification does not exist or if the user does not have permission to view it.

            **Required permission** being recipient of the notification
      summary: Get the notification
      tags:
      - Notifications
  /api/v3/notifications/{notification_id}/details/{id}:
    get:
      description: Returns an individual detail of a notification identified by the
        notification id and the id of the detail.
      operationId: view_notification_detail
      parameters:
      - description: notification id
        example: "1"
        explode: false
        in: path
        name: notification_id
        required: true
        schema:
          type: integer
        style: simple
      - description: detail id
        example: "0"
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              examples:
                Start date notification detail:
                  $ref: '#/components/examples/ValuesPropertyStartDate'
                Due date notification detail:
                  $ref: '#/components/examples/ValuesPropertyDueDate'
                Date notification detail for milestone work package:
                  $ref: '#/components/examples/ValuesPropertyDate'
              schema:
                $ref: '#/components/schemas/ValuesPropertyModel'
          description: OK
        "404":
          content:
            application/hal+json:
              example:
                _type: Error
                errorIdentifier: urn:openproject-org:api:v3:errors:NotFound
                message: The requested resource could not be found.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the notification or the detail of it does not exist or if the user does not have permission to view it.

            **Required permission** being recipient of the notification
      summary: Get a notification detail
      tags:
      - Notifications
  /api/v3/notifications/{id}/read_ian:
    post:
      description: Marks the given notification as read.
      operationId: read_notification
      parameters:
      - description: notification id
        example: "1"
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "204":
          description: OK
        "404":
          content:
            application/hal+json:
              example:
                _type: Error
                errorIdentifier: urn:openproject-org:api:v3:errors:NotFound
                message: The requested resource could not be found.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the notification does not exist or if the user does not have permission to view it.

            **Required permission** being recipient of the notification
      summary: Read notification
      tags:
      - Notifications
  /api/v3/notifications/{id}/unread_ian:
    post:
      description: Marks the given notification as unread.
      operationId: unread_notification
      parameters:
      - description: notification id
        example: "1"
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "204":
          description: OK
        "404":
          content:
            application/hal+json:
              example:
                _type: Error
                errorIdentifier: urn:openproject-org:api:v3:errors:NotFound
                message: The requested resource could not be found.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the notification does not exist or if the user does not have permission to view it.

            **Required permission** being recipient of the notification
      summary: Unread notification
      tags:
      - Notifications
  /api/v3/oauth_applications/{id}:
    get:
      description: |-
        Retrieves the OAuth 2 provider application for the given identifier. The secret will not be part of the response,
        instead a `confidential` flag is indicating, whether there is a secret or not.
      operationId: get_oauth_application
      parameters:
      - description: OAuth application id
        example: 1337
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/OAuthApplicationReadModel'
          description: OK
        "403":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:openproject-org:api:v3:errors:MissingPermission
                    message: You are not authorized to access this resource.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permission:** admin
        "404":
          content:
            application/hal+json:
              example:
                _type: Error
                errorIdentifier: urn:openproject-org:api:v3:errors:NotFound
                message: The requested resource could not be found.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Returned if the application does not exist.
      summary: Get the oauth application.
      tags:
      - OAuth 2
  /api/v3/oauth_client_credentials/{id}:
    get:
      description: |-
        Retrieves the OAuth 2 client credentials for the given identifier. The secret will not be part of the response,
        instead a `confidential` flag is indicating, whether there is a secret or not.
      operationId: get_oauth_client_credentials
      parameters:
      - description: OAuth Client Credentials id
        example: 1337
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/OAuthClientCredentialsReadModel'
          description: OK
        "403":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:openproject-org:api:v3:errors:MissingPermission
                    message: You are not authorized to access this resource.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permission:** admin
        "404":
          content:
            application/hal+json:
              example:
                _type: Error
                errorIdentifier: urn:openproject-org:api:v3:errors:NotFound
                message: The requested resource could not be found.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Returned if the object does not exist.
      summary: Get the oauth client credentials object.
      tags:
      - OAuth 2
  /api/v3/posts/{id}:
    get:
      description: Retrieve an individual post as identified by the id parameter
      operationId: View_Post
      parameters:
      - description: Post's identifier
        example: "1"
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _embedded:
                      project:
                        _type: Project...
                    _links:
                      addAttachment:
                        href: /api/v3/posts/1/attachments
                        method: post
                      attachments:
                        href: /api/v3/posts/1/attachments
                      project:
                        href: /api/v3/projects/1
                        title: A project with a title
                      self:
                        href: /api/v3/posts/1
                    _type: Post
                    id: 1
                    subject: A post with a subject
              schema:
                $ref: '#/components/schemas/PostModel'
          description: OK
        "404":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:openproject-org:api:v3:errors:NotFound
                    message: The requested resource could not be found.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the post does not exist or the client does not have sufficient permissions to see it.

            **Required permission:** view messages in the post's project
      summary: View Post
      tags:
      - Posts
  /api/v3/posts/{id}/attachments:
    get:
      description: ""
      operationId: List_attachments_by_post
      parameters:
      - description: ID of the post whose attachments will be listed
        example: "1"
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _embedded:
                      elements:
                      - _links:
                          author:
                            href: /api/v3/users/1
                            title: OpenProject Admin
                          container:
                            href: /api/v3/posts/72
                            title: wiki
                          delete:
                            href: /api/v3/attachments/376
                            method: delete
                          downloadLocation:
                            href: /api/v3/attachments/376/content
                          self:
                            href: /api/v3/attachments/376
                            title: 200.gif
                        _type: Attachment
                        contentType: image/gif
                        createdAt: 2018-06-01T07:24:19.706Z
                        description:
                          format: plain
                          html: ""
                          raw: ""
                        digest:
                          algorithm: md5
                          hash: 7ac9c97ef73d47127f590788b84c0c1c
                        fileName: some.gif
                        fileSize: 3521772
                        id: 376
                    _links:
                      self:
                        href: /api/v3/posts/72/attachments
                    _type: Collection
                    count: 1
                    total: 1
              schema:
                $ref: '#/components/schemas/Attachments_Model'
          description: OK
        "404":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:openproject-org:api:v3:errors:NotFound
                    message: The requested resource could not be found.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the post does not exist or the client does not have sufficient permissions
            to see it.

            **Required permission:** view messages

            *Note: A client without sufficient permissions shall not be able to test for the existence of a post.
            That's why a 404 is returned here, even if a 403 might be more appropriate.*
      summary: List attachments by post
      tags:
      - Attachments
    post:
      description: Adds an attachment with the post as it's container.
      operationId: Add_attachment_to_post
      parameters:
      - description: ID of the post to receive the attachment
        example: "1"
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _embedded:
                      author:
                        _links:
                          lock:
                            href: /api/v3/users/1/lock
                            method: post
                            title: Set lock on admin
                          self:
                            href: /api/v3/users/1
                            title: OpenProject Admin
                          showUser:
                            href: /users/1
                            type: text/html
                          updateImmediately:
                            href: /api/v3/users/1
                            method: patch
                            title: Update admin
                        _type: User
                        admin: true
                        avatar: ""
                        createdAt: 2015-03-20T12:56:52.850Z
                        email: null
                        firstName: OpenProject
                        id: 1
                        identityUrl: null
                        lastName: Admin
                        login: admin
                        name: OpenProject Admin
                        status: active
                        updatedAt: 2018-05-29T13:57:44.604Z
                      container:
                        _links:
                          addAttachment:
                            href: /api/v3/posts/150/attachments
                            method: post
                          attachments:
                            href: /api/v3/posts/150/attachments
                          project:
                            href: /api/v3/projects/12
                            title: Demo project
                          self:
                            href: /api/v3/posts/150
                        _type: Post
                        id: 150
                        subject: sfsdfsdfsdfsdf
                    _links:
                      author:
                        href: /api/v3/users/1
                        title: OpenProject Admin
                      container:
                        href: /api/v3/posts/150
                        title: sfsdfsdfsdfsdf
                      delete:
                        href: /api/v3/attachments/377
                        method: delete
                      downloadLocation:
                        href: /api/v3/attachments/377/content
                      self:
                        href: /api/v3/attachments/377
                        title: 200.gif
                    _type: Attachment
                    contentType: image/gif
                    createdAt: 2018-06-01T07:53:36.831Z
                    description:
                      format: plain
                      html: ""
                      raw: ""
                    digest:
                      algorithm: md5
                      hash: 7ac9c97ef73d47127f590788b84c0c1c
                    fileName: some.gif
                    fileSize: 3521772
                    id: 377
          description: OK
        "400":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:openproject-org:api:v3:errors:InvalidRequestBody
                    message: The request could not be parsed as JSON.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the client sends a not understandable request. Reasons include:

            * Omitting one of the required parts (metadata and file)

            * sending unparsable JSON in the metadata part
        "403":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:openproject-org:api:v3:errors:MissingPermission
                    message: You are not allowed to delete this attachment.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permission:** edit messages

            *Note that you will only receive this error, if you are at least allowed to see the wiki page*
        "404":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:openproject-org:api:v3:errors:NotFound
                    message: The requested resource could not be found.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the post does not exist or the client does not have sufficient permissions
            to see it.

            **Required permission:** view messages

            *Note: A client without sufficient permissions shall not be able to test for the existence of a post.
            That's why a 404 is returned here, even if a 403 might be more appropriate.*
        "406":
          $ref: '#/components/responses/MissingContentType'
        "415":
          $ref: '#/components/responses/UnsupportedMediaType'
        "422":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:openproject-org:api:v3:errors:PropertyConstraintViolation
                    message: File is too large (maximum size is 5242880 Bytes).
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the client tries to send an invalid attachment.
            Reasons are:

            * Omitting the file name (`fileName` property of metadata part)

            * Sending a file that is too large
      summary: Add attachment to post
      tags:
      - Attachments
  /api/v3/priorities:
    get:
      description: ""
      operationId: List_all_Priorities
      responses:
        "200":
          content:
            application/hal+json:
              examples:
                simple priority collection:
                  $ref: '#/components/examples/PriorityCollection'
              schema:
                $ref: '#/components/schemas/PriorityCollectionModel'
          description: OK
        "403":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:openproject-org:api:v3:errors:MissingPermission
                    message: You are not allowed to see the priorities.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permission:** view work package (on any project)
      summary: List all Priorities
      tags:
      - Priorities
  /api/v3/priorities/{id}:
    get:
      description: ""
      operationId: View_Priority
      parameters:
      - description: Priority id
        example: "1"
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _links:
                      self:
                        href: /api/v3/priorities/1
                        title: Low
                    _type: Priority
                    id: 1
                    isActive: true
                    isDefault: false
                    name: Low
                    position: 1
              schema:
                $ref: '#/components/schemas/PriorityModel'
          description: OK
        "403":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:openproject-org:api:v3:errors:MissingPermission
                    message: You are not allowed to see this priority.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permission:** view work package (on any project)
      summary: View Priority
      tags:
      - Priorities
  /api/v3/project_storages:
    get:
      description: Gets a collection of all project storages that meet the provided
        filters and the user has permission to see them.
      operationId: list_project_storages
      parameters:
      - description: |-
          JSON specifying filter conditions.
          Accepts the same format as returned by the [queries](https://www.openproject.org/docs/api/endpoints/queries/)
          endpoint. Currently supported filters are:

          - project_id
          - storage_id
          - storage_url
        example: "[{ \"project_id\": { \"operator\": \"=\", \"values\": [\"42\"] }},\
          \ { \"storage_id\": { \"operator\": \"=\", \"values\": [\"1337\"] }}]"
        explode: true
        in: query
        name: filters
        required: false
        schema:
          default: "[]"
          type: string
        style: form
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ProjectStorageCollectionModel'
          description: OK
        "400":
          content:
            application/hal+json:
              example:
                _type: Error
                errorIdentifier: urn:openproject-org:api:v3:errors:InvalidQuery
                message: The query parameter 'filters' is missing or malformed.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Returned if any given filter is invalid.
      summary: Gets a list of project storages
      tags:
      - File Links
  /api/v3/project_storages/{id}:
    get:
      description: |-
        Gets a project storage resource. This resource contains all data that is applicable on the relation between a
        storage and a project.
      operationId: get_project_storage
      parameters:
      - description: Project storage id
        example: 1337
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ProjectStorageModel'
          description: OK
        "404":
          content:
            application/hal+json:
              example:
                _type: Error
                errorIdentifier: urn:openproject-org:api:v3:errors:NotFound
                message: The requested resource could not be found.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the project storage does not exist or the client does not have sufficient permissions to see it.

            **Required permission:** view file links
      summary: Gets a project storage
      tags:
      - File Links
  /api/v3/project_storages/{id}/open:
    get:
      description: |-
        Gets a redirect to the location of the project storage's remote origin. If the project storage has a project
        folder, it is opened at this location. If not, the storage root is opened.
      operationId: open_project_storage
      parameters:
      - description: Project storage id
        example: 1337
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "303":
          description: Redirect
          headers:
            Location:
              explode: false
              schema:
                format: uri
                type: string
              style: simple
        "403":
          content:
            application/hal+json:
              example:
                _type: Error
                errorIdentifier: urn:openproject-org:api:v3:errors:Unauthenticated
                message: You are not authorized to access this resource.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Returned if the authorization token of the current user grants
            no permission to access the remote storage.
        "404":
          content:
            application/hal+json:
              example:
                _type: Error
                errorIdentifier: urn:openproject-org:api:v3:errors:NotFound
                message: The requested resource could not be found.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the project storage does not exist or the client does not have sufficient permissions to see it.

            **Required permission:** view file links
      summary: Open the project storage
      tags:
      - File Links
  /api/v3/projects:
    get:
      description: "Returns a collection of projects. The collection can be filtered\
        \ via query parameters similar to how work packages are filtered. In addition\
        \ to the provided filter, the result set is always limited to only contain\
        \ projects the client is allowed to see."
      operationId: list_projects
      parameters:
      - description: |-
          JSON specifying filter conditions.
          Accepts the same format as returned by the [queries](https://www.openproject.org/docs/api/endpoints/queries/) endpoint.
          Currently supported filters are:

          + active: based on the active property of the project
          + ancestor: filters projects by their ancestor. A project is not considered to be it's own ancestor.
          + created_at: based on the time the project was created
          + latest_activity_at: based on the time the last activity was registered on a project.
          + name_and_identifier: based on both the name and the identifier.
          + parent_id: filters projects by their parent.
          + principal: based on members of the project.
          + storage_id: filters projects by linked storages
          + storage_url: filters projects by linked storages identified by the host url
          + type_id: based on the types active in a project.
          + user_action: based on the actions the current user has in the project.
          + id: based on projects' id.
          + visible: based on the visibility for the user (id) provided as the filter value. This filter is useful for admins to identify the projects visible to a user.

          There might also be additional filters based on the custom fields that have been configured.
        example: "[{ \"ancestor\": { \"operator\": \"=\", \"values\": [\"1\"] }\"\
          \ }]"
        explode: true
        in: query
        name: filters
        required: false
        schema:
          type: string
        style: form
      - description: |-
          JSON specifying sort criteria.
          Currently supported orders are:

          + id
          + name
          + typeahead (sorting by hierarchy and name)
          + created_at
          + public
          + latest_activity_at
          + required_disk_space

          There might also be additional orders based on the custom fields that have been configured.
        example: "[[\"id\", \"asc\"]]"
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          type: string
        style: form
      - description: Comma separated list of properties to include.
        example: "total,elements/identifier,elements/name"
        explode: true
        in: query
        name: select
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/hal+json:
              examples:
                simple project collection:
                  $ref: '#/components/examples/ProjectCollection'
              schema:
                $ref: '#/components/schemas/ProjectCollectionModel'
          description: OK
        "400":
          content:
            application/hal+json:
              example:
                _type: Error
                errorIdentifier: urn:openproject-org:api:v3:errors:InvalidQuery
                message: Filters Invalid filter does not exist.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Returned if the client sends invalid request parameters e.g.
            filters
      summary: List projects
      tags:
      - Projects
    post:
      description: |-
        Creates a new project, applying the attributes provided in the body.

        You can use the form and schema to be retrieve the valid attribute values and by that be guided towards successful creation.
      operationId: create_project
      requestBody:
        content:
          application/json:
            examples:
              with custom fields:
                $ref: '#/components/examples/ProjectBody'
            schema:
              type: object
      responses:
        "201":
          content:
            application/hal+json:
              examples:
                with custom fields:
                  $ref: '#/components/examples/Project'
              schema:
                $ref: '#/components/schemas/ProjectModel'
          description: Created
        "400":
          $ref: '#/components/responses/InvalidRequestBody'
        "403":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:openproject-org:api:v3:errors:MissingPermission
                    message: You are not authorized to access this resource.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permission:** add project which is a global permission
        "406":
          $ref: '#/components/responses/MissingContentType'
        "415":
          $ref: '#/components/responses/UnsupportedMediaType'
        "422":
          content:
            application/hal+json:
              example:
                _embedded:
                  details:
                    attribute: name
                _type: Error
                errorIdentifier: urn:openproject-org:api:v3:errors:PropertyConstraintViolation
                message: Name can't be blank.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if:

            * a constraint for a property was violated (`PropertyConstraintViolation`)
      summary: Create project
      tags:
      - Projects
  /api/v3/projects/form:
    post:
      description: ""
      operationId: Project_create_form
      requestBody:
        content:
          application/json:
            examples:
              with custom fields:
                $ref: '#/components/examples/ProjectBody'
              empty:
                description: Empty request to get the form initially in order to start
                  the guided creation of a project
                value: {}
            schema:
              type: object
      responses:
        "200":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _embedded:
                      payload:
                        _links:
                          customField26:
                            href: null
                            title: null
                          customField31:
                            href: null
                            title: null
                          parent:
                            href: null
                          status:
                            href: null
                        active: true
                        customField30: null
                        customField34: null
                        customField35: Text custom field value
                        customField41:
                          format: markdown
                          html: ""
                          raw: ""
                        customField42: null
                        description:
                          format: markdown
                          html: ""
                          raw: null
                        identifier: new_project_identifier
                        name: New project name
                        public: false
                        statusExplanation:
                          format: markdown
                          html: <p></p>
                          raw: null
                      schema:
                        _dependencies: []
                        _links: {}
                        _type: Schema
                        active:
                          hasDefault: true
                          name: Active
                          required: true
                          type: Boolean
                          writable: true
                        createdAt:
                          hasDefault: false
                          name: Created on
                          required: true
                          type: DateTime
                          writable: false
                        customField26:
                          _links:
                            allowedValues:
                              href: /api/v3/principals?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22%21%22%2C%22values%22%3A%5B%220%22%2C%223%22%5D%7D%7D%2C%7B%22type%22%3A%7B%22operator%22%3A%22%3D%22%2C%22values%22%3A%5B%22User%22%5D%7D%7D%2C%7B%22member%22%3A%7B%22operator%22%3A%22%3D%22%2C%22values%22%3A%5B%22%22%5D%7D%7D%5D&pageSize=0
                          hasDefault: false
                          location: _links
                          name: Project user
                          required: false
                          type: User
                          visibility: default
                          writable: true
                        customField30:
                          hasDefault: false
                          name: some project cf
                          required: false
                          type: Integer
                          visibility: default
                          writable: true
                        customField31:
                          _embedded:
                            allowedValues:
                            - _links:
                                self:
                                  href: /api/v3/custom_options/513
                                  title: abc
                              _type: CustomOption
                              id: 513
                              value: abc
                            - _links:
                                self:
                                  href: /api/v3/custom_options/514
                                  title: def
                              _type: CustomOption
                              id: 514
                              value: def
                            - _links:
                                self:
                                  href: /api/v3/custom_options/515
                                  title: ghi
                              _type: CustomOption
                              id: 515
                              value: ghi
                          _links:
                            allowedValues:
                            - href: /api/v3/custom_options/513
                              title: abc
                            - href: /api/v3/custom_options/514
                              title: def
                            - href: /api/v3/custom_options/515
                              title: ghi
                          hasDefault: false
                          location: _links
                          name: list project cf
                          required: false
                          type: CustomOption
                          visibility: default
                          writable: true
                        customField34:
                          hasDefault: false
                          name: Bool Project CF
                          required: false
                          type: Boolean
                          visibility: default
                          writable: true
                        customField35:
                          hasDefault: false
                          name: text project cf
                          required: true
                          type: String
                          visibility: default
                          writable: true
                        customField41:
                          hasDefault: false
                          name: Long text project cf
                          required: false
                          type: Formattable
                          visibility: default
                          writable: true
                        customField42:
                          hasDefault: false
                          name: Date project cf
                          required: false
                          type: Date
                          visibility: default
                          writable: true
                        description:
                          hasDefault: false
                          name: Description
                          required: false
                          type: Formattable
                          writable: true
                        id:
                          hasDefault: false
                          name: ID
                          required: true
                          type: Integer
                          writable: false
                        identifier:
                          hasDefault: false
                          maxLength: 100
                          minLength: 1
                          name: Identifier
                          required: true
                          type: String
                          writable: true
                        name:
                          hasDefault: false
                          maxLength: 255
                          minLength: 1
                          name: Name
                          required: true
                          type: String
                          writable: true
                        parent:
                          _links:
                            allowedValues:
                              href: /api/v3/projects/available_parent_projects
                          hasDefault: false
                          location: _links
                          name: Subproject of
                          required: false
                          type: Project
                          visibility: default
                          writable: true
                        public:
                          hasDefault: false
                          name: Public
                          required: true
                          type: Boolean
                          writable: true
                        status:
                          _links:
                            allowedValues:
                            - href: /api/v3/project_statuses/on_track
                              title: On track
                            - href: /api/v3/project_statuses/at_risk
                              title: At risk
                            - href: /api/v3/project_statuses/off_track
                              title: Off track
                          hasDefault: true
                          name: Status
                          required: false
                          type: ProjectStatus
                          writable: true
                        statusExplanation:
                          hasDefault: false
                          name: Status explanation
                          required: false
                          type: Formattable
                          writable: true
                        updatedAt:
                          hasDefault: false
                          name: Updated on
                          required: true
                          type: DateTime
                          writable: false
                      validationErrors:
                        identifier:
                          _embedded:
                            details:
                              attribute: identifier
                          _type: Error
                          errorIdentifier: urn:openproject-org:api:v3:errors:PropertyConstraintViolation
                          message: Identifier has already been taken.
                    _links:
                      self:
                        href: /api/v3/projects/form
                        method: post
                      validate:
                        href: /api/v3/projects/form
                        method: post
                    _type: Form
              schema:
                type: object
          description: OK
        "400":
          $ref: '#/components/responses/InvalidRequestBody'
        "403":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:openproject-org:api:v3:errors:MissingPermission
                    message: You are not authorized to access this resource.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permission:** add project which is a global permission
        "406":
          $ref: '#/components/responses/MissingContentType'
        "415":
          $ref: '#/components/responses/UnsupportedMediaType'
      summary: Project create form
      tags:
      - Projects
  /api/v3/projects/schema:
    get:
      description: ""
      operationId: View_project_schema
      responses:
        "200":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _dependencies: []
                    _links:
                      self:
                        href: /api/v3/projects/schema
                    _type: Schema
                    active:
                      hasDefault: true
                      name: Active
                      required: true
                      type: Boolean
                      writable: true
                    createdAt:
                      hasDefault: false
                      name: Created on
                      required: true
                      type: DateTime
                      writable: false
                    customField30:
                      hasDefault: false
                      name: Integer project custom field
                      required: false
                      type: Integer
                      visibility: default
                      writable: true
                    customField31:
                      _links: {}
                      hasDefault: false
                      location: _links
                      name: List project custom field
                      required: false
                      type: CustomOption
                      visibility: default
                      writable: true
                    customField32:
                      _links: {}
                      hasDefault: false
                      location: _links
                      name: Version project custom field
                      required: false
                      type: Version
                      visibility: default
                      writable: true
                    customField34:
                      hasDefault: false
                      name: Boolean project custom field
                      required: false
                      type: Boolean
                      visibility: default
                      writable: true
                    customField35:
                      hasDefault: false
                      name: Text project custom field
                      required: true
                      type: String
                      visibility: default
                      writable: true
                    description:
                      hasDefault: false
                      name: Description
                      required: false
                      type: Formattable
                      writable: true
                    id:
                      hasDefault: false
                      name: ID
                      required: true
                      type: Integer
                      writable: false
                    identifier:
                      hasDefault: false
                      maxLength: 100
                      minLength: 1
                      name: Identifier
                      required: true
                      type: String
                      writable: true
                    name:
                      hasDefault: false
                      maxLength: 255
                      minLength: 1
                      name: Name
                      required: true
                      type: String
                      writable: true
                    parent:
                      _links: {}
                      hasDefault: false
                      location: _links
                      name: Subproject of
                      required: false
                      type: Project
                      visibility: default
                      writable: true
                    public:
                      hasDefault: false
                      name: Public
                      required: true
                      type: Boolean
                      writable: true
                    status:
                      _links:
                        allowedValues:
                        - href: /api/v3/project_statuses/on_track
                          title: On track
                        - href: /api/v3/project_statuses/at_risk
                          title: At risk
                        - href: /api/v3/project_statuses/off_track
                          title: Off track
                      hasDefault: true
                      name: Status
                      required: false
                      type: ProjectStatus
                      writable: true
                    statusExplanation:
                      hasDefault: false
                      name: Status explanation
                      required: false
                      type: Formattable
                      writable: true
                    updatedAt:
                      hasDefault: false
                      name: Updated on
                      required: true
                      type: DateTime
                      writable: false
              schema:
                $ref: '#/components/schemas/Projects_schemaModel'
          description: OK
      summary: View project schema
      tags:
      - Projects
  /api/v3/projects/{id}:
    delete:
      description: |-
        Deletes the project permanently. As this is a lengthy process, the actual deletion is carried out asynchronously.
        So the project might exist well after the request has returned successfully. To prevent unwanted changes to
        the project scheduled for deletion, it is archived at once.
      operationId: Delete_Project
      parameters:
      - description: Project id
        example: "1"
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "204":
          description: |-
            Returned if the project was successfully deleted. There is currently no end point to query for the actual deletion status.
            Such an end point _might_ be added in the future.
        "403":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:openproject-org:api:v3:errors:MissingPermission
                    message: You are not authorized to access this resource.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permission:** admin
        "404":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:openproject-org:api:v3:errors:NotFound
                    message: The requested resource could not be found.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the project does not exist or the client does not have sufficient permissions
            to see it.

            **Required permission:** view project

            *Note: A client without sufficient permissions shall not be able to test for the existence of
            a version. That's why a 404 is returned here, even if a 403 might be more appropriate.*
        "406":
          $ref: '#/components/responses/MissingContentType'
        "415":
          $ref: '#/components/responses/UnsupportedMediaType'
        "422":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _embedded:
                      details:
                        attribute: base
                    _type: Error
                    errorIdentifier: urn:openproject-org:api:v3:errors:PropertyConstraintViolation
                    message: Work packages in non descendant projects reference versions
                      of the project or its descendants.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the project cannot be deleted. This can happen when there are still references to the project in other projects
            that need to be severed at first.
      summary: Delete Project
      tags:
      - Projects
    get:
      description: ""
      operationId: View_project
      parameters:
      - description: Project id
        example: "1"
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              examples:
                with custom fields:
                  $ref: '#/components/examples/Project'
              schema:
                $ref: '#/components/schemas/ProjectModel'
          description: OK
        "404":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:openproject-org:api:v3:errors:NotFound
                    message: The requested resource could not be found.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the project does not exist or the client does not have sufficient permissions
            to see it.

            **Required permission:** view project

            *Note: A client without sufficient permissions shall not be able to test for the existence of a project.
            That's why a 404 is returned here, even if a 403 might be more appropriate.*
      summary: View project
      tags:
      - Projects
    patch:
      description: Updates the given project by applying the attributes provided in
        the body.
      operationId: Update_Project
      parameters:
      - description: Project id
        example: "1"
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              with custom fields:
                $ref: '#/components/examples/ProjectBody'
            schema:
              type: object
      responses:
        "200":
          content:
            application/hal+json:
              examples:
                with custom fields:
                  $ref: '#/components/examples/Project'
              schema:
                $ref: '#/components/schemas/ProjectModel'
          description: OK
        "400":
          $ref: '#/components/responses/InvalidRequestBody'
        "403":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:openproject-org:api:v3:errors:MissingPermission
                    message: You are not authorized to access this resource.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permission:** edit project for the project to be altered
        "404":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:openproject-org:api:v3:errors:NotFound
                    message: The requested resource could not be found.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the project does not exist or the client does not have sufficient permissions
            to see it.

            **Required permission:** view project

            *Note: A client without sufficient permissions shall not be able to test for the existence of
            a version. That's why a 404 is returned here, even if a 403 might be more appropriate.*
        "406":
          $ref: '#/components/responses/MissingContentType'
        "415":
          $ref: '#/components/responses/UnsupportedMediaType'
        "422":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _embedded:
                      details:
                        attribute: name
                    _type: Error
                    errorIdentifier: urn:openproject-org:api:v3:errors:PropertyConstraintViolation
                    message: Name can't be blank.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if:

            * a constraint for a property was violated (`PropertyConstraintViolation`)
      summary: Update Project
      tags:
      - Projects
  /api/v3/projects/{id}/form:
    post:
      description: ""
      operationId: Project_update_form
      parameters:
      - description: Project id
        example: "1"
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              with custom fields:
                $ref: '#/components/examples/ProjectBody'
              empty:
                description: Empty request to get the form initially in order to start
                  the guided update of a project
                value: {}
            schema:
              type: object
      responses:
        "200":
          description: OK
        "400":
          $ref: '#/components/responses/InvalidRequestBody'
        "403":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:openproject-org:api:v3:errors:MissingPermission
                    message: You are not authorized to access this resource.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permission:** edit projects in the project
        "406":
          $ref: '#/components/responses/MissingContentType'
        "415":
          $ref: '#/components/responses/UnsupportedMediaType'
      summary: Project update form
      tags:
      - Projects
  /api/v3/projects/{id}/copy:
    post:
      description: ""
      operationId: Create_project_copy
      parameters:
      - description: Project id
        example: "1"
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "302":
          description: "Returned if the request is successful. It will redirect to\
            \ the job statuses API with the backend job that got created. You can\
            \ query that endpoint to check the status of the copy, and eventually\
            \ get the created project."
        "400":
          $ref: '#/components/responses/InvalidRequestBody'
        "403":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:openproject-org:api:v3:errors:MissingPermission
                    message: You are not authorized to access this resource.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permission:** copy projects in the source project
        "406":
          $ref: '#/components/responses/MissingContentType'
        "415":
          $ref: '#/components/responses/UnsupportedMediaType'
        "422":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _embedded:
                      details:
                        attribute: name
                    _type: Error
                    errorIdentifier: urn:openproject-org:api:v3:errors:PropertyConstraintViolation
                    message: Name can't be blank.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if:

            * a constraint for a property was violated (`PropertyConstraintViolation`)
      summary: Create project copy
      tags:
      - Projects
  /api/v3/projects/{id}/copy/form:
    post:
      description: ""
      operationId: Project_copy_form
      parameters:
      - description: Project id
        example: "1"
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: OK
        "400":
          $ref: '#/components/responses/InvalidRequestBody'
        "403":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:openproject-org:api:v3:errors:MissingPermission
                    message: You are not authorized to access this resource.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permission:** copy projects in the source project
        "406":
          $ref: '#/components/responses/MissingContentType'
        "415":
          $ref: '#/components/responses/UnsupportedMediaType'
      summary: Project copy form
      tags:
      - Projects
  /api/v3/project_statuses/{id}:
    get:
      description: ""
      operationId: View_project_status
      parameters:
      - description: Project status id
        example: on_track
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _links:
                      self:
                        href: /api/v3/project_statuses/on_track
                    _type: ProjectStatus
                    id: on_track
                    name: On track
              schema:
                $ref: '#/components/schemas/View_project_statusModel'
          description: OK
        "404":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:openproject-org:api:v3:errors:NotFound
                    message: The requested resource could not be found.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Returned if the project status does not exist.
      summary: View project status
      tags:
      - Projects
  /api/v3/projects/available_parent_projects:
    get:
      description: |-
        Lists projects which can become parent to another project. Only sound candidates are returned.
        For instance a project cannot become parent of itself or it's children.

        To specify the project for which a parent is queried for, the `of` parameter can be provided. If no `of`
        parameter is provided, a new project is assumed. Then, the check for the hierarchy is omitted as a new project cannot be
        part of a hierarchy yet.

        Candidates can be filtered. Most commonly one will want to filter by name or identifier.
        You can do this through the `filters` parameter which works just like the work package index.

        For instance to find all parent candidates with "rollout" in their name:

        ```
        ?filters=[{"name_and_identifier":{"operator":"~","values":["rollout"]}}]
        ```
      operationId: List_available_parent_project_candidates
      parameters:
      - description: JSON specifying filter conditions.
        example: "[{ \"ancestor\": { \"operator\": \"=\", \"values\": ['1'] }\" }]"
        explode: true
        in: query
        name: filters
        required: false
        schema:
          type: string
        style: form
      - description: The id or identifier of the project the parent candidate is determined
          for
        example: "123"
        explode: true
        in: query
        name: of
        required: false
        schema:
          type: string
        style: form
      - description: |-
          JSON specifying sort criteria.
          Accepts the same format as returned by the [queries](https://www.openproject.org/docs/api/endpoints/queries/) endpoint and allows all the filters and sortBy supported by the project list end point.
        example: "[[\"id\", \"asc\"]]"
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _embedded:
                      elements:
                      - _links:
                          categories:
                            href: /api/v3/projects/6/categories
                          createWorkPackage:
                            href: /api/v3/projects/6/work_packages/form
                            method: post
                          createWorkPackageImmediate:
                            href: /api/v3/projects/6/work_packages
                            method: post
                          self:
                            href: /api/v3/projects/6
                            title: A project
                          status:
                            href: /api/v3/project_statuses/on_track
                            title: On track
                          versions:
                            href: /api/v3/projects/6/versions
                        _type: Project
                        active: true
                        createdAt: 2015-07-06T13:28:14+00:00
                        description:
                          format: markdown
                          html: <p>Lorem <strong>ipsum</strong> dolor sit amet</p>
                          raw: Lorem **ipsum** dolor sit amet
                        id: 6
                        identifier: a_project
                        name: A project
                        public: false
                        statusExplanation:
                          format: markdown
                          html: <p>Everything <strong>fine</strong></p>
                          raw: Everything **fine**
                        type: Customer Project
                        updatedAt: 2015-10-01T09:55:02+00:00
                      - _links:
                          categories:
                            href: /api/v3/projects/14/categories
                          createWorkPackage:
                            href: /api/v3/projects/14/work_packages/form
                            method: post
                          createWorkPackageImmediate:
                            href: /api/v3/projects/14/work_packages
                            method: post
                          self:
                            href: /api/v3/projects/14
                            title: Another project
                          status:
                            href: /api/v3/project_statuses/on_track
                            title: On track
                          versions:
                            href: /api/v3/projects/14/versions
                        _type: Project
                        active: true
                        createdAt: 2016-02-29T12:50:20+00:00
                        description:
                          format: markdown
                          html: ""
                          raw: ""
                        id: 14
                        identifier: another_project
                        name: Another project
                        public: true
                        statusExplanation:
                          format: markdown
                          html: <p>Everything super <strong>fine</strong></p>
                          raw: Everything super **fine**
                        type: null
                        updatedAt: 2016-02-29T12:50:20+00:00
                    _links:
                      self:
                        href: /api/v3/projects/available_parent_projects?of=123
                    _type: Collection
                    count: 2
                    total: 2
              schema:
                $ref: '#/components/schemas/List_available_parent_project_candidatesModel'
          description: OK
        "403":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:openproject-org:api:v3:errors:MissingPermission
                    message: You are not authorized to access this resource.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permission:** edit project in a project or the global add project permission
      summary: List available parent project candidates
      tags:
      - Projects
  /api/v3/projects/{id}/budgets:
    get:
      description: ""
      operationId: view_Budgets_of_a_Project
      parameters:
      - description: Project id
        example: "1"
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _embedded:
                      elements:
                      - _links:
                          self:
                            href: /api/v3/budgets/1
                            title: Q3 2015
                        _type: Budget
                        id: 1
                        subject: Q3 2015
                      - _links:
                          self:
                            href: /api/v3/budgets/2
                            title: Q4 2015
                        _type: Budget
                        id: 2
                        subject: Q4 2015
                    _links:
                      self:
                        href: /api/v3/projects/1/budgets
                    _type: Collection
                    count: 2
                    total: 2
              schema:
                $ref: '#/components/schemas/Budgets_by_ProjectModel'
          description: OK
        "403":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:openproject-org:api:v3:errors:MissingPermission
                    message: You are not allowed to see the budgets of this project.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the client does not have sufficient permissions to see the budgets of the given
            project.

            **Required permission:** view work packages **or** view budgets

            *Note that you will only receive this error, if you are at least allowed to see the corresponding project.*
        "404":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:openproject-org:api:v3:errors:NotFound
                    message: The specified project does not exist.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if either:

            * the project does not exist

            * the client does not have sufficient permissions to see the project

            * the costs module is not enabled on the given project

            **Required permission:** view project

            *Note: A client without sufficient permissions shall not be able to test for the existence of a project.
            That's why a 404 is returned here, even if a 403 might be more appropriate.*
      summary: view Budgets of a Project
      tags:
      - Budgets
  /api/v3/projects/{id}/queries/default:
    get:
      description: "Same as [viewing an existing, persisted Query](https://www.openproject.org/docs/api/endpoints/queries/#list-queries)\
        \ in its response, this resource returns an unpersisted query and by that\
        \ allows to get the default query configuration. The client may also provide\
        \ additional parameters which will modify the default query. The query will\
        \ already be scoped for the project."
      operationId: View_default_query_for_project
      parameters:
      - description: Id of the project the default query is requested for
        example: "1"
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: |-
          JSON specifying filter conditions.
          The filters provided as parameters are not applied to the query but are instead used to override the query's persisted filters.
          All filters also accepted by the work packages endpoint are accepted. If no filter is to be applied, the client should send an empty array (`[]`).
        example: "[{ \"assignee\": { \"operator\": \"=\", \"values\": [\"1\", \"5\"\
          ] }\" }]"
        explode: true
        in: query
        name: filters
        required: false
        schema:
          default: "[{ \"status_id\": { \"operator\": \"o\", \"values\": null }}]"
          type: string
        style: form
      - description: Page number inside the queries' result collection of work packages.
        example: "25"
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 1
          type: integer
        style: form
      - description: Number of elements to display per page for the queries' result
          collection of work packages.
        example: "25"
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          type: integer
        style: form
      - description: JSON specifying sort criteria. The sort criteria is applied to
          the query's result collection of work packages overriding the query's persisted
          sort criteria.
        example: "[[\"status\", \"asc\"]]"
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          default: "[[\"id\", \"asc\"]]"
          type: string
        style: form
      - description: The column to group by. The grouping criteria is applied to the
          to the query's result collection of work packages overriding the query's
          persisted group criteria.
        example: status
        explode: true
        in: query
        name: groupBy
        required: false
        schema:
          type: string
        style: form
      - description: Indicates whether properties should be summed up if they support
          it. The showSums parameter is applied to the to the query's result collection
          of work packages overriding the query's persisted sums property.
        example: true
        explode: true
        in: query
        name: showSums
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: |
          Indicates the timestamps to filter by when showing changed attributes on work packages. Values can be either ISO8601 dates, ISO8601 durations and the following relative date keywords: "oneDayAgo@HH:MM+HH:MM", "lastWorkingDay@HH:MM+HH:MM", "oneWeekAgo@HH:MM+HH:MM", "oneMonthAgo@HH:MM+HH:MM". The first "HH:MM" part represents the zero paded hours and minutes. The last "+HH:MM" part represents the timezone offset from UTC associated with the time. Values older than 1 day are accepted only with valid Enterprise Token available.
        example: "2023-01-01,P-1Y,PT0S,lastWorkingDay@12:00"
        explode: true
        in: query
        name: timestamps
        required: false
        schema:
          default: PT0S
          type: string
        style: form
      - description: Indicates whether the timeline should be shown.
        example: true
        explode: true
        in: query
        name: timelineVisible
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Indicates whether the hierarchy mode should be enabled.
        example: true
        explode: true
        in: query
        name: showHierarchies
        required: false
        schema:
          default: true
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _embedded:
                      results:
                        _embedded:
                          elements:
                          - <--- shortened for brevity --->
                        _links:
                          changeSize:
                            href: /api/v3/projects/42/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=1&pageSize=%7Bsize%7D&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D
                            templated: true
                          createWorkPackage:
                            href: /api/v3/work_packages/form
                            method: post
                          createWorkPackageImmediate:
                            href: /api/v3/work_packages
                            method: post
                          jumpTo:
                            href: /api/v3/projects/42/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=%7Boffset%7D&pageSize=2&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D
                            templated: true
                          self:
                            href: /api/v3/projects/42/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=1&pageSize=2&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D
                        _type: WorkPackageCollection
                        count: 30
                        offset: 1
                        pageSize: 2
                        total: 234
                    _links:
                      columns:
                      - href: /api/v3/queries/columns/id
                        title: ID
                      - href: /api/v3/queries/columns/subject
                        title: Subject
                      - href: /api/v3/queries/columns/type
                        title: Type
                      - href: /api/v3/queries/columns/status
                        title: Status
                      - href: /api/v3/queries/columns/priority
                        title: Priority
                      - href: /api/v3/queries/columns/assignee
                        title: Assignee
                      - href: /api/v3/queries/columns/updated_at
                        title: Updated on
                      groupBy:
                        href: null
                        title: null
                      project:
                        href: /api/v3/projects/42
                        title: Lorem ipsum project
                      results:
                        href: /api/v3/projects/42/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=1&pageSize=2&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D
                      self:
                        href: /api/v3/projects/42/queries/default
                        title: Default
                      sortBy:
                      - href: /api/v3/queries/sort_bys/parent-desc
                        title: Parent (Descending)
                      user:
                        href: /api/v3/users/1
                        title: OpenProject Admin
                    _type: Query
                    filters:
                    - _links:
                        filter:
                          href: /api/v3/queries/filters/status
                          title: Status
                        operator:
                          href: /api/v3/queries/operators/o
                          title: open
                        schema:
                          href: /api/v3/queries/filter_instance_schemas/status
                        values: []
                      _type: StatusQueryFilter
                      name: Status
                    name: default
                    public: false
                    showHierarchies: true
                    starred: false
                    sums: false
                    timelineVisible: false
                    timelineZoomLevel: days
              schema:
                $ref: '#/components/schemas/Default_Query_for_ProjectModel'
          description: OK
        "403":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:openproject-org:api:v3:errors:MissingPermission
                    message: You are not authorized to access this resource.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the client does not have sufficient permissions to see the default query.

            **Required permission:** view work packages in the project
        "404":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:openproject-org:api:v3:errors:NotFound
                    message: The requested resource could not be found.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the client does not have sufficient permissions to see the project.

            **Required permission:** any permission in the project
      summary: View default query for project
      tags:
      - Queries
  /api/v3/projects/{id}/queries/filter_instance_schemas:
    get:
      description: Returns the list of QueryFilterInstanceSchemas defined for a query
        of the specified project.
      operationId: List_Query_Filter_Instance_Schemas_for_Project
      parameters:
      - description: Project id
        example: "1"
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _embedded:
                      elements:
                      - _dependencies:
                        - _type: SchemaDependency
                          dependencies:
                            /api/v3/queries/operators/!:
                              values:
                                _links: {}
                                hasDefault: false
                                name: Values
                                required: true
                                type: "[]User"
                                writable: true
                            /api/v3/queries/operators/!*: {}
                            /api/v3/queries/operators/*: {}
                            /api/v3/queries/operators/=:
                              values:
                                _links: {}
                                hasDefault: false
                                name: Values
                                required: true
                                type: "[]User"
                                writable: true
                          "on": operator
                        _links:
                          filter:
                            href: /api/v3/queries/filters/assignee
                            title: Assignee
                          self:
                            href: /api/v3/queries/filter_instance_schemas/assignee
                        _type: QueryFilterInstanceSchema
                        filter:
                          _links: {}
                          hasDefault: false
                          name: Filter
                          required: true
                          type: QueryFilter
                          writable: true
                        name:
                          hasDefault: true
                          name: Name
                          required: true
                          type: String
                          writable: false
                      - _dependencies:
                        - _type: SchemaDependency
                          dependencies:
                            /api/v3/queries/operators/!:
                              values:
                                _links: {}
                                hasDefault: false
                                name: Values
                                required: true
                                type: "[]User"
                                writable: true
                            /api/v3/queries/operators/=:
                              values:
                                _links: {}
                                hasDefault: false
                                name: Values
                                required: true
                                type: "[]User"
                                writable: true
                          "on": operator
                        _links:
                          filter:
                            href: /api/v3/queries/filters/author
                            title: Author
                          self:
                            href: /api/v3/queries/filter_instance_schemas/author
                        _type: QueryFilterInstanceSchema
                        filter:
                          _links: {}
                          hasDefault: false
                          name: Filter
                          required: true
                          type: QueryFilter
                          writable: true
                        name:
                          hasDefault: true
                          name: Name
                          required: true
                          type: String
                          writable: false
                    _links:
                      self:
                        href: /api/v3/projects/42/queries/filter_instance_schemas
                    _type: Collection
                    count: 2
                    total: 2
              schema:
                $ref: '#/components/schemas/Query_Filter_Instance_Schemas_For_ProjectModel'
          description: OK
        "403":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:openproject-org:api:v3:errors:Unauthenticated
                    message: You are not authorized to access this resource.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the client does not have sufficient permissions to see it.

            **Required permission:** view work package in any project
      summary: List Query Filter Instance Schemas for Project
      tags:
      - Query Filter Instance Schema
  /api/v3/projects/{id}/queries/schema:
    get:
      description: Retrieve the schema for project queries.
      operationId: View_schema_for_project_queries
      parameters:
      - description: Project id
        example: "1"
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              examples:
                QuerySchema:
                  $ref: '#/components/examples/QuerySchemaModel'
              schema:
                $ref: '#/components/schemas/Schema_For_Project_QueriesModel'
          description: OK
        "403":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:openproject-org:api:v3:errors:MissingPermission
                    message: You are not authorized to access this resource.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: '**Required permission:** view work package in the project'
      summary: View schema for project queries
      tags:
      - Queries
  /api/v3/projects/{id}/work_packages:
    get:
      description: Returns the collection of work packages that are related to the
        given project.
      operationId: Get_Project_Work_Package_Collection
      parameters:
      - description: Project id
        example: "1"
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: Page number inside the requested collection.
        example: "25"
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 1
          type: integer
        style: form
      - description: Number of elements to display per page.
        example: "25"
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          type: integer
        style: form
      - description: |-
          JSON specifying filter conditions.
          Accepts the same format as returned by the [queries](https://www.openproject.org/docs/api/endpoints/queries/) endpoint. If no filter is to be applied, the client should send an empty array (`[]`).
        example: "[{ \"type_id\": { \"operator\": \"=\", \"values\": ['1', '2'] }}]"
        explode: true
        in: query
        name: filters
        required: false
        schema:
          default: "[{ \"status_id\": { \"operator\": \"o\", \"values\": null }}]"
          type: string
        style: form
      - description: |-
          JSON specifying sort criteria.
          Accepts the same format as returned by the [queries](https://www.openproject.org/docs/api/endpoints/queries/) endpoint.
        example: "[[\"status\", \"asc\"]]"
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          default: "[[\"id\", \"asc\"]]"
          type: string
        style: form
      - description: The column to group by.
        example: status
        explode: true
        in: query
        name: groupBy
        required: false
        schema:
          type: string
        style: form
      - description: Indicates whether properties should be summed up if they support
          it.
        example: true
        explode: true
        in: query
        name: showSums
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Comma separated list of properties to include.
        example: "total,elements/subject,elements/id,self"
        explode: true
        in: query
        name: select
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Work_PackagesModel'
          description: OK
        "400":
          $ref: '#/components/responses/InvalidRequestBody'
        "403":
          content:
            application/hal+json:
              example:
                _type: Error
                errorIdentifier: urn:openproject-org:api:v3:errors:MissingPermission
                message: You are not allowed to see the work packages of this project.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permission:** view work packages

            *Note that you will only receive this error, if you are at least allowed to see the corresponding project.*
        "404":
          content:
            application/hal+json:
              example:
                _type: Error
                errorIdentifier: urn:openproject-org:api:v3:errors:NotFound
                message: The specified project does not exist.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the project does not exist or the client does not have sufficient permissions to see it.

            **Required permission:** view project
      summary: Get work packages of project
      tags:
      - Work Packages
    post:
      description: |-
        When calling this endpoint the client provides a single object, containing at least the properties and links that
        are required, in the body. The required fields of a WorkPackage can be found in its schema, which is embedded in
        the respective form. Note that it is only allowed to provide properties or links supporting the write operation.
      operationId: Create_Project_Work_Package
      parameters:
      - description: Project id
        example: "1"
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: |-
          Indicates whether change notifications (e.g. via E-Mail) should be sent.
          Note that this controls notifications for all users interested in changes to the work package (e.g. watchers, author and assignee),
          not just the current user.
        example: false
        explode: true
        in: query
        name: notify
        required: false
        schema:
          default: true
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Work_PackageModel'
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Work_PackageModel'
          description: OK
        "400":
          $ref: '#/components/responses/InvalidRequestBody'
        "403":
          content:
            application/hal+json:
              example:
                _type: Error
                errorIdentifier: urn:openproject-org:api:v3:errors:MissingPermission
                message: You are not allowed to add work packages to this project.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permission:** add work packages

            *Note that you will only receive this error, if you are at least allowed to see the corresponding project.*
        "404":
          content:
            application/hal+json:
              example:
                _type: Error
                errorIdentifier: urn:openproject-org:api:v3:errors:NotFound
                message: The specified project does not exist.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the project does not exist or the client does not have sufficient permissions
            to see it.

            **Required permissions:** view project

            *Note: A client without sufficient permissions shall not be able to test for the existence of a project.
            That's why a 404 is returned here, even if a 403 might be more appropriate.*
        "406":
          $ref: '#/components/responses/MissingContentType'
        "415":
          $ref: '#/components/responses/UnsupportedMediaType'
        "422":
          content:
            application/hal+json:
              example:
                _embedded:
                  details:
                    attribute: Subject
                _type: Error
                errorIdentifier: urn:openproject-org:api:v3:errors:PropertyConstraintViolation
                message: The subject might not be blank.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if:

            * the client tries to write a read-only property

            * a constraint for a property was violated

            * a property was provided in an unreadable format
      summary: Create work package in project
      tags:
      - Work Packages
  /api/v3/projects/{id}/work_packages/form:
    post:
      description: ""
      operationId: Work_Package_Create_Form_For_Project
      parameters:
      - description: ID of the project in which the work package will be created
        example: "1"
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: OK
      summary: Work Package Create Form For Project
      tags:
      - Work Packages
  /api/v3/projects/{id}/available_assignees:
    get:
      description: Gets a list of users that can be assigned to work packages in the
        given project.
      operationId: Project_Available_assignees
      parameters:
      - description: Project id
        example: "1"
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _embedded:
                      elements:
                      - _links:
                          delete:
                            href: /api/v3/users/1
                            method: DELETE
                            title: Delete j.sheppard
                          lock:
                            href: /api/v3/users/1/lock
                            method: POST
                            title: Set lock on j.sheppard
                          self:
                            href: /api/v3/users/1
                            title: John Sheppard - j.sheppard
                        _type: User
                        avatar: https://example.org/users/1/avatar
                        createdAt: 2014-05-21T08:51:20.396Z
                        email: shep@mail.com
                        firstName: John
                        id: 1
                        lastName: Sheppard
                        login: j.sheppard
                        status: active
                        updatedAt: 2014-05-21T08:51:20.396Z
                      - _links:
                          delete:
                            href: /api/v3/users/2
                            method: DELETE
                            title: Delete j.sheppard2
                          lock:
                            href: /api/v3/users/2/lock
                            method: POST
                            title: Set lock on j.sheppard2
                          self:
                            href: /api/v3/users/2
                            title: Jim Sheppard - j.sheppard2
                        _type: User
                        avatar: https://example.org/users/1/avatar
                        createdAt: 2014-05-21T08:51:20.396Z
                        email: shep@mail.net
                        firstName: Jim
                        id: 2
                        lastName: Sheppard
                        login: j.sheppard2
                        status: active
                        updatedAt: 2014-05-21T08:51:20.396Z
                    _links:
                      self:
                        href: /api/v3/projects/42/available_assignees
                    _type: Collection
                    count: 2
                    total: 2
              schema:
                $ref: '#/components/schemas/Available_AssigneesModel'
          description: OK
        "403":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:openproject-org:api:v3:errors:MissingPermission
                    message: You are not allowed to see the assignable users for this
                      project.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permission:** add work packages

            *Note that you will only receive this error, if you are at least allowed to see the corresponding project.*
        "404":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:openproject-org:api:v3:errors:NotFound
                    message: The specified project does not exist.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the project does not exist or the client does not have sufficient permissions to see it.

            **Required permission:** view project
      summary: Project Available assignees
      tags:
      - Work Packages
  /api/v3/projects/{id}/categories:
    get:
      description: ""
      operationId: List_categories_of_a_project
      parameters:
      - description: ID of the project whose categories will be listed
        example: "1"
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _embedded:
                      elements:
                      - _links:
                          defaultAssignee:
                            href: /api/v3/users/42
                            title: John Sheppard
                          project:
                            href: /api/v3/projects/11
                            title: Example project
                          self:
                            href: /api/v3/categories/10
                            title: Category with assignee
                        _type: Category
                        id: 10
                        name: Foo
                      - _links:
                          project:
                            href: /api/v3/projects/11
                          self:
                            href: /api/v3/categories/11
                        _type: Category
                        id: 11
                        name: Bar
                    _links:
                      self:
                        href: /api/v3/projects/11/categories
                    _type: Collection
                    count: 2
                    total: 2
              schema:
                $ref: '#/components/schemas/Categories_by_ProjectModel'
          description: OK
        "404":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:openproject-org:api:v3:errors:NotFound
                    message: The specified project does not exist.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the project does not exist or the client does not have sufficient permissions
            to see it.

            **Required permission:** view project

            *Note: A client without sufficient permissions shall not be able to test for the existence of a project.
            That's why a 404 is returned here, even if a 403 might be more appropriate.*
      summary: List categories of a project
      tags:
      - Categories
  /api/v3/projects/{id}/types:
    get:
      description: This endpoint lists the types that are *available* in a given project.
      operationId: List_types_available_in_a_project
      parameters:
      - description: ID of the project whose types will be listed
        example: "1"
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _embedded:
                      elements:
                      - _links:
                          self:
                            href: /api/v3/types/1
                        _type: Type
                        color: '#ff0000'
                        createdAt: 2014-05-21T08:51:20.396Z
                        id: 1
                        isDefault: true
                        isMilestone: false
                        name: Bug
                        position: 1
                        updatedAt: 2014-05-21T08:51:20.396Z
                      - _links:
                          self:
                            href: /api/v3/types/2
                        _type: Type
                        color: '#888'
                        createdAt: 2014-05-21T08:51:20.396Z
                        id: 2
                        isDefault: false
                        isMilestone: false
                        name: Feature
                        position: 2
                        updatedAt: 2014-05-21T08:51:20.396Z
                    _links:
                      self:
                        href: /api/v3/projects/11/types
                    _type: Collection
                    count: 2
                    total: 2
              schema:
                $ref: '#/components/schemas/Types_by_ProjectModel'
          description: OK
        "404":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:openproject-org:api:v3:errors:NotFound
                    message: The specified project does not exist.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the project does not exist or the client does not have sufficient permissions
            to see it.

            **Required permission:** view work packages **or** manage types (on given project)

            *Note: A client without sufficient permissions shall not be able to test for the existence of a project.
            That's why a 404 is returned here, even if a 403 might be more appropriate.*
      summary: List types available in a project
      tags:
      - Types
  /api/v3/projects/{id}/versions:
    get:
      description: |-
        This endpoint lists the versions that are *available* in a given project.
        Note that due to sharing this might be more than the versions *defined* by that project.
      operationId: List_versions_available_in_a_project
      parameters:
      - description: ID of the project whose versions will be listed
        example: "1"
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _embedded:
                      elements:
                      - _links:
                          availableInProjects:
                            href: /api/v3/versions/11/projects
                          definingProject:
                            href: /api/v3/projects/11
                          self:
                            href: /api/v3/versions/11
                        _type: Version
                        description:
                          format: plain
                          html: This version has a description
                          raw: This version has a description
                        endDate: null
                        id: 11
                        name: v3.0 Alpha
                        startDate: 2014-11-20
                        status: Open
                      - _links:
                          availableInProjects:
                            href: /api/v3/versions/12/projects
                          definingProject:
                            href: /api/v3/projects/11
                          self:
                            href: /api/v3/versions/12
                        _type: Version
                        description:
                          format: plain
                          html: ""
                          raw: ""
                        endDate: null
                        id: 12
                        name: v2.0
                        startDate: null
                        status: Closed
                      - _links:
                          availableInProjects:
                            href: /api/v3/versions/10/projects
                          definingProject:
                            href: /api/v3/projects/11
                          self:
                            href: /api/v3/versions/10
                        _type: Version
                        description:
                          format: plain
                          html: ""
                          raw: ""
                        endDate: null
                        id: 10
                        name: v1.0
                        startDate: null
                        status: Open
                    _links:
                      self:
                        href: /api/v3/projects/11/versions
                    _type: Collection
                    count: 3
                    total: 3
              schema:
                $ref: '#/components/schemas/Versions_by_ProjectModel'
          description: OK
        "404":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:openproject-org:api:v3:errors:NotFound
                    message: The specified project does not exist.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the project does not exist or the client does not have sufficient permissions
            to see it.

            **Required permission:** view work packages **or** manage versions (on given project)

            *Note: A client without sufficient permissions shall not be able to test for the existence of a project.
            That's why a 404 is returned here, even if a 403 might be more appropriate.*
      summary: List versions available in a project
      tags:
      - Versions
  /api/v3/queries:
    get:
      description: "Returns a collection of queries. The collection can be filtered\
        \ via query parameters similar to how work packages are filtered. Please note\
        \ however, that the filters are applied to the queries and not to the work\
        \ packages the queries in turn might return."
      operationId: List_queries
      parameters:
      - description: |-
          JSON specifying filter conditions.
          Currently supported filters are:

          + project: filters queries by the project they are assigned to. If the project filter is passed with the `!*` (not any) operator, global queries are returned.

          + id: filters queries based on their id

          + updated_at: filters queries based on the last time they where updated
        example: "[{ \"project_id\": { \"operator\": \"!*\", \"values\": null }\"\
          \ }]"
        explode: true
        in: query
        name: filters
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/hal+json:
              examples:
                Queries:
                  $ref: '#/components/examples/QueriesModel'
              schema:
                $ref: '#/components/schemas/QueriesModel'
          description: OK
        "403":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:openproject-org:api:v3:errors:MissingPermission
                    message: You are not allowed to see the queries.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the client does not have sufficient permissions to see queries.

            **Required permission:** view work packages or manage public queries in any project
      summary: List queries
      tags:
      - Queries
    post:
      description: |-
        When calling this endpoint the client provides a single object, containing at least the properties and links that are required, in the body.
        The required fields of a Query can be found in its schema, which is embedded in the respective form.
        Note that it is only allowed to provide properties or links supporting the write operation.
      operationId: Create_query
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Query_Create_Form'
      responses:
        "201":
          content:
            application/hal+json:
              examples:
                Query:
                  $ref: '#/components/examples/QueryModel'
              schema:
                $ref: '#/components/schemas/QueryModel'
          description: Created
        "400":
          $ref: '#/components/responses/InvalidRequestBody'
        "406":
          $ref: '#/components/responses/MissingContentType'
        "415":
          $ref: '#/components/responses/UnsupportedMediaType'
        "422":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _embedded:
                      details:
                        attribute: project
                    _type: Error
                    errorIdentifier: urn:openproject-org:api:v3:errors:PropertyConstraintViolation
                    message: Project not found
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if:

            * the client tries to modify a read-only property (`PropertyIsReadOnly`)

            * a constraint for a property was violated (`PropertyConstraintViolation`)

            * the client provides a link to an invalid resource (`ResourceTypeMismatch`),
              e.g. a user, project or operator not found
      summary: Create query
      tags:
      - Queries
  /api/v3/queries/available_projects:
    get:
      description: Gets a list of projects that are available as projects a query
        can be assigned to.
      operationId: Available_projects_for_query
      responses:
        "200":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _embedded:
                      elements:
                      - _links:
                          categories:
                            href: /api/v3/projects/6/categories
                          createWorkPackage:
                            href: /api/v3/projects/6/work_packages/form
                            method: post
                          createWorkPackageImmediate:
                            href: /api/v3/projects/6/work_packages
                            method: post
                          self:
                            href: /api/v3/projects/6
                            title: A project
                          versions:
                            href: /api/v3/projects/6/versions
                        _type: Project
                        createdAt: 2015-07-06T13:28:14+00:00
                        description: Eveniet molestias omnis quis aut qui eum adipisci.
                        id: 6
                        identifier: a_project
                        name: A project
                        type: Customer Project
                        updatedAt: 2015-10-01T09:55:02+00:00
                      - _links:
                          categories:
                            href: /api/v3/projects/14/categories
                          createWorkPackage:
                            href: /api/v3/projects/14/work_packages/form
                            method: post
                          createWorkPackageImmediate:
                            href: /api/v3/projects/14/work_packages
                            method: post
                          self:
                            href: /api/v3/projects/14
                            title: Another project
                          versions:
                            href: /api/v3/projects/14/versions
                        _type: Project
                        createdAt: 2016-02-29T12:50:20+00:00
                        description: ""
                        id: 14
                        identifier: another_project
                        name: Another project
                        type: null
                        updatedAt: 2016-02-29T12:50:20+00:00
                    _links:
                      self:
                        href: /api/v3/queries/available_projects
                    _type: Collection
                    count: 2
                    total: 2
              schema:
                $ref: '#/components/schemas/Available_projects_for_queryModel'
          description: OK
        "403":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:openproject-org:api:v3:errors:MissingPermission
                    message: You are not authorized to access this resource.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permission:** view work packages
      summary: Available projects for query
      tags:
      - Queries
  /api/v3/queries/columns/{id}:
    get:
      description: Retrieve an individual QueryColumn as identified by the `id` parameter.
      operationId: View_Query_Column
      parameters:
      - description: QueryColumn id
        example: priority
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _links:
                      self:
                        href: /api/v3/queries/columns/priority
                        title: Priority
                    _type: QueryColumn::Property
                    id: priority
                    name: Priority
              schema:
                $ref: '#/components/schemas/Query_ColumnModel'
          description: OK
        "403":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:openproject-org:api:v3:errors:Unauthenticated
                    message: You are not authorized to access this resource.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the client does not have sufficient permissions to see it.

            **Required permission:** view work package in any project
        "404":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:openproject-org:api:v3:errors:NotFound
                    message: The specified query does not exist.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Returned if the QueryColumn does not exist.
      summary: View Query Column
      tags:
      - Query Columns
  /api/v3/queries/default:
    get:
      description: "Same as [viewing an existing, persisted Query](https://www.openproject.org/docs/api/endpoints/queries/#list-queries)\
        \ in its response, this resource returns an unpersisted query and by that\
        \ allows to get the default query configuration. The client may also provide\
        \ additional parameters which will modify the default query."
      operationId: View_default_query
      parameters:
      - description: |-
          JSON specifying filter conditions.
          The filters provided as parameters are not applied to the query but are instead used to override the query's persisted filters.
          All filters also accepted by the work packages endpoint are accepted. If no filter is to be applied, the client should send an empty array (`[]`).
        example: "[{ \"assignee\": { \"operator\": \"=\", \"values\": [\"1\", \"5\"\
          ] }\" }]"
        explode: true
        in: query
        name: filters
        required: false
        schema:
          default: "[{ \"status_id\": { \"operator\": \"o\", \"values\": null }}]"
          type: string
        style: form
      - description: Page number inside the queries' result collection of work packages.
        example: "25"
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 1
          type: integer
        style: form
      - description: Number of elements to display per page for the queries' result
          collection of work packages.
        example: "25"
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          type: integer
        style: form
      - description: JSON specifying sort criteria. The sort criteria is applied to
          the query's result collection of work packages overriding the query's persisted
          sort criteria.
        example: "[[\"status\", \"asc\"]]"
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          default: "[[\"id\", \"asc\"]]"
          type: string
        style: form
      - description: The column to group by. The grouping criteria is applied to the
          to the query's result collection of work packages overriding the query's
          persisted group criteria.
        example: status
        explode: true
        in: query
        name: groupBy
        required: false
        schema:
          type: string
        style: form
      - description: Indicates whether properties should be summed up if they support
          it. The showSums parameter is applied to the to the query's result collection
          of work packages overriding the query's persisted sums property.
        example: true
        explode: true
        in: query
        name: showSums
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: |
          Indicates the timestamps to filter by when showing changed attributes on work packages. Values can be either ISO8601 dates, ISO8601 durations and the following relative date keywords: "oneDayAgo@HH:MM+HH:MM", "lastWorkingDay@HH:MM+HH:MM", "oneWeekAgo@HH:MM+HH:MM", "oneMonthAgo@HH:MM+HH:MM". The first "HH:MM" part represents the zero paded hours and minutes. The last "+HH:MM" part represents the timezone offset from UTC associated with the time, the offset can be positive or negative e.g."oneDayAgo@01:00+01:00", "oneDayAgo@01:00-01:00". Values older than 1 day are accepted only with valid Enterprise Token available.
        example: "2023-01-01,P-1Y,PT0S,lastWorkingDay@12:00"
        explode: true
        in: query
        name: timestamps
        required: false
        schema:
          default: PT0S
          type: string
        style: form
      - description: Indicates whether the timeline should be shown.
        example: true
        explode: true
        in: query
        name: timelineVisible
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: "Indicates in what zoom level the timeline should be shown. Valid\
          \ values are  `days`, `weeks`, `months`, `quarters`, and `years`."
        example: days
        explode: true
        in: query
        name: timelineZoomLevel
        required: false
        schema:
          default: days
          type: string
        style: form
      - description: Indicates whether the hierarchy mode should be enabled.
        example: true
        explode: true
        in: query
        name: showHierarchies
        required: false
        schema:
          default: true
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _embedded:
                      results:
                        _embedded:
                          elements:
                          - <--- shortened for brevity --->
                        _links:
                          changeSize:
                            href: /api/v3/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=1&pageSize=%7Bsize%7D&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D
                            templated: true
                          createWorkPackage:
                            href: /api/v3/work_packages/form
                            method: post
                          createWorkPackageImmediate:
                            href: /api/v3/work_packages
                            method: post
                          jumpTo:
                            href: /api/v3/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=%7Boffset%7D&pageSize=2&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D
                            templated: true
                          self:
                            href: /api/v3/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=1&pageSize=2&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D
                        _type: WorkPackageCollection
                        count: 30
                        offset: 1
                        pageSize: 2
                        total: 234
                    _links:
                      columns:
                      - href: /api/v3/queries/columns/id
                        title: ID
                      - href: /api/v3/queries/columns/subject
                        title: Subject
                      - href: /api/v3/queries/columns/type
                        title: Type
                      - href: /api/v3/queries/columns/status
                        title: Status
                      - href: /api/v3/queries/columns/priority
                        title: Priority
                      - href: /api/v3/queries/columns/assignee
                        title: Assignee
                      - href: /api/v3/queries/columns/updated_at
                        title: Updated on
                      groupBy:
                        href: null
                        title: null
                      highlightedAttributes: []
                      project:
                        href: null
                      results:
                        href: /api/v3/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=1&pageSize=2&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D
                      self:
                        href: /api/v3/queries/default
                        title: Default
                      sortBy:
                      - href: /api/v3/queries/sort_bys/parent-desc
                        title: Parent (Descending)
                      user:
                        href: /api/v3/users/1
                        title: OpenProject Admin
                    _type: Query
                    filters:
                    - _links:
                        filter:
                          href: /api/v3/queries/filters/status
                          title: Status
                        operator:
                          href: /api/v3/queries/operators/o
                          title: open
                        schema:
                          href: /api/v3/queries/filter_instance_schemas/status
                        values: []
                      _type: StatusQueryFilter
                      name: Status
                    highlightingMode: inline
                    name: default
                    public: false
                    showHierarchies: true
                    starred: false
                    sums: false
                    timelineLabels: {}
                    timelineVisible: false
                    timelineZoomLevel: days
              schema:
                $ref: '#/components/schemas/Default_QueryModel'
          description: OK
        "403":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:openproject-org:api:v3:errors:MissingPermission
                    message: You are not authorized to access this resource.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the client does not have sufficient permissions to see the default query.

            **Required permission:** view work packages in any project
      summary: View default query
      tags:
      - Queries
  /api/v3/queries/filter_instance_schemas:
    get:
      description: Returns the list of QueryFilterInstanceSchemas defined for a global
        query. That is a query not assigned to a project.
      operationId: List_Query_Filter_Instance_Schemas
      responses:
        "200":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _embedded:
                      elements:
                      - _dependencies:
                        - _type: SchemaDependency
                          dependencies:
                            /api/v3/queries/operators/!:
                              values:
                                _links: {}
                                hasDefault: false
                                name: Values
                                required: true
                                type: "[]User"
                                writable: true
                            /api/v3/queries/operators/!*: {}
                            /api/v3/queries/operators/*: {}
                            /api/v3/queries/operators/=:
                              values:
                                _links: {}
                                hasDefault: false
                                name: Values
                                required: true
                                type: "[]User"
                                writable: true
                          "on": operator
                        _links:
                          filter:
                            href: /api/v3/queries/filters/assignee
                            title: Assignee
                          self:
                            href: /api/v3/queries/filter_instance_schemas/assignee
                        _type: QueryFilterInstanceSchema
                        filter:
                          _links: {}
                          hasDefault: false
                          name: Filter
                          required: true
                          type: QueryFilter
                          writable: true
                        name:
                          hasDefault: true
                          name: Name
                          required: true
                          type: String
                          writable: false
                      - _dependencies:
                        - _type: SchemaDependency
                          dependencies:
                            /api/v3/queries/operators/!:
                              values:
                                _links: {}
                                hasDefault: false
                                name: Values
                                required: true
                                type: "[]User"
                                writable: true
                            /api/v3/queries/operators/=:
                              values:
                                _links: {}
                                hasDefault: false
                                name: Values
                                required: true
                                type: "[]User"
                                writable: true
                          "on": operator
                        _links:
                          filter:
                            href: /api/v3/queries/filters/author
                            title: Author
                          self:
                            href: /api/v3/queries/filter_instance_schemas/author
                        _type: QueryFilterInstanceSchema
                        filter:
                          _links: {}
                          hasDefault: false
                          name: Filter
                          required: true
                          type: QueryFilter
                          writable: true
                        name:
                          hasDefault: true
                          name: Name
                          required: true
                          type: String
                          writable: false
                    _links:
                      self:
                        href: /api/v3/queries/filter_instance_schemas
                    _type: Collection
                    count: 2
                    total: 2
              schema:
                $ref: '#/components/schemas/Query_Filter_Instance_SchemasModel'
          description: OK
        "403":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:openproject-org:api:v3:errors:Unauthenticated
                    message: You are not authorized to access this resource.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the client does not have sufficient permissions to see it.

            **Required permission:** view work package in any project
      summary: List Query Filter Instance Schemas
      tags:
      - Query Filter Instance Schema
  /api/v3/queries/filter_instance_schemas/{id}:
    get:
      description: Retrieve an individual QueryFilterInstanceSchema as identified
        by the id parameter.
      operationId: View_Query_Filter_Instance_Schema
      parameters:
      - description: QueryFilterInstanceSchema identifier. The identifier is the filter
          identifier.
        example: author
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _dependencies:
                    - _type: SchemaDependency
                      dependencies:
                        /api/v3/queries/operators/!:
                          values:
                            _links: {}
                            hasDefault: false
                            name: Values
                            required: true
                            type: "[]User"
                            writable: true
                        /api/v3/queries/operators/=:
                          values:
                            _links: {}
                            hasDefault: false
                            name: Values
                            required: true
                            type: "[]User"
                            writable: true
                      "on": operator
                    _links:
                      filter:
                        href: /api/v3/queries/filters/author
                        title: Author
                      self:
                        href: /api/v3/queries/filter_instance_schemas/author
                    _type: QueryFilterInstanceSchema
                    filter:
                      _links: {}
                      hasDefault: false
                      name: Filter
                      required: true
                      type: QueryFilter
                      writable: true
                    name:
                      hasDefault: true
                      name: Name
                      required: true
                      type: String
                      writable: false
              schema:
                $ref: '#/components/schemas/Query_Filter_Instance_SchemaModel'
          description: OK
        "403":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:openproject-org:api:v3:errors:Unauthenticated
                    message: You are not authorized to access this resource.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the client does not have sufficient permissions to see it.

            **Required permission:** view work package in any project
        "404":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:openproject-org:api:v3:errors:NotFound
                    message: The specified query does not exist.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Returned if the QueryFilterInstanceSchema does not exist.
      summary: View Query Filter Instance Schema
      tags:
      - Query Filter Instance Schema
  /api/v3/queries/filters/{id}:
    get:
      description: Retrieve an individual QueryFilter as identified by the id parameter.
      operationId: View_Query_Filter
      parameters:
      - description: QueryFilter identifier
        example: status
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _links:
                      self:
                        href: /api/v3/queries/filters/status
                        title: Status
                    _type: QueryFilter
                    id: status
              schema:
                $ref: '#/components/schemas/Query_FilterModel'
          description: OK
        "403":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:openproject-org:api:v3:errors:Unauthenticated
                    message: You are not authorized to access this resource.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the client does not have sufficient permissions to see it.

            **Required permission:** view work package in any project
        "404":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:openproject-org:api:v3:errors:NotFound
                    message: The specified query does not exist.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Returned if the QueryFilter does not exist.
      summary: View Query Filter
      tags:
      - Query Filters
  /api/v3/queries/form:
    post:
      description: ""
      operationId: Query_Create_Form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Query_Create_Form'
      responses:
        "200":
          description: OK
      summary: Query Create Form
      tags:
      - Queries
  /api/v3/queries/operators/{id}:
    get:
      description: Retrieve an individual QueryOperator as identified by the `id`
        parameter.
      operationId: View_Query_Operator
      parameters:
      - description: QueryOperator id
        example: '!'
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _links:
                      self:
                        href: /api/v3/queries/operators/!
                        title: is not
                    _type: QueryOperator
                    id: '!'
                    name: is not
              schema:
                $ref: '#/components/schemas/Query_OperatorModel'
          description: OK
        "403":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:openproject-org:api:v3:errors:Unauthenticated
                    message: You are not authorized to access this resource.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the client does not have sufficient permissions to see it.

            **Required permission:** view work package in any project
        "404":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:openproject-org:api:v3:errors:NotFound
                    message: The specified query does not exist.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Returned if the QueryOperator does not exist.
      summary: View Query Operator
      tags:
      - Query Operators
  /api/v3/queries/schema:
    get:
      description: "Retrieve the schema for global queries, those, that are not assigned\
        \ to a project."
      operationId: View_schema_for_global_queries
      responses:
        "200":
          content:
            application/hal+json:
              examples:
                QuerySchema:
                  $ref: '#/components/examples/QuerySchemaModel'
              schema:
                $ref: '#/components/schemas/Schema_For_Global_QueriesModel'
          description: OK
        "403":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:openproject-org:api:v3:errors:MissingPermission
                    message: You are not authorized to access this resource.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: '**Required permission:** view work package in any project'
      summary: View schema for global queries
      tags:
      - Queries
  /api/v3/queries/sort_bys/{id}:
    get:
      description: Retrieve an individual QuerySortBy as identified by the id parameter.
      operationId: View_Query_Sort_By
      parameters:
      - description: QuerySortBy identifier. The identifier is a combination of the
          column identifier and the direction.
        example: status-asc
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _links:
                      column:
                        href: /api/v3/queries/columns/status
                        title: Status
                      direction:
                        href: urn:openproject-org:api:v3:queries:directions:asc
                        title: Ascending
                      self:
                        href: /api/v3/queries/sort_bys/status-asc
                        title: Status (Ascending)
                    _type: QuerySortBy
                    id: status-asc
                    name: Status (Ascending)
              schema:
                $ref: '#/components/schemas/Query_Sort_ByModel'
          description: OK
        "403":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:openproject-org:api:v3:errors:Unauthenticated
                    message: You are not authorized to access this resource.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the client does not have sufficient permissions to see it.

            **Required permission:** view work package in any project
        "404":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:openproject-org:api:v3:errors:NotFound
                    message: The specified query does not exist.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Returned if the QuerySortBy does not exist.
      summary: View Query Sort By
      tags:
      - Query Sort Bys
  /api/v3/queries/{id}:
    delete:
      description: Delete the query identified by the id parameter
      operationId: Delete_query
      parameters:
      - description: Query id
        example: "1"
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "204":
          description: No Content
        "403":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:openproject-org:api:v3:errors:MissingPermission
                    message: You are not authorized to access this resource.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permission:** for own queries none; for public queries: manage public queries

            *Note that you will only receive this error, if you are at least allowed to see the corresponding query.*
        "404":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:openproject-org:api:v3:errors:NotFound
                    message: The requested resource could not be found.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the query does not exist or the client does not have sufficient permissions to see it.

            **Required condition:** query belongs to user or query is public

            **Required permission:** view work package in queries project
      summary: Delete query
      tags:
      - Queries
    get:
      description: Retrieve an individual query as identified by the id parameter.
        Then end point accepts a number of parameters that can be used to override
        the resources' persisted parameters.
      operationId: View_query
      parameters:
      - description: Query id
        example: "1"
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: |-
          JSON specifying filter conditions.
          The filters provided as parameters are not applied to the query but are instead used to override the query's persisted filters.
          All filters also accepted by the work packages endpoint are accepted. If no filter is to be applied, the client should send an empty array (`[]`).
        example: "[{ \"assignee\": { \"operator\": \"=\", \"values\": [\"1\", \"5\"\
          ] }\" }]"
        explode: true
        in: query
        name: filters
        required: false
        schema:
          default: "[{ \"status_id\": { \"operator\": \"o\", \"values\": null }}]"
          type: string
        style: form
      - description: Page number inside the queries' result collection of work packages.
        example: "25"
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 1
          type: integer
        style: form
      - description: Number of elements to display per page for the queries' result
          collection of work packages.
        example: "25"
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          type: integer
        style: form
      - description: Selected columns for the table view.
        example: "[]"
        explode: true
        in: query
        name: columns
        required: false
        schema:
          default: "['type', 'priority']"
          type: string
        style: form
      - description: JSON specifying sort criteria. The sort criteria is applied to
          the query's result collection of work packages overriding the query's persisted
          sort criteria.
        example: "[[\"status\", \"asc\"]]"
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          default: "[[\"id\", \"asc\"]]"
          type: string
        style: form
      - description: The column to group by. The grouping criteria is applied to the
          to the query's result collection of work packages overriding the query's
          persisted group criteria.
        example: status
        explode: true
        in: query
        name: groupBy
        required: false
        schema:
          type: string
        style: form
      - description: Indicates whether properties should be summed up if they support
          it. The showSums parameter is applied to the to the query's result collection
          of work packages overriding the query's persisted sums property.
        example: true
        explode: true
        in: query
        name: showSums
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: |
          Indicates the timestamps to filter by when showing changed attributes on work packages. Values can be either ISO8601 dates, ISO8601 durations and the following relative date keywords: "oneDayAgo@HH:MM+HH:MM", "lastWorkingDay@HH:MM+HH:MM", "oneWeekAgo@HH:MM+HH:MM", "oneMonthAgo@HH:MM+HH:MM". The first "HH:MM" part represents the zero paded hours and minutes. The last "+HH:MM" part represents the timezone offset from UTC associated with the time, the offset can be positive or negative e.g."oneDayAgo@01:00+01:00", "oneDayAgo@01:00-01:00". Values older than 1 day are accepted only with valid Enterprise Token available.
        example: "2023-01-01,P-1Y,PT0S,lastWorkingDay@12:00"
        explode: true
        in: query
        name: timestamps
        required: false
        schema:
          default: PT0S
          type: string
        style: form
      - description: Indicates whether the timeline should be shown.
        example: true
        explode: true
        in: query
        name: timelineVisible
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Overridden labels in the timeline view
        example: "{}"
        explode: true
        in: query
        name: timelineLabels
        required: false
        schema:
          default: "{}"
          type: string
        style: form
      - description: Highlighting mode for the table view.
        example: inline
        explode: true
        in: query
        name: highlightingMode
        required: false
        schema:
          default: inline
          type: string
        style: form
      - description: "Highlighted attributes mode for the table view when `highlightingMode`\
          \ is `inline`. When set to `[]` all highlightable attributes will be returned\
          \ as `highlightedAttributes`."
        example: "[]"
        explode: true
        in: query
        name: highlightedAttributes
        required: false
        schema:
          default: "['type', 'priority']"
          type: string
        style: form
      - description: Indicates whether the hierarchy mode should be enabled.
        example: true
        explode: true
        in: query
        name: showHierarchies
        required: false
        schema:
          default: true
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/hal+json:
              examples:
                Query:
                  $ref: '#/components/examples/QueryModel'
              schema:
                $ref: '#/components/schemas/QueryModel'
          description: OK
        "404":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:openproject-org:api:v3:errors:NotFound
                    message: The specified query does not exist.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the query does not exist or the client does not have sufficient permissions to see it.

            **Required condition:** query belongs to user or query is public

            **Required permission:** view work package in queries project
      summary: View query
      tags:
      - Queries
    patch:
      description: |-
        When calling this endpoint the client provides a single object, containing the properties and links that it wants to change, in the body.
        Note that it is only allowed to provide properties or links supporting the **write** operation.
      operationId: Edit_Query
      parameters:
      - description: Query id
        example: "1"
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Query_Update_Form'
      responses:
        "200":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _embedded:
                      highlightedAttributes: []
                      results:
                        _embedded:
                          elements:
                          - <--- shortened for brevity --->
                        _links:
                          changeSize:
                            href: /api/v3/projects/3/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=1&pageSize=%7Bsize%7D&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D
                            templated: true
                          createWorkPackage:
                            href: /api/v3/work_packages/form
                            method: post
                          createWorkPackageImmediate:
                            href: /api/v3/work_packages
                            method: post
                          jumpTo:
                            href: /api/v3/projects/3/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=%7Boffset%7D&pageSize=2&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D
                            templated: true
                          self:
                            href: /api/v3/projects/3/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=1&pageSize=2&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D
                        _type: WorkPackageCollection
                        count: 30
                        offset: 1
                        pageSize: 2
                        total: 234
                    _links:
                      columns:
                      - href: /api/v3/queries/columns/id
                        title: ID
                      - href: /api/v3/queries/columns/subject
                        title: Subject
                      - href: /api/v3/queries/columns/type
                        title: Type
                      - href: /api/v3/queries/columns/status
                        title: Status
                      - href: /api/v3/queries/columns/priority
                        title: Priority
                      - href: /api/v3/queries/columns/assignee
                        title: Assignee
                      - href: /api/v3/queries/columns/updated_at
                        title: Updated on
                      groupBy:
                        href: null
                        title: null
                      highlightedAttributes: []
                      project:
                        href: /api/v3/projects/3
                        title: copy
                      results:
                        href: /api/v3/projects/3/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=1&pageSize=2&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D
                      self:
                        href: /api/v3/queries/9
                        title: fdsfdsfdsf
                      sortBy:
                      - href: /api/v3/queries/sort_bys/parent-desc
                        title: Parent (Descending)
                      user:
                        href: /api/v3/users/1
                        title: OpenProject Admin
                    _type: Query
                    createdAt: 2015-03-20T12:56:56.343Z
                    filters:
                    - _links:
                        filter:
                          href: /api/v3/queries/filters/status
                          title: Status
                        operator:
                          href: /api/v3/queries/operators/o
                          title: open
                        schema:
                          href: /api/v3/queries/filter_instance_schemas/status
                        values: []
                      _type: StatusQueryFilter
                      name: Status
                    - _links:
                        filter:
                          href: /api/v3/queries/filters/dueDate
                          title: Finish date
                        operator:
                          href: /api/v3/queries/operators/<t+
                          title: in less than
                        schema:
                          href: /api/v3/queries/filter_instance_schemas/dueDate
                      _type: DueDateQueryFilter
                      name: Finish date
                      values:
                      - "1"
                    id: 9
                    name: fdsfdsfdsf
                    public: false
                    starred: false
                    sums: false
                    updatedAt: 2015-05-20T18:16:53.884Z
              schema:
                $ref: '#/components/schemas/QueryModel'
          description: OK
        "400":
          $ref: '#/components/responses/InvalidRequestBody'
        "403":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:openproject-org:api:v3:errors:MissingPermission
                    message: You are not allowed to edit the content of the work package.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permission:** edit work package
        "404":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:openproject-org:api:v3:errors:NotFound
                    message: The specified query does not exist.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the query does not exist or the client does not have sufficient permissions to see it.

            **Required permission:** view work packages in the query's project (unless global)
        "406":
          $ref: '#/components/responses/MissingContentType'
        "415":
          $ref: '#/components/responses/UnsupportedMediaType'
        "422":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _embedded:
                      details:
                        attribute: name
                    _type: Error
                    errorIdentifier: urn:openproject-org:api:v3:errors:PropertyConstraintViolation
                    message: The name might not be blank.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if:

            * the client tries to modify a read-only property (`PropertyIsReadOnly`)

            * a constraint for a property was violated (`PropertyConstraintViolation`)

            * the client provides a link to an invalid resource (`ResourceTypeMismatch`)
      summary: Edit Query
      tags:
      - Queries
  /api/v3/queries/{id}/form:
    post:
      description: ""
      operationId: Query_Update_Form
      parameters:
      - description: Query id
        example: 1
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Query_Update_Form'
      responses:
        "200":
          description: OK
      summary: Query Update Form
      tags:
      - Queries
  /api/v3/queries/{id}/star:
    patch:
      description: ""
      operationId: Star_query
      parameters:
      - description: Query id
        example: "1"
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _embedded:
                      results:
                        _embedded:
                          elements:
                          - <--- shortened for brevity --->
                        _links:
                          changeSize:
                            href: /api/v3/projects/3/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=1&pageSize=%7Bsize%7D&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D
                            templated: true
                          createWorkPackage:
                            href: /api/v3/work_packages/form
                            method: post
                          createWorkPackageImmediate:
                            href: /api/v3/work_packages
                            method: post
                          jumpTo:
                            href: /api/v3/projects/3/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=%7Boffset%7D&pageSize=2&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D
                            templated: true
                          self:
                            href: /api/v3/projects/3/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=1&pageSize=2&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D
                        _type: WorkPackageCollection
                        count: 30
                        offset: 1
                        pageSize: 2
                        total: 234
                    _links:
                      columns:
                      - href: /api/v3/queries/columns/id
                        title: ID
                      - href: /api/v3/queries/columns/subject
                        title: Subject
                      - href: /api/v3/queries/columns/type
                        title: Type
                      - href: /api/v3/queries/columns/status
                        title: Status
                      - href: /api/v3/queries/columns/priority
                        title: Priority
                      - href: /api/v3/queries/columns/assignee
                        title: Assignee
                      - href: /api/v3/queries/columns/updated_at
                        title: Updated on
                      groupBy:
                        href: null
                        title: null
                      project:
                        href: /api/v3/projects/3
                        title: copy
                      results:
                        href: /api/v3/projects/3/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=1&pageSize=2&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D
                      self:
                        href: /api/v3/queries/9
                        title: fdsfdsfdsf
                      sortBy:
                      - href: /api/v3/queries/sort_bys/parent-desc
                        title: Parent (Descending)
                      user:
                        href: /api/v3/users/1
                        title: OpenProject Admin
                    _type: Query
                    createdAt: 2015-03-20T12:56:56.856Z
                    filters:
                    - _links:
                        filter:
                          href: /api/v3/queries/filters/status
                          title: Status
                        operator:
                          href: /api/v3/queries/operators/o
                          title: open
                        schema:
                          href: /api/v3/queries/filter_instance_schemas/status
                        values: []
                      _type: StatusQueryFilter
                      name: Status
                    - _links:
                        filter:
                          href: /api/v3/queries/filters/dueDate
                          title: Finish date
                        operator:
                          href: /api/v3/queries/operators/<t+
                          title: in less than
                        schema:
                          href: /api/v3/queries/filter_instance_schemas/dueDate
                      _type: DueDateQueryFilter
                      name: Finish date
                      values:
                      - "1"
                    id: 9
                    name: fdsfdsfdsf
                    public: false
                    starred: true
                    sums: false
                    updatedAt: 2015-05-20T18:16:53.089Z
              schema:
                $ref: '#/components/schemas/Star_QueryModel'
          description: OK
        "400":
          $ref: '#/components/responses/InvalidRequestBody'
        "403":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:openproject-org:api:v3:errors:MissingPermission
                    message: You are not allowed to star this query.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permission:** for own queries none; for public queries: manage public queries

            *Note that you will only receive this error, if you are at least allowed to see the corresponding query.*
        "404":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:openproject-org:api:v3:errors:NotFound
                    message: The specified query does not exist.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the query does not exist or the client does not have sufficient permissions to see it.

            **Required condition:** query belongs to user or query is public

            **Required permission:** view work package in queries project
      summary: Star query
      tags:
      - Queries
  /api/v3/queries/{id}/unstar:
    patch:
      description: ""
      operationId: Unstar_query
      parameters:
      - description: Query id
        example: "1"
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _embedded:
                      results:
                        _embedded:
                          elements:
                          - <--- shortened for brevity --->
                        _links:
                          changeSize:
                            href: /api/v3/projects/3/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=1&pageSize=%7Bsize%7D&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D
                            templated: true
                          createWorkPackage:
                            href: /api/v3/work_packages/form
                            method: post
                          createWorkPackageImmediate:
                            href: /api/v3/work_packages
                            method: post
                          jumpTo:
                            href: /api/v3/projects/3/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=%7Boffset%7D&pageSize=2&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D
                            templated: true
                          self:
                            href: /api/v3/projects/3/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=1&pageSize=2&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D
                        _type: WorkPackageCollection
                        count: 30
                        offset: 1
                        pageSize: 2
                        total: 234
                    _links:
                      columns:
                      - href: /api/v3/queries/columns/id
                        title: ID
                      - href: /api/v3/queries/columns/subject
                        title: Subject
                      - href: /api/v3/queries/columns/type
                        title: Type
                      - href: /api/v3/queries/columns/status
                        title: Status
                      - href: /api/v3/queries/columns/priority
                        title: Priority
                      - href: /api/v3/queries/columns/assignee
                        title: Assignee
                      - href: /api/v3/queries/columns/updated_at
                        title: Updated on
                      groupBy:
                        href: null
                        title: null
                      project:
                        href: /api/v3/projects/3
                        title: copy
                      results:
                        href: /api/v3/projects/3/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=1&pageSize=2&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D
                      self:
                        href: /api/v3/queries/9
                        title: fdsfdsfdsf
                      sortBy:
                      - href: /api/v3/queries/sort_bys/parent-desc
                        title: Parent (Descending)
                      user:
                        href: /api/v3/users/1
                        title: OpenProject Admin
                    _type: Query
                    createdAt: 2015-03-20T12:56:56.468Z
                    filters:
                    - _links:
                        filter:
                          href: /api/v3/queries/filters/status
                          title: Status
                        operator:
                          href: /api/v3/queries/operators/o
                          title: open
                        schema:
                          href: /api/v3/queries/filter_instance_schemas/status
                        values: []
                      _type: StatusQueryFilter
                      name: Status
                    - _links:
                        filter:
                          href: /api/v3/queries/filters/dueDate
                          title: Finish date
                        operator:
                          href: /api/v3/queries/operators/<t+
                          title: in less than
                        schema:
                          href: /api/v3/queries/filter_instance_schemas/dueDate
                      _type: DueDateQueryFilter
                      name: Finish date
                      values:
                      - "1"
                    id: 9
                    name: fdsfdsfdsf
                    public: false
                    starred: false
                    sums: false
                    updatedAt: 2015-05-20T18:16:53.386Z
              schema:
                $ref: '#/components/schemas/Unstar_QueryModel'
          description: OK
        "400":
          $ref: '#/components/responses/InvalidRequestBody'
        "403":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:openproject-org:api:v3:errors:MissingPermission
                    message: You are not allowed to unstar this query.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permission:** for own queries none; for public queries: manage public queries

            *Note that you will only receive this error, if you are at least allowed to see the corresponding query.*
        "404":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:openproject-org:api:v3:errors:NotFound
                    message: The specified query does not exist.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the query does not exist or the client does not have sufficient permissions to see it.

            **Required condition:** query belongs to user or query is public

            **Required permission:** view work package in queries project
        "406":
          $ref: '#/components/responses/MissingContentType'
        "415":
          $ref: '#/components/responses/UnsupportedMediaType'
      summary: Unstar query
      tags:
      - Queries
  /api/v3/relations:
    get:
      description: |-
        Lists all relations according to the given (optional, logically conjunctive) filters and ordered by ID.
        The response only includes relations between work packages which the user is allowed to see.
      operationId: List_Relations
      parameters:
      - description: |-
          JSON specifying filter conditions.
          Accepts the same format as returned by the [queries](https://www.openproject.org/docs/api/endpoints/queries/) endpoint. Valid fields to filter by are:

          + id - ID of relation

          + from - ID of work package from which the filtered relations emanates.

          + to - ID of work package to which this related points.

          + involved - ID of either the `from` or the `to` work package.

          + type - The type of relation to filter by, e.g. "follows".
        example: "[{ \"from\": { \"operator\": \"=\", \"values\": 42 }\" }]"
        explode: true
        in: query
        name: filters
        required: false
        schema:
          type: string
        style: form
      - description: |-
          JSON specifying sort criteria.
          Accepts the same format as returned by the [queries](https://www.openproject.org/docs/api/endpoints/queries/) endpoint.
        example: "[[\"type\", \"asc\"]]"
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _embedded:
                      elements:
                      - _links:
                          delete:
                            href: /api/v3/relations/1
                            method: DELETE
                          from:
                            href: /api/v3/work_packages/42
                            title: Steel Delivery
                          self:
                            href: /api/v3/relations/1
                          to:
                            href: /api/v3/work_packages/84
                            title: Bending the steel
                          update:
                            href: /api/v3/relations/1/form
                            method: POST
                          updateImmediately:
                            href: /api/v3/relations/1
                            method: PATCH
                        _type: Relation
                        lag: 0
                        description: We can't bend the steel before it's been delivered!
                        id: 1
                        name: precedes
                        reverseType: follows
                        type: precedes
                    _links:
                      self:
                        href: /api/v3/relations
                    _type: Collection
                    count: 1
                    total: 3
              schema:
                $ref: '#/components/schemas/RelationsModel'
          description: OK
      summary: List Relations
      tags:
      - Relations
  /api/v3/relations/schema:
    get:
      description: ""
      operationId: View_relation_schema
      responses:
        "200":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _links:
                      self:
                        href: /api/v3/relations/schema
                    _type: Schema
                    lag:
                      name: Lag
                      type: Integer
                      writable: true
                    description:
                      name: Description
                      type: String
                      writable: true
                    from:
                      name: From work package
                      type: WorkPackage
                      writable: false
                    id:
                      name: ID
                      type: Integer
                      writable: false
                    reverseType:
                      name: Reverse Type
                      type: String
                      writable: false
                    to:
                      name: To work package
                      type: WorkPackage
                      writable: false
                    type:
                      name: Type
                      type: String
                      writable: true
              schema:
                $ref: '#/components/schemas/Relation_schemaModel'
          description: OK
      summary: View relation schema
      tags:
      - Relations
  /api/v3/relations/schema/{type}:
    get:
      description: ""
      operationId: View_relation_schema_for_type
      parameters:
      - description: Type of the schema
        example: follows
        explode: false
        in: path
        name: type
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _links:
                      self:
                        href: /api/v3/relations/schema
                    _type: Schema
                    lag:
                      name: Lag
                      type: Integer
                      writable: true
                    description:
                      name: Description
                      type: String
                      writable: true
                    from:
                      name: From work package
                      type: WorkPackage
                      writable: false
                    id:
                      name: ID
                      type: Integer
                      writable: false
                    reverseType:
                      name: Reverse Type
                      type: String
                      writable: false
                    to:
                      name: To work package
                      type: WorkPackage
                      writable: false
                    type:
                      name: Type
                      type: String
                      writable: true
              schema:
                $ref: '#/components/schemas/Relation_schemaModel'
          description: OK
        "404":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:openproject-org:api:v3:errors:NotFound
                    message: The specified relation type does not exist.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the relation type does not exist or the client does not have sufficient permissions to see it.

            **Required permission:** manage work package relations
      summary: View relation schema for type
      tags:
      - Relations
  /api/v3/relations/{id}:
    delete:
      description: Deletes the relation.
      operationId: Delete_Relation
      parameters:
      - description: Relation ID
        example: "1"
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "204":
          description: |-
            Returned if the relation was deleted successfully.
            The response body is empty.
        "403":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:openproject-org:api:v3:errors:MissingPermission
                    message: You are not allowed to delete this relation.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permission:** manage work package relations
        "404":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:openproject-org:api:v3:errors:NotFound
                    message: The specified relation does not exist.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the relation does not exist or the client does not have sufficient permissions to see it.

            **Required permission:** manage work package relations
        "406":
          $ref: '#/components/responses/MissingContentType'
        "415":
          $ref: '#/components/responses/UnsupportedMediaType'
      summary: Delete Relation
      tags:
      - Relations
    get:
      description: ""
      operationId: View_Relation
      parameters:
      - description: Relation id
        example: "1"
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _links:
                      delete:
                        href: /api/v3/relations/1
                        method: DELETE
                      from:
                        href: /api/v3/work_packages/42
                        title: Steel Delivery
                      self:
                        href: /api/v3/relations/1
                      to:
                        href: /api/v3/work_packages/84
                        title: Bending the steel
                      update:
                        href: /api/v3/relations/1/form
                        method: POST
                      updateImmediately:
                        href: /api/v3/relations/1
                        method: PATCH
                    _type: Relation
                    lag: 0
                    description: We can't bend the steel before it's been delivered!
                    id: 1
                    name: precedes
                    reverseType: follows
                    type: precedes
              schema:
                $ref: '#/components/schemas/RelationModel'
          description: OK
        "404":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:openproject-org:api:v3:errors:NotFound
                    message: The specified relation does not exist.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the relation does not exist or the client does not have sufficient permissions to see it.

            **Required permission:** view work packages for the involved work packages
      summary: View Relation
      tags:
      - Relations
    patch:
      description: |-
        When calling this endpoint the client provides a single object, containing the properties and links that it wants to change, in the body.
        It is only allowed to provide properties or links supporting the **write** operation.

        Note that changing the `type` of a relation invariably also changes the respective `reverseType` as well as the "name" of it.
        The returned Relation object will reflect that change. For instance if you change a Relation's
        `type` to "follows" then the `reverseType` will be changed to `precedes`.
      operationId: Edit_Relation
      parameters:
      - description: Relation ID
        example: "1"
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _links:
                      delete:
                        href: /api/v3/relations/1
                        method: DELETE
                      from:
                        href: /api/v3/work_packages/42
                        title: Steel Delivery
                      self:
                        href: /api/v3/relations/1
                      to:
                        href: /api/v3/work_packages/84
                        title: Bending the steel
                      update:
                        href: /api/v3/relations/1/form
                        method: POST
                      updateImmediately:
                        href: /api/v3/relations/1
                        method: PATCH
                    _type: Relation
                    lag: 0
                    description: We can't bend the steel before it's been delivered!
                    id: 1
                    name: precedes
                    reverseType: follows
                    type: precedes
              schema:
                $ref: '#/components/schemas/RelationModel'
          description: OK
        "400":
          $ref: '#/components/responses/InvalidRequestBody'
        "404":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:openproject-org:api:v3:errors:NotFound
                    message: The specified relation does not exist.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the relation does not exist or the client does not have sufficient permissions to see it.

            **Required permission:** manage work package relations
        "406":
          $ref: '#/components/responses/MissingContentType'
        "415":
          $ref: '#/components/responses/UnsupportedMediaType'
        "422":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _embedded:
                      details:
                        attribute: lag
                    _type: Error
                    errorIdentifier: urn:openproject-org:api:v3:errors:PropertyConstraintViolation
                    message: Lag must be a number greater than or equal to 0
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if:

            * the client tries to modify a read-only property (`PropertyIsReadOnly`)

            * a constraint for a property was violated (`PropertyConstraintViolation`)

            * the client provides a link to an invalid resource (`ResourceTypeMismatch`) or a
              work package that does not exist or for which the client does not have sufficient permissions
              to see it (**required permissions**: `view work packages` for the involved work packages).
      summary: Edit Relation
      tags:
      - Relations
  /api/v3/relations/{id}/form:
    post:
      description: ""
      operationId: Relation_edit_form
      parameters:
      - description: ID of the relation being modified
        example: "1"
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _embedded:
                      payload:
                        _links:
                          from:
                            href: /api/v3/work_packages/4534
                          to:
                            href: /api/v3/work_packages/3857
                        _type: WorkPackage
                        lag: 3
                        description: let it rest for 3 days
                        type: follows
                      schema:
                        _links:
                          self:
                            href: /api/v3/relations/schema
                        _type: Schema
                        lag:
                          name: Lag
                          type: Integer
                          writable: true
                        description:
                          name: Description
                          type: String
                          writable: true
                        from:
                          name: From work package
                          type: WorkPackage
                          writable: false
                        id:
                          name: ID
                          type: Integer
                          writable: false
                        reverseType:
                          name: Reverse Type
                          type: String
                          writable: false
                        to:
                          name: To work package
                          type: WorkPackage
                          writable: false
                        type:
                          allowedValues:
                          - relates
                          - duplicates
                          - duplicated
                          - blocks
                          - blocked
                          - precedes
                          - follows
                          - includes
                          - partof
                          - requires
                          - required
                          name: Type
                          type: String
                          writable: true
                      validationErrors:
                        from:
                          _type: Error
                          errorIdentifier: urn:openproject-org:api:v3:errors:BadExampleError
                          message: For the purpose of this example we need a validation
                            error. The remainder of the response pretends there were
                            no errors.
                    _links:
                      commit:
                        href: /api/v3/relations
                        method: PATCH
                      self:
                        href: /api/v3/relations/form
                      validate:
                        href: /api/v3/relations/form
                        method: POST
                    _type: Form
              schema:
                $ref: '#/components/schemas/Relation_edit_formModel'
          description: OK
        "403":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:openproject-org:api:v3:errors:MissingPermission
                    message: You are not allowed to edit the specified relation.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permission:** manage work package relations

            *Note that you will only receive this error, if you are at least allowed to see the involved work packages.*
        "404":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:openproject-org:api:v3:errors:NotFound
                    message: The specified relation does not exist.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the relation does not exist or the client does not have sufficient permissions to see it.

            **Required permission:** view (involved) work package(s), manage work package relations
      summary: Relation edit form
      tags:
      - Relations
  /api/v3/render/markdown:
    post:
      description: ""
      operationId: Preview_Markdown_document
      parameters:
      - description: |-
          API-Link to the context in which the rendering occurs, for example a specific work package.

          If left out only context-agnostic rendering takes place.
          Please note that OpenProject features markdown-extensions on top of the extensions GitHub Flavored Markdown (gfm) already
          provides that can only work given a context (e.g. display attached images).

          **Supported contexts:**

          * `/api/v3/work_packages/{id}` - an existing work package
        example: /api/v3/work_packages/42
        explode: true
        in: query
        name: context
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            text/html:
              examples:
                response:
                  value: <p>Hello world! <a href="http://example.com">This</a> <strong>is</strong>
                    markdown!</p>
              schema:
                $ref: '#/components/schemas/MarkdownModel'
          description: OK
        "400":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:openproject-org:api:v3:errors:InvalidRenderContext
                    message: Could not render markdown string in the given context.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the context passed by the client is not valid (e.g. unknown).

            Note that this response will also occur when the requesting user
            is not allowed to see the context resource (e.g. limited work package visibility).
        "415":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:openproject-org:api:v3:errors:TypeNotSupported
                    message: Expected Content-Type to be 'text/plain' but got 'application/json'.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Returned if the Content-Type indicated in the request is not
            `text/plain`.
      summary: Preview Markdown document
      tags:
      - Previewing
  /api/v3/render/plain:
    post:
      description: ""
      operationId: Preview_plain_document
      responses:
        "200":
          content:
            text/html:
              examples:
                response:
                  value: |
                    <p>Hello world! This *is* plain text!</p>
              schema:
                $ref: '#/components/schemas/Plain_TextModel'
          description: OK
        "415":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:openproject-org:api:v3:errors:TypeNotSupported
                    message: Expected Content-Type to be 'text/plain' but got 'application/json'.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Returned if the Content-Type indicated in the request is not
            `text/plain`.
      summary: Preview plain document
      tags:
      - Previewing
  /api/v3/revisions/{id}:
    get:
      description: ""
      operationId: View_revision
      parameters:
      - description: Revision id
        example: "1"
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _links:
                      author:
                        href: /api/v3/users/1
                      project:
                        href: /api/v3/projects/1
                      self:
                        href: /api/v3/revisions/1
                      showRevision:
                        href: /projects/identifier/repository/revision/11f4b07
                    _type: Revision
                    authorName: Some Developer
                    createdAt: 2015-07-21T13:36:59.454Z
                    formattedIdentifier: 11f4b07
                    id: 1
                    identifier: 11f4b07dff4f4ce9548a52b7d002daca7cd63ec6
                    message:
                      format: plain
                      html: <p>This revision provides new features<br/><br/>An elaborate
                        description</p>
                      raw: |-
                        This revision provides new features

                        An elaborate description
              schema:
                $ref: '#/components/schemas/RevisionModel'
          description: OK
        "404":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:openproject-org:api:v3:errors:NotFound
                    message: The specified revision does not exist.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the revision does not exist or the client does not have sufficient permissions
            to see it.

            **Required permission:** view changesets for the project the repository is created in.

            *Note: A client without sufficient permissions shall not be able to test for the existence of a revision.
            That's why a 404 is returned here, even if a 403 might be more appropriate.*
      summary: View revision
      tags:
      - Revisions
  /api/v3/roles:
    get:
      description: List all defined roles. This includes built in roles like 'Anonymous'
        and 'Non member'.
      operationId: List_roles
      parameters:
      - description: |-
          JSON specifying filter conditions.
          Accepts the same format as returned by the [queries](https://www.openproject.org/docs/api/endpoints/queries/) endpoint.
          Currently supported filters are:

          + grantable: filters roles based on whether they are selectable for a membership

          + unit: filters roles based on the unit ('project' or 'system') for which they are selectable for a membership
        example: "[{ \"unit\": { \"operator\": \"=\", \"values\": [\"system\"] }\"\
          \ }]"
        explode: true
        in: query
        name: filters
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _embedded:
                      elements:
                      - _links:
                          self:
                            href: /api/v3/roles/3
                            title: Manager
                        _type: Role
                        id: 3
                        name: Manager
                      - _links:
                          self:
                            href: /api/v3/roles/2
                            title: Anonymous
                        _type: Role
                        id: 2
                        name: Anonymous
                      - _links:
                          self:
                            href: /api/v3/roles/5
                            title: Reader
                        _type: Role
                        id: 5
                        name: Reader
                      - _links:
                          self:
                            href: /api/v3/roles/4
                            title: Member
                        _type: Role
                        id: 4
                        name: Member
                      - _links:
                          self:
                            href: /api/v3/roles/1
                            title: Non member
                        _type: Role
                        id: 1
                        name: Non member
                    _links:
                      self:
                        href: /api/v3/roles
                    _type: Collection
                    count: 5
                    total: 5
              schema:
                $ref: '#/components/schemas/RolesModel'
          description: OK
      summary: List roles
      tags:
      - Roles
  /api/v3/roles/{id}:
    get:
      description: Fetch an individual role.
      operationId: View_role
      parameters:
      - description: Role id
        example: "1"
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _links:
                      self:
                        href: /api/v3/roles/3
                        title: Manager
                    _type: Role
                    id: 3
                    name: Manager
              schema:
                $ref: '#/components/schemas/RoleModel'
          description: OK
        "403":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:openproject-org:api:v3:errors:MissingPermission
                    message: You are not authorized to view this resource.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the client does not have sufficient permissions to see roles.

            **Required permission:** view members **or** manage members
        "404":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:openproject-org:api:v3:errors:NotFound
                    message: The requested resource could not be found.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Returned if the role does not exist.
      summary: View role
      tags:
      - Roles
  /api/v3/statuses:
    get:
      description: ""
      operationId: List_all_Statuses
      responses:
        "200":
          content:
            application/hal+json:
              examples:
                simple status collection:
                  $ref: '#/components/examples/StatusCollection'
              schema:
                $ref: '#/components/schemas/StatusCollectionModel'
          description: OK
        "403":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:openproject-org:api:v3:errors:MissingPermission
                    message: You are not allowed to see the statuses.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permission:** view work package (on any project)
      summary: List all Statuses
      tags:
      - Statuses
  /api/v3/statuses/{id}:
    get:
      description: ""
      operationId: View_Status
      parameters:
      - description: Status id
        example: "1"
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _links:
                      self:
                        href: /api/v3/statuses/1
                    _type: Status
                    defaultDoneRatio: 0
                    id: 1
                    isClosed: false
                    isDefault: true
                    name: New
                    position: 1
              schema:
                $ref: '#/components/schemas/StatusModel'
          description: OK
        "403":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:openproject-org:api:v3:errors:MissingPermission
                    message: You are not allowed to see this status.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permission:** view work package (on any project)
      summary: View Status
      tags:
      - Statuses
  /api/v3/storages:
    get:
      description: Returns a collection of storages.
      operationId: list_storages
      responses:
        "200":
          content:
            application/hal+json:
              examples:
                Simple storage collection:
                  $ref: '#/components/examples/StoragesSimpleCollectionModel'
              schema:
                $ref: '#/components/schemas/StorageCollectionModel'
          description: OK
        "400":
          content:
            application/hal+json:
              example:
                _type: Error
                errorIdentifier: urn:openproject-org:api:v3:errors:InvalidQuery
                message: Filters Invalid filter does not exist.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Returned if the client sends invalid request parameters e.g.
            filters
      summary: Get Storages
      tags:
      - File links
    post:
      description: |-
        Creates a storage resource. When creating a storage, a confidential OAuth 2 provider application is created
        automatically. The oauth client id and secret of the created OAuth application are returned in the response.

        **IMPORTANT:** This is the only time, the oauth client secret is visible to the consumer. After that, the secret is
        hidden.

        To update the storage with OAuth client credentials, which enable the storage resource to behave as an OAuth 2
        client against an external OAuth 2 provider application, another request must be made to create those, see
        `POST /api/v3/storages/{id}/oauth_client_credentials`.
      operationId: create_storage
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StorageWriteModel'
      responses:
        "201":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/StorageReadModel'
          description: Created
        "400":
          $ref: '#/components/responses/InvalidRequestBody'
        "403":
          content:
            application/hal+json:
              example:
                _type: Error
                errorIdentifier: urn:openproject-org:api:v3:errors:MissingPermission
                message: You are not authorized to access this resource.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permission:** Depends on the page the grid is defined for.
        "406":
          $ref: '#/components/responses/MissingContentType'
        "415":
          $ref: '#/components/responses/UnsupportedMediaType'
        "422":
          description: |-
            Returned if:

            * a constraint for a property was violated (`PropertyConstraintViolation`)
      summary: Creates a storage.
      tags:
      - File links
  /api/v3/storages/{id}:
    delete:
      description: |-
        Deletes a storage resource. This also deletes all related records, like the created oauth application, client, and
        any file links created within this storage.
      operationId: delete_storage
      parameters:
      - description: Storage id
        example: 1337
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "204":
          description: No content
        "403":
          content:
            application/hal+json:
              example:
                _type: Error
                errorIdentifier: urn:openproject-org:api:v3:errors:MissingPermission
                message: You are not authorized to access this resource.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permission:** admin
        "404":
          content:
            application/hal+json:
              example:
                _type: Error
                errorIdentifier: urn:openproject-org:api:v3:errors:NotFound
                message: The requested resource could not be found.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the storage does not exist or the client does not have sufficient permissions to see it.

            **Required permission:** view file links
      summary: Delete a storage
      tags:
      - File links
    get:
      description: |-
        Gets a storage resource. As a side effect, a live connection to the storages origin is established to retrieve
        connection state data.
      operationId: get_storage
      parameters:
      - description: Storage id
        example: 1337
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/StorageReadModel'
          description: OK
        "404":
          content:
            application/hal+json:
              example:
                _type: Error
                errorIdentifier: urn:openproject-org:api:v3:errors:NotFound
                message: The requested resource could not be found.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the storage does not exist or the client does not have sufficient permissions to see it.

            **Required permission:** view file links
      summary: Get a storage
      tags:
      - File links
    patch:
      description: |-
        Updates a storage resource. Only data that is not generated by the server can be updated. This excludes the OAuth 2
        application data.
      operationId: update_storage
      parameters:
      - description: Storage id
        example: 1337
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StorageWriteModel'
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/StorageReadModel'
          description: OK
        "403":
          content:
            application/hal+json:
              example:
                _type: Error
                errorIdentifier: urn:openproject-org:api:v3:errors:MissingPermission
                message: You are not authorized to access this resource.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permission:** admin
        "404":
          content:
            application/hal+json:
              example:
                _type: Error
                errorIdentifier: urn:openproject-org:api:v3:errors:NotFound
                message: The requested resource could not be found.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the storage does not exist or the client does not have sufficient permissions to see it.

            **Required permission:** view file links
      summary: Update a storage
      tags:
      - File links
  /api/v3/storages/{id}/files:
    get:
      description: |-
        Gets a collection of files from a storage.

        If no `parent` context is given, the result is the content of the document root. With `parent` context given, the
        result contains the collections of files/directories from within the given parent file id.

        If given `parent` context is no directory, `400 Bad Request` is returned.
      operationId: get_storage_files
      parameters:
      - description: Storage id
        example: 1337
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: Parent file identification
        example: /my/data
        explode: true
        in: query
        name: parent
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/StorageFilesModel'
          description: OK
        "400":
          content:
            application/hal+json:
              example:
                _type: Error
                errorIdentifier: urn:openproject-org:api:v3:errors:InvalidQuery
                message: The given parent is not a directory.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Returned if the given parent parameter value does not refer
            to a directory.
        "404":
          content:
            application/hal+json:
              example:
                _type: Error
                errorIdentifier: urn:openproject-org:api:v3:errors:NotFound
                message: The requested resource could not be found.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned in either of those cases:
            - if the storage does not exist or the client does not have sufficient permissions to see it

              **Required permission:** view file links
            - if the document root file identification does not exist on the storage
      summary: Gets files of a storage.
      tags:
      - File links
  /api/v3/storages/{id}/files/prepare_upload:
    post:
      description: |-
        Executes a request that prepares a link for a direct upload to the storage.

        The background here is, that the client needs to make a direct request to the storage instance for file uploading,
        but should not get access to the credentials, which are stored in the backend. The response contains a link object,
        that enables the client to execute a file upload without the real credentials.
      operationId: prepare_storage_file_upload
      parameters:
      - description: Storage id
        example: 1337
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StorageFileUploadPreparationModel'
      responses:
        "201":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/StorageFileUploadLinkModel'
          description: OK
        "400":
          content:
            application/hal+json:
              example:
                _type: Error
                errorIdentifier: urn:openproject-org:api:v3:errors:InvalidQuery
                message: The given parent is not a directory.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Returned if the given parent parameter value does not refer
            to a directory.
        "403":
          content:
            application/hal+json:
              example:
                _type: Error
                errorIdentifier: urn:openproject-org:api:v3:errors:MissingPermission
                message: You are not authorized to access this resource.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permission:** manage file links
        "404":
          content:
            application/hal+json:
              example:
                _type: Error
                errorIdentifier: urn:openproject-org:api:v3:errors:NotFound
                message: The requested resource could not be found.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the storage does not exist or the client does not have sufficient permissions to see it.

            **Required permission:** view file links
        "500":
          content:
            application/hal+json:
              examples:
                outbound request failed:
                  description: |-
                    This error is returned, if the outbound request to the file storage failed with a 404, e.g. if the
                    upload location is not available.
                  value:
                    _type: Error
                    errorIdentifier: urn:openproject-org:api:v3:errors:OutboundRequest:NotFound
                    message: An outbound request to another resource has failed with
                      status code 404.
                enterprise token missing:
                  description: |-
                    This error is returned, if there is no Enterprise token available. The file upload to that storage is
                    only available in an Enterprise edition.
                  value:
                    _type: Error
                    errorIdentifier: urn:openproject-org:api:v3:errors:MissingEnterpriseToken
                    message: The request cannot be handled due to invalid or missing
                      Enterprise token.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Returned if the outbound request to the storage has failed
            with any reason.
      summary: Preparation of a direct upload of a file to the given storage.
      tags:
      - File links
  /api/v3/storages/{id}/oauth_client_credentials:
    post:
      description: |-
        Inserts the OAuth 2 credentials into the storage, to allow the storage to act as an OAuth 2 client. Calling this
        endpoint on a storage that already contains OAuth 2 client credentials will replace them.
      operationId: create_storage_oauth_credentials
      parameters:
      - description: Storage id
        example: 1337
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OAuthClientCredentialsWriteModel'
      responses:
        "201":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/StorageReadModel'
          description: Created
        "403":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:openproject-org:api:v3:errors:MissingPermission
                    message: You are not authorized to access this resource.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permission:** admin
        "404":
          content:
            application/hal+json:
              example:
                _type: Error
                errorIdentifier: urn:openproject-org:api:v3:errors:NotFound
                message: The requested resource could not be found.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the storage does not exist or the client does not have sufficient permissions to see it.

            **Required permission:** view file links
      summary: Creates an oauth client credentials object for a storage.
      tags:
      - File links
  /api/v3/storages/{id}/open:
    get:
      description: |-
        Gets a redirect to the location of the storage's remote origin. The storage's files root should be the target
        location.
      operationId: open_storage
      parameters:
      - description: Storage id
        example: 1337
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "303":
          description: Redirect
          headers:
            Location:
              explode: false
              schema:
                format: uri
                type: string
              style: simple
        "404":
          content:
            application/hal+json:
              example:
                _type: Error
                errorIdentifier: urn:openproject-org:api:v3:errors:NotFound
                message: The requested resource could not be found.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the storage does not exist or the client does not have sufficient permissions to see it.

            **Required permission:** view file links
      summary: Open the storage
      tags:
      - File Links
  /api/v3/time_entries:
    get:
      description: |-
        Lists time entries. The time entries returned depend on the filters
        provided and also on the permission of the requesting user.
      operationId: list_time_entries
      parameters:
      - description: Page number inside the requested collection.
        example: 25
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 1
          type: integer
        style: form
      - description: Number of elements to display per page.
        example: "25"
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          type: integer
        style: form
      - description: |-
          JSON specifying sort criteria.
          Accepts the same format as returned by the [queries](https://www.openproject.org/docs/api/endpoints/queries/) endpoint. Currently supported sorts are:

          + id: Sort by primary key

          + hours: Sort by logged hours

          + spent_on: Sort by spent on date

          + created_at: Sort by time entry creation datetime

          + updated_at: Sort by the time the time entry was updated last
        example: "[[\"spent_on\", \"asc\"]]"
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          default: "[\"spent_on\", \"asc\"]"
          type: string
        style: form
      - description: |-
          JSON specifying filter conditions.
          Accepts the same format as returned by the [queries](https://www.openproject.org/docs/api/endpoints/queries/) endpoint. Currently supported filters are:

          + work_package: Filter time entries by work package

          + project: Filter time entries by project

          + user: Filter time entries by users

          + ongoing: Filter for your ongoing timers

          + spent_on: Filter time entries by spent on date

          + created_at: Filter time entries by creation datetime

          + updated_at: Filter time entries by the last time they where updated

          + activity: Filter time entries by time entry activity
        example: "[{ \"work_package\": { \"operator\": \"=\", \"values\": [\"1\",\
          \ \"2\"] } }, { \"project\": { \"operator\": \"=\", \"values\": [\"1\"]\
          \ } }]"
        explode: true
        in: query
        name: filters
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/TimeEntryCollectionModel'
          description: OK
        "400":
          $ref: '#/components/responses/InvalidRequestBody'
        "403":
          content:
            application/hal+json:
              example:
                _type: Error
                errorIdentifier: urn:openproject-org:api:v3:errors:MissingPermission
                message: You are not authorized to view this resource.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Returned if the client is not logged in and login is required.
      summary: List time entries
      tags:
      - Time entries
    post:
      description: |-
        Creates a new time entry applying the attributes provided in the body.
        Please note that while there is a fixed set of attributes, custom fields can extend
        a time entries' attributes and are accepted by the endpoint.
      operationId: create_time_entry
      responses:
        "201":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/TimeEntryModel'
          description: Created
        "400":
          $ref: '#/components/responses/InvalidRequestBody'
        "403":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:openproject-org:api:v3:errors:MissingPermission
                    message: You are not authorized to access this resource.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permission:** Log time
        "406":
          $ref: '#/components/responses/MissingContentType'
        "415":
          $ref: '#/components/responses/UnsupportedMediaType'
        "422":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _embedded:
                      details:
                        attribute: workPackage
                    _type: Error
                    errorIdentifier: urn:openproject-org:api:v3:errors:PropertyConstraintViolation
                    message: Work package is invalid.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if:

            * a constraint for a property was violated (`PropertyConstraintViolation`)
      summary: Create time entry
      tags:
      - Time entries
  /api/v3/time_entries/{id}/form:
    post:
      description: ""
      operationId: Time_entry_update_form
      parameters:
      - description: Time entries activity id
        example: "1"
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              type: integer
        description: Time entries activity id
        required: true
      responses:
        "200":
          description: OK
        "400":
          $ref: '#/components/responses/InvalidRequestBody'
        "403":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:openproject-org:api:v3:errors:MissingPermission
                    message: You are not authorized to access this resource.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the client does not have sufficient permissions to edit the time entry.

            **Required permission:** *edit time entries* for every time entry of a project, or *edit own time entries* for time entries belonging to the user.
        "404":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:openproject-org:api:v3:errors:NotFound
                    message: The requested resource could not be found.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the time entry does not exist or if the client does not have sufficient permissions to view it.

            **Required permission** `view time entries` in the project the time entry is assigned to or `view own time entries` for time entries belonging to the user
        "406":
          $ref: '#/components/responses/MissingContentType'
        "415":
          $ref: '#/components/responses/UnsupportedMediaType'
      summary: Time entry update form
      tags:
      - Time Entries
  /api/v3/time_entries/activity/{id}:
    get:
      description: Fetches the time entry activity resource by the given id.
      operationId: get_time_entries_activity
      parameters:
      - description: Time entries activity id
        example: 1
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/TimeEntryActivityModel'
          description: OK
        "404":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:openproject-org:api:v3:errors:NotFound
                    message: The requested resource could not be found.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the activity does not exist or if the user does not have permission to view them.

            **Required permission** `view time entries`, `log time`, `edit time entries`, `edit own time entries` or
            `manage project activities` in any project
      summary: View time entries activity
      tags:
      - Time entry activities
  /api/v3/time_entries/available_projects:
    get:
      description: Gets a list of projects in which a time entry can be created in
        or be assigned to on update. The list contains all projects in which the user
        issuing the request has the necessary permissions.
      operationId: Available_projects_for_time_entries
      responses:
        "200":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _embedded:
                      elements:
                      - _type: Project...
                      - _type: Project...
                    _links:
                      self:
                        href: /api/v3/time_entries/available_projects
                    _type: Collection
                    count: 2
                    total: 2
              schema:
                $ref: '#/components/schemas/Available_projects_for_time_entriesModel'
          description: OK
        "403":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:openproject-org:api:v3:errors:MissingPermission
                    message: You are not authorized to access this resource.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permission:** *log time*, *edit time entries* or *edit own time entries* in any project
      summary: Available projects for time entries
      tags:
      - Time Entries
  /api/v3/time_entries/form:
    post:
      description: ""
      operationId: Time_entry_create_form
      responses:
        "200":
          description: OK
        "400":
          $ref: '#/components/responses/InvalidRequestBody'
        "403":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:openproject-org:api:v3:errors:MissingPermission
                    message: You are not authorized to access this resource.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permission:** *log time* in any project
        "406":
          $ref: '#/components/responses/MissingContentType'
        "415":
          $ref: '#/components/responses/UnsupportedMediaType'
      summary: Time entry create form
      tags:
      - Time Entries
  /api/v3/time_entries/schema:
    get:
      description: ""
      operationId: View_time_entry_schema
      responses:
        "200":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _dependencies: []
                    _links:
                      self:
                        href: /api/v3/time_entries/schema
                    _type: Schema
                    activity:
                      _links: {}
                      hasDefault: true
                      location: _links
                      name: Activity
                      required: true
                      type: TimeEntriesActivity
                      writable: true
                    createdAt:
                      hasDefault: false
                      name: Created on
                      options: {}
                      required: true
                      type: DateTime
                      writable: false
                    customField29:
                      hasDefault: false
                      name: sfsdfsdfsdfsdfdsf
                      options:
                        rtl: null
                      required: false
                      type: String
                      writable: true
                    hours:
                      hasDefault: false
                      name: Hours
                      options: {}
                      required: true
                      type: Duration
                      writable: true
                    id:
                      hasDefault: false
                      name: ID
                      options: {}
                      required: true
                      type: Integer
                      writable: false
                    project:
                      _links: {}
                      hasDefault: false
                      location: _links
                      name: Project
                      required: false
                      type: Project
                      writable: true
                    ongoing:
                      hasDefault: false
                      name: Ongoing
                      options: {}
                      required: false
                      type: Boolean
                      writable: true
                    spentOn:
                      hasDefault: false
                      name: Date
                      options: {}
                      required: true
                      type: Date
                      writable: true
                    updatedAt:
                      hasDefault: false
                      name: Updated on
                      options: {}
                      required: true
                      type: DateTime
                      writable: false
                    user:
                      hasDefault: false
                      name: User
                      options: {}
                      required: true
                      type: User
                      writable: false
                    workPackage:
                      _links: {}
                      hasDefault: false
                      location: _links
                      name: Work package
                      required: false
                      type: WorkPackage
                      writable: true
              schema:
                $ref: '#/components/schemas/View_time_entry_schemaModel'
          description: OK
        "403":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:openproject-org:api:v3:errors:MissingPermission
                    message: You are not authorized to access this resource.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the client does not have sufficient permissions to see the schema.

            **Required permission:** *log time* or *view time entries* or *edit time entries* or *edit own time entries* on any project
      summary: View time entry schema
      tags:
      - Time Entries
  /api/v3/time_entries/{id}:
    delete:
      description: Permanently deletes the specified time entry.
      operationId: delete_time_entry
      parameters:
      - description: Time entry id
        example: 1
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "204":
          description: Returned if the time entry was deleted successfully.
        "403":
          content:
            application/hal+json:
              example:
                _type: Error
                errorIdentifier: urn:openproject-org:api:v3:errors:MissingPermission
                message: You are not authorized to access this resource.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Returned if the client does not have sufficient permissions
        "404":
          content:
            application/hal+json:
              example:
                _type: Error
                errorIdentifier: urn:openproject-org:api:v3:errors:NotFound
                message: The requested resource could not be found.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the time entry does not exist or if the user does not have sufficient permissions to see the time entry.

            **Required permission** `view time entries` in the project the time entry is assigned to or `view own time entries` for time entries belonging to the user
        "406":
          $ref: '#/components/responses/MissingContentType'
        "415":
          $ref: '#/components/responses/UnsupportedMediaType'
      summary: Delete time entry
      tags:
      - Time entries
    get:
      description: Retrieves a single time entry identified by the given id.
      operationId: get_time_entry
      parameters:
      - description: time entry id
        example: 1
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/TimeEntryModel'
          description: OK
        "404":
          content:
            application/hal+json:
              example:
                _type: Error
                errorIdentifier: urn:openproject-org:api:v3:errors:NotFound
                message: The requested resource could not be found.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the time entry does not exist or if the user does not have permission to view them.

            **Required permission**
            - `view time entries` in the project the time entry is assigned to or
            - `view own time entries` for time entries belonging to the user
      summary: Get time entry
      tags:
      - Time entries
    patch:
      description: |-
        Updates the given time entry by applying the attributes provided in
        the body. Please note that while there is a fixed set of attributes, custom fields
        can extend a time entries' attributes and are accepted by the endpoint.
      operationId: update_time_entry
      parameters:
      - description: Time entry id
        example: 1
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/TimeEntryModel'
          description: OK
        "400":
          $ref: '#/components/responses/InvalidRequestBody'
        "403":
          content:
            application/hal+json:
              example:
                _type: Error
                errorIdentifier: urn:openproject-org:api:v3:errors:MissingPermission
                message: You are not authorized to access this resource.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permission:** Edit (own) time entries, depending on what time entry is being modified.
        "406":
          $ref: '#/components/responses/MissingContentType'
        "415":
          $ref: '#/components/responses/UnsupportedMediaType'
        "422":
          content:
            application/hal+json:
              example:
                _embedded:
                  details:
                    attribute: workPackage
                _type: Error
                errorIdentifier: urn:openproject-org:api:v3:errors:PropertyConstraintViolation
                message: Work package is invalid.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if:

            * a constraint for a property was violated (`PropertyConstraintViolation`)
      summary: update time entry
      tags:
      - Time Entries
  /api/v3/types:
    get:
      description: ""
      operationId: List_all_Types
      responses:
        "200":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _embedded:
                      elements:
                      - _links:
                          self:
                            href: /api/v3/types/1
                        _type: Type
                        color: '#ff0000'
                        createdAt: 2014-05-21T08:51:20.396Z
                        id: 1
                        isDefault: true
                        isMilestone: false
                        name: Bug
                        position: 1
                        updatedAt: 2014-05-21T08:51:20.396Z
                      - _links:
                          self:
                            href: /api/v3/types/2
                        _type: Type
                        color: '#888'
                        createdAt: 2014-05-21T08:51:20.396Z
                        id: 2
                        isDefault: false
                        isMilestone: false
                        name: Feature
                        position: 2
                        updatedAt: 2014-05-21T08:51:20.396Z
                    _links:
                      self:
                        href: /api/v3/types
                    _type: Collection
                    count: 2
                    total: 2
              schema:
                $ref: '#/components/schemas/TypesModel'
          description: OK
        "403":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:openproject-org:api:v3:errors:MissingPermission
                    message: You are not allowed to see the types.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permission:** view work package or manage types (on any project)
      summary: List all Types
      tags:
      - Types
  /api/v3/types/{id}:
    get:
      description: ""
      operationId: View_Type
      parameters:
      - description: Type id
        example: "1"
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _links:
                      self:
                        href: /api/v3/types/1
                    _type: Type
                    color: '#ff0000'
                    createdAt: 2014-05-21T08:51:20.396Z
                    id: 1
                    isDefault: true
                    isMilestone: false
                    name: Bug
                    position: 1
                    updatedAt: 2014-05-21T08:51:20.396Z
              schema:
                $ref: '#/components/schemas/TypeModel'
          description: OK
        "403":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:openproject-org:api:v3:errors:MissingPermission
                    message: You are not allowed to see this type.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permission:** view work package or manage types (on any project)
      summary: View Type
      tags:
      - Types
  /api/v3/users:
    get:
      description: |-
        Lists users. Only administrators or users with any of the following can access this resource:

        - `manage_members`
        - `manage_user`
        - `share_work_packages`
      operationId: list_Users
      parameters:
      - description: Page number inside the requested collection.
        example: "25"
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 1
          type: integer
        style: form
      - description: Number of elements to display per page.
        example: "25"
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          type: integer
        style: form
      - description: |-
          JSON specifying filter conditions.
          Accepts the same format as returned by the [queries](https://www.openproject.org/docs/api/endpoints/queries/)
          endpoint. Currently supported filters are:

          + status: Status the user has

          + group: Name of the group in which to-be-listed users are members.

          + name: Filter users in whose first or last names, or email addresses the given string occurs.

          + login: User's login
        example: "[{ \"status\": { \"operator\": \"=\", \"values\": [\"invited\"]\
          \ } }, { \"group\": { \"operator\": \"=\", \"values\": [\"1\"] } }, { \"\
          name\": { \"operator\": \"=\", \"values\": [\"h.wurst@openproject.com\"\
          ] } }]"
        explode: true
        in: query
        name: filters
        required: false
        schema:
          type: string
        style: form
      - description: |-
          JSON specifying sort criteria.
          Accepts the same format as returned by the [queries](https://www.openproject.org/docs/api/endpoints/queries/) endpoint.
        example: "[[\"status\", \"asc\"]]"
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          type: string
        style: form
      - description: Comma separated list of properties to include.
        example: "total,elements/name,elements/self,self"
        explode: true
        in: query
        name: select
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/UserCollectionModel'
          description: OK
        "400":
          $ref: '#/components/responses/InvalidRequestBody'
        "403":
          content:
            application/hal+json:
              example:
                _type: Error
                errorIdentifier: urn:openproject-org:api:v3:errors:MissingPermission
                message: You are not allowed to list users.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permission:** Administrator or any of: 'manage_members', 'manage_user', 'share_work_packages'.
      summary: List Users
      tags:
      - Users
    post:
      description: |-
        Creates a new user. Only administrators and users with manage_user global permission are allowed to do so.
        When calling this endpoint the client provides a single object, containing at least the properties and links that are required, in the body.

        Valid values for `status`:

        1) "active" - In this case a password has to be provided in addition to the other attributes.

        2) "invited" - In this case nothing but the email address is required. The rest is optional. An invitation will be sent to the user.
      operationId: create_user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreateModel'
      responses:
        "201":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/UserModel'
          description: Created
        "400":
          $ref: '#/components/responses/InvalidRequestBody'
        "403":
          content:
            application/hal+json:
              example:
                _type: Error
                errorIdentifier: urn:openproject-org:api:v3:errors:MissingPermission
                message: You are not allowed to create new users.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permission:** Administrator
        "406":
          $ref: '#/components/responses/MissingContentType'
        "415":
          $ref: '#/components/responses/UnsupportedMediaType'
        "422":
          content:
            application/hal+json:
              example:
                _embedded:
                  details:
                    attribute: email
                _type: Error
                errorIdentifier: urn:openproject-org:api:v3:errors:PropertyConstraintViolation
                message: The email address is already taken.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if:

            * a constraint for a property was violated (`PropertyConstraintViolation`)
      summary: Create User
      tags:
      - Users
  /api/v3/users/schema:
    get:
      description: "The schema response use two exemplary custom fields that extend\
        \ the schema response. Depending on your instance and custom field configuration,\
        \ the response will look somewhat different."
      operationId: View_user_schema
      responses:
        "200":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _dependencies: []
                    _links:
                      self:
                        href: /api/v3/users/schema
                    _type: Schema
                    admin:
                      hasDefault: false
                      name: Administrator
                      options: {}
                      required: false
                      type: Boolean
                      writable: true
                    avatar:
                      hasDefault: false
                      name: Avatar
                      options: {}
                      required: false
                      type: String
                      writable: false
                    createdAt:
                      hasDefault: false
                      name: Created on
                      options: {}
                      required: true
                      type: DateTime
                      writable: false
                    customField1:
                      hasDefault: false
                      name: User String CF
                      required: false
                      type: String
                      writable: true
                    customField2:
                      hasDefault: false
                      location: _links
                      name: User List cf
                      required: false
                      type: CustomOption
                      writable: true
                    firstName:
                      hasDefault: false
                      maxLength: 255
                      minLength: 1
                      name: First name
                      options: {}
                      required: true
                      type: String
                      writable: false
                    id:
                      hasDefault: false
                      name: ID
                      options: {}
                      required: true
                      type: Integer
                      writable: false
                    identityUrl:
                      hasDefault: false
                      name: Identity url
                      options: {}
                      required: false
                      type: String
                      writable: true
                    language:
                      hasDefault: false
                      name: Language
                      options: {}
                      required: false
                      type: String
                      writable: true
                    lastName:
                      hasDefault: false
                      maxLength: 255
                      minLength: 1
                      name: Last name
                      options: {}
                      required: true
                      type: String
                      writable: false
                    login:
                      hasDefault: false
                      maxLength: 255
                      minLength: 1
                      name: Username
                      options: {}
                      required: true
                      type: String
                      writable: true
                    mail:
                      hasDefault: false
                      maxLength: 255
                      minLength: 1
                      name: Email
                      options: {}
                      required: true
                      type: String
                      writable: true
                    password:
                      hasDefault: false
                      name: Password
                      options: {}
                      required: false
                      type: Password
                      writable: false
                    status:
                      hasDefault: false
                      name: Status
                      options: {}
                      required: false
                      type: String
                      writable: true
                    updatedAt:
                      hasDefault: false
                      name: Updated on
                      options: {}
                      required: true
                      type: DateTime
                      writable: false
              schema:
                $ref: '#/components/schemas/View_user_schemaModel'
          description: OK
      summary: View user schema
      tags:
      - Users
  /api/v3/users/{id}:
    delete:
      description: Permanently deletes the specified user account.
      operationId: delete_user
      parameters:
      - description: User id
        example: "1"
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "202":
          description: |-
            Returned if the account was deleted successfully.

            Note that the response body is empty as of now. In future versions of the API a body
            *might* be returned, indicating the progress of deletion.
        "403":
          content:
            application/hal+json:
              example:
                _type: Error
                errorIdentifier: urn:openproject-org:api:v3:errors:MissingPermission
                message: You are not allowed to delete the account of this user.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the client does not have sufficient permissions or if deletion of users was disabled in the instance wide settings.

            **Required permission:** Administrators only (exception: users might be able to delete their own accounts)
        "404":
          content:
            application/hal+json:
              example:
                _type: Error
                errorIdentifier: urn:openproject-org:api:v3:errors:NotFound
                message: The specified user does not exist.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Returned if the user does not exist.
      summary: Delete user
      tags:
      - Users
    get:
      description: ""
      operationId: view_user
      parameters:
      - description: "User id. Use `me` to reference current user, if any."
        example: "1"
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              examples:
                user response:
                  $ref: '#/components/examples/UserResponse'
              schema:
                $ref: '#/components/schemas/UserModel'
          description: OK
        "404":
          content:
            application/hal+json:
              example:
                _type: Error
                errorIdentifier: urn:openproject-org:api:v3:errors:NotFound
                message: The specified user does not exist or you do not have permission
                  to view them.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the user does not exist or if the API user does not have permission to view them.

            **Required permission** The user needs to be locked in if the installation is configured to prevent anonymous access
      summary: View user
      tags:
      - Users
    patch:
      description: |-
        Updates the user's writable attributes.
        When calling this endpoint the client provides a single object, containing at least the properties and links that are required, in the body.
      operationId: update_user
      parameters:
      - description: User id
        example: "1"
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreateModel'
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/UserModel'
          description: OK
        "400":
          $ref: '#/components/responses/InvalidRequestBody'
        "403":
          content:
            application/hal+json:
              example:
                _type: Error
                errorIdentifier: urn:openproject-org:api:v3:errors:MissingPermission
                message: You are not allowed to update the account of this user.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permission:** Administrators, manage_user global permission
        "404":
          content:
            application/hal+json:
              example:
                _type: Error
                errorIdentifier: urn:openproject-org:api:v3:errors:NotFound
                message: The specified user does not exist or you do not have permission
                  to view them.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the user does not exist or if the API user does not have the necessary permissions to update it.

            **Required permission:** Administrators only (exception: users may update their own accounts)
        "406":
          $ref: '#/components/responses/MissingContentType'
        "415":
          $ref: '#/components/responses/UnsupportedMediaType'
        "422":
          content:
            application/hal+json:
              example:
                _embedded:
                  details:
                    attribute: email
                _type: Error
                errorIdentifier: urn:openproject-org:api:v3:errors:PropertyConstraintViolation
                message: The email address is already taken.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if:

            * the client tries to modify a read-only property (`PropertyIsReadOnly`)

            * a constraint for a property was violated (`PropertyConstraintViolation`)
      summary: Update user
      tags:
      - Users
  /api/v3/users/{id}/form:
    post:
      description: ""
      operationId: User_update_form
      parameters:
      - description: User id
        example: "1"
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: OK
        "400":
          $ref: '#/components/responses/InvalidRequestBody'
        "403":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:openproject-org:api:v3:errors:MissingPermission
                    message: You are not authorized to access this resource.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permission:** manage_user global permission
        "404":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:openproject-org:api:v3:errors:NotFound
                    message: The requested resource could not be found.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the request user can not be found.

            *Note: A client without sufficient permissions shall not be able to test for the existence of
            a membership. That's why a 404 is returned here, even if a 403 might be more appropriate.*
        "406":
          $ref: '#/components/responses/MissingContentType'
        "415":
          $ref: '#/components/responses/UnsupportedMediaType'
      summary: User update form
      tags:
      - Users
  /api/v3/users/{id}/lock:
    delete:
      operationId: unlock_user
      parameters:
      - description: User id
        example: "1"
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/UserModel'
          description: OK
        "400":
          content:
            application/hal+json:
              example:
                _type: Error
                errorIdentifier: urn:openproject-org:api:v3:errors:InvalidUserStatusTransition
                message: The current user account status does not allow this operation.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the client tries to unlock a user account whose current status does not allow this transition.

            **Required permission:** Administrators only
        "403":
          content:
            application/hal+json:
              example:
                _type: Error
                errorIdentifier: urn:openproject-org:api:v3:errors:MissingPermission
                message: You are not allowed to unlock the account of this user.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the client does not have sufficient permissions for unlocking a user.

            **Required permission:** Administrators only
        "404":
          content:
            application/hal+json:
              example:
                _type: Error
                errorIdentifier: urn:openproject-org:api:v3:errors:NotFound
                message: The specified user does not exist.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Returned if the user does not exist.
        "406":
          $ref: '#/components/responses/MissingContentType'
        "415":
          $ref: '#/components/responses/UnsupportedMediaType'
      summary: Unlock user
      tags:
      - Users
    post:
      operationId: lock_user
      parameters:
      - description: User id
        example: "1"
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/UserModel'
          description: OK
        "400":
          content:
            application/hal+json:
              example:
                _type: Error
                errorIdentifier: urn:openproject-org:api:v3:errors:InvalidUserStatusTransition
                message: The current user account status does not allow this operation.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the client tries to lock a user account whose current status does not allow this transition.

            **Required permission:** Administrators only
        "403":
          content:
            application/hal+json:
              example:
                _type: Error
                errorIdentifier: urn:openproject-org:api:v3:errors:MissingPermission
                message: You are not allowed to lock the account of this user.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the client does not have sufficient permissions for locking a user.

            **Required permission:** Administrators only
        "404":
          content:
            application/hal+json:
              example:
                _type: Error
                errorIdentifier: urn:openproject-org:api:v3:errors:NotFound
                message: The specified user does not exist.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Returned if the user does not exist.
        "406":
          $ref: '#/components/responses/MissingContentType'
        "415":
          $ref: '#/components/responses/UnsupportedMediaType'
      summary: Lock user
      tags:
      - Users
  /api/v3/values/schema/{id}:
    get:
      description: The schema of a `Values` resource.
      operationId: View_values_schema
      parameters:
      - description: |-
          The identifier of the value. This is typically the value of the `property` property of
          the `Values` resource. It should be in lower camelcase format.
        example: startDate
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              examples:
                Values::Property Start date schema:
                  $ref: '#/components/examples/ValuesPropertyStartDateSchema'
                Values::Property Due date schema:
                  $ref: '#/components/examples/ValuesPropertyDueDateSchema'
                Values::Property Date schema for Milestone work package:
                  $ref: '#/components/examples/ValuesPropertyDateSchema'
              schema:
                $ref: '#/components/schemas/SchemaModel'
          description: OK
        "404":
          content:
            application/hal+json:
              example:
                _type: Error
                errorIdentifier: urn:openproject-org:api:v3:errors:NotFound
                message: The requested resource could not be found.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Returned if the schema does not exist.
        "400":
          content:
            application/hal+json:
              example:
                _type: Error
                errorIdentifier: urn:openproject-org:api:v3:errors:BadRequest
                message: "Bad request: property is invalid"
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Returned if the requested property id is not in a lower camel
            case format.
      summary: View Values schema
  /api/v3/versions:
    get:
      description: "Returns a collection of versions. The client can choose to filter\
        \ the versions similar to how work packages are filtered. In addition to the\
        \ provided filters, the server will reduce the result set to only contain\
        \ versions, for which the requesting client has sufficient permissions (*view_work_packages*)."
      operationId: List_versions
      parameters:
      - description: |-
          JSON specifying filter conditions.
          Accepts the same format as returned by the [queries](https://www.openproject.org/docs/api/endpoints/queries/) endpoint.
          Currently supported filters are:

          + sharing: filters versions by how they are shared within the server (*none*, *descendants*, *hierarchy*, *tree*, *system*).
        example: "[{ \"sharing\": { \"operator\": \"*\", \"values\": [\"system\"]\
          \ }\" }]"
        explode: true
        in: query
        name: filters
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _embedded:
                      elements:
                      - _links:
                          availableInProjects:
                            href: /api/v3/versions/11/projects
                          definingProject:
                            href: /api/v3/projects/12
                          self:
                            href: /api/v3/versions/11
                        _type: Version
                        description:
                          format: plain
                          html: This version has a description
                          raw: This version has a description
                        endDate: null
                        id: 11
                        name: v3.0 Alpha
                        startDate: 2014-11-20
                        status: Open
                      - _links:
                          availableInProjects:
                            href: /api/v3/versions/12/projects
                          definingProject:
                            href: /api/v3/projects/11
                          self:
                            href: /api/v3/versions/12
                        _type: Version
                        description:
                          format: plain
                          html: ""
                          raw: ""
                        endDate: null
                        id: 12
                        name: v2.0
                        startDate: null
                        status: Closed
                      - _links:
                          availableInProjects:
                            href: /api/v3/versions/13/projects
                          definingProject:
                            href: /api/v3/projects/13
                          self:
                            href: /api/v3/versions/10
                        _type: Version
                        description:
                          format: plain
                          html: ""
                          raw: ""
                        endDate: null
                        id: 10
                        name: v1.0
                        startDate: null
                        status: Open
                    _links:
                      self:
                        href: /api/v3/versions
                    _type: Collection
                    count: 3
                    total: 3
              schema:
                $ref: '#/components/schemas/VersionsModel'
          description: OK
      summary: List versions
      tags:
      - Versions
    post:
      description: |-
        Creates a new version applying the attributes provided in the body. Please note that while there is a fixed set of attributes, custom fields can extend a version's attributes and are accepted by the endpoint.

        You can use the form and schema to be retrieve the valid attribute values and by that be guided towards successful creation.
      operationId: Create_version
      responses:
        "201":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/VersionModel'
          description: Created
        "400":
          $ref: '#/components/responses/InvalidRequestBody'
        "403":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:openproject-org:api:v3:errors:MissingPermission
                    message: You are not authorized to access this resource.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permission:** Manage versions
        "406":
          $ref: '#/components/responses/MissingContentType'
        "415":
          $ref: '#/components/responses/UnsupportedMediaType'
        "422":
          description: |-
            Returned if:

            * a constraint for a property was violated (`PropertyConstraintViolation`)
      summary: Create version
      tags:
      - Versions
  /api/v3/versions/available_projects:
    get:
      description: Gets a list of projects in which a version can be created in. The
        list contains all projects in which the user issuing the request has the manage
        versions permissions.
      operationId: Available_projects_for_versions
      responses:
        "200":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _embedded:
                      elements:
                      - _links:
                          categories:
                            href: /api/v3/projects/6/categories
                          createWorkPackage:
                            href: /api/v3/projects/6/work_packages/form
                            method: post
                          createWorkPackageImmediate:
                            href: /api/v3/projects/6/work_packages
                            method: post
                          editWorkPackage:
                            href: "/api/v3//work_packages/{id}/form"
                            method: post
                            templated: true
                          self:
                            href: /api/v3/projects/6
                            title: A project
                          versions:
                            href: /api/v3/projects/6/versions
                        _type: Project
                        createdAt: 2015-07-06T13:28:14+00:00
                        description: Eveniet molestias omnis quis aut qui eum adipisci.
                          Atque aut aut in exercitationem adipisci amet. Nisi asperiores
                          quia ratione veritatis enim exercitationem magnam. Aut fuga
                          architecto adipisci nihil. Et repellat pariatur. Aliquam
                          et sed perferendis nostrum quaerat. Fugit doloremque voluptatem.
                        id: 6
                        identifier: a_project
                        name: A project
                        type: Customer Project
                        updatedAt: 2015-10-01T09:55:02+00:00
                      - _links:
                          categories:
                            href: /api/v3/projects/14/categories
                          createWorkPackage:
                            href: /api/v3/projects/14/work_packages/form
                            method: post
                          createWorkPackageImmediate:
                            href: /api/v3/projects/14/work_packages
                            method: post
                          self:
                            href: /api/v3/projects/14
                            title: Another project
                          versions:
                            href: /api/v3/projects/14/versions
                        _type: Project
                        createdAt: 2016-02-29T12:50:20+00:00
                        description: ""
                        id: 14
                        identifier: another_project
                        name: Another project
                        type: null
                        updatedAt: 2016-02-29T12:50:20+00:00
                    _links:
                      self:
                        href: /api/v3/versions/available_projects
                    _type: Collection
                    count: 2
                    total: 2
              schema:
                $ref: '#/components/schemas/Available_projects_for_versionsModel'
          description: OK
        "403":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:openproject-org:api:v3:errors:MissingPermission
                    message: You are not authorized to access this resource.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permission:** manage versions
      summary: Available projects for versions
      tags:
      - Versions
  /api/v3/versions/form:
    post:
      description: ""
      operationId: Version_create_form
      responses:
        "200":
          description: OK
        "400":
          $ref: '#/components/responses/InvalidRequestBody'
        "403":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:openproject-org:api:v3:errors:MissingPermission
                    message: You are not authorized to access this resource.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permission:** manage versions in any project
        "406":
          $ref: '#/components/responses/MissingContentType'
        "415":
          $ref: '#/components/responses/UnsupportedMediaType'
      summary: Version create form
      tags:
      - Versions
  /api/v3/versions/schema:
    get:
      description: ""
      operationId: View_version_schema
      responses:
        "200":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _dependencies: []
                    _links:
                      self:
                        href: /api/v3/versions/schema
                    _type: Schema
                    createdAt:
                      hasDefault: false
                      name: Created on
                      required: true
                      type: DateTime
                      writable: false
                    customField14:
                      hasDefault: false
                      name: text CF
                      required: false
                      type: String
                      visibility: default
                      writable: true
                    customField40:
                      _links: {}
                      hasDefault: false
                      location: _links
                      name: List CF
                      required: false
                      type: CustomOption
                      visibility: default
                      writable: true
                    definingProject:
                      _links: {}
                      hasDefault: false
                      name: Project
                      required: true
                      type: Project
                      writable: true
                    description:
                      hasDefault: false
                      name: Description
                      required: false
                      type: Formattable
                      writable: true
                    endDate:
                      hasDefault: false
                      name: Finish date
                      required: false
                      type: Date
                      writable: false
                    id:
                      hasDefault: false
                      name: ID
                      required: true
                      type: Integer
                      writable: false
                    name:
                      hasDefault: false
                      maxLength: 60
                      minLength: 1
                      name: Name
                      required: true
                      type: String
                      writable: true
                    sharing:
                      _links: {}
                      hasDefault: false
                      name: Sharing
                      required: true
                      type: String
                      visibility: default
                      writable: true
                    startDate:
                      hasDefault: false
                      name: Start date
                      required: false
                      type: Date
                      writable: true
                    status:
                      _links: {}
                      hasDefault: false
                      name: Status
                      required: true
                      type: String
                      visibility: default
                      writable: true
                    updatedAt:
                      hasDefault: false
                      name: Updated on
                      required: true
                      type: DateTime
                      writable: false
              schema:
                $ref: '#/components/schemas/Version_schemaModel'
          description: OK
        "403":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:openproject-org:api:v3:errors:MissingPermission
                    message: You are not authorized to access this resource.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the client does not have sufficient permissions to see the schema.

            **Required permission:** view work packages or manage versions on any project
      summary: View version schema
      tags:
      - Versions
  /api/v3/versions/{id}:
    delete:
      description: Deletes the version. Work packages associated to the version will
        no longer be assigned to it.
      operationId: Delete_Version
      parameters:
      - description: Version id
        example: "1"
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "204":
          description: Returned if the version was successfully deleted
        "403":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:openproject-org:api:v3:errors:MissingPermission
                    message: You are not authorized to access this resource.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permission:** manage versions
        "404":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:openproject-org:api:v3:errors:NotFound
                    message: The requested resource could not be found.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the version does not exist or the client does not have sufficient permissions
            to see it.

            **Required permission:** view work packages **or** manage versions (any project where the version is available)

            *Note: A client without sufficient permissions shall not be able to test for the existence of
            a version. That's why a 404 is returned here, even if a 403 might be more appropriate.*
        "406":
          $ref: '#/components/responses/MissingContentType'
        "415":
          $ref: '#/components/responses/UnsupportedMediaType'
      summary: Delete version
      tags:
      - Versions
    get:
      description: ""
      operationId: View_version
      parameters:
      - description: Version id
        example: "1"
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _links:
                      availableInProjects:
                        href: /api/v3/versions/11/projects
                      customField4:
                        href: /api/v3/custom_options/5
                        title: Custom field option
                      definingProject:
                        href: /api/v3/projects/11
                      self:
                        href: /api/v3/versions/11
                      update:
                        href: /api/v3/versions/11/form
                        method: POST
                      updateImmediately:
                        href: /api/v3/versions/11
                        method: PATCH
                    _type: Version
                    customField14: "1234567890"
                    description:
                      format: plain
                      html: This version has a description
                      raw: This version has a description
                    endDate: null
                    id: 11
                    name: v3.0 Alpha
                    sharing: system
                    startDate: 2014-11-20
                    status: open
              schema:
                $ref: '#/components/schemas/VersionModel'
          description: OK
        "404":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:openproject-org:api:v3:errors:NotFound
                    message: The requested resource could not be found.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the version does not exist or the client does not have sufficient permissions
            to see it.

            **Required permission:** view work packages **or** manage versions (any project where the version is available)

            *Note: A client without sufficient permissions shall not be able to test for the existence of
            a version. That's why a 404 is returned here, even if a 403 might be more appropriate.*
      summary: View version
      tags:
      - Versions
    patch:
      description: "Updates the given version by applying the attributes provided\
        \ in the body. Please note that while there is a fixed set of attributes,\
        \ custom fields can extend a version's attributes and are accepted by the\
        \ endpoint."
      operationId: Update_Version
      parameters:
      - description: Version id
        example: "1"
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/VersionModel'
          description: OK
        "400":
          $ref: '#/components/responses/InvalidRequestBody'
        "403":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:openproject-org:api:v3:errors:MissingPermission
                    message: You are not authorized to access this resource.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permission:** Manage versions in the version's project.
        "404":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:openproject-org:api:v3:errors:NotFound
                    message: The requested resource could not be found.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the version does not exist or the client does not have sufficient permissions
            to see it.

            **Required permission:** view work packages **or** manage versions (any project where the version is available)

            *Note: A client without sufficient permissions shall not be able to test for the existence of
            a version. That's why a 404 is returned here, even if a 403 might be more appropriate.*
        "406":
          $ref: '#/components/responses/MissingContentType'
        "415":
          $ref: '#/components/responses/UnsupportedMediaType'
        "422":
          description: |-
            Returned if:

            * a constraint for a property was violated (`PropertyConstraintViolation`)
      summary: Update Version
      tags:
      - Versions
  /api/v3/versions/{id}/form:
    post:
      description: ""
      operationId: Version_update_form
      parameters:
      - description: Project id
        example: "1"
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: OK
        "400":
          $ref: '#/components/responses/InvalidRequestBody'
        "403":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:openproject-org:api:v3:errors:MissingPermission
                    message: You are not authorized to access this resource.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permission:** manage versions in the version's project
        "406":
          $ref: '#/components/responses/MissingContentType'
        "415":
          $ref: '#/components/responses/UnsupportedMediaType'
      summary: Version update form
      tags:
      - Versions
  /api/v3/versions/{id}/projects:
    get:
      description: |-
        This endpoint lists the projects where the given version is available.

        The projects returned depend on the sharing settings of the given version,
        but are also limited to the projects that the current user is allowed to see.
      operationId: List_projects_with_version
      parameters:
      - description: Version id
        example: "1"
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _embedded:
                      elements:
                      - _links:
                          categories:
                            href: /api/v3/projects/1/categories
                          self:
                            href: /api/v3/projects/1
                            title: Lorem
                          status:
                            href: /api/v3/project_statuses/on_track
                            title: On track
                          versions:
                            href: /api/v3/projects/1/versions
                        _type: Project
                        active: true
                        createdAt: 2014-05-21T08:51:20.396Z
                        description:
                          format: markdown
                          html: <p>Lorem <strong>ipsum</strong> dolor sit amet</p>
                          raw: Lorem **ipsum** dolor sit amet
                        id: 1
                        identifier: project_identifier
                        name: Project example
                        statusExplanation:
                          format: markdown
                          html: <p>Everything <strong>fine</strong></p>
                          raw: Everything **fine**
                        updatedAt: 2014-05-21T08:51:20.396Z
                    _links:
                      self:
                        href: /api/v3/versions/2/projects
                    _type: Collection
                    count: 1
                    total: 1
              schema:
                $ref: '#/components/schemas/List_projects_by_versionModel'
          description: OK
        "404":
          description: |-
            Returned if the version does not exist or the client does not have sufficient permissions
            to see it.

            **Required permission:** view work packages **or** manage versions (any project where the given version is available)

            *Note: A client without sufficient permissions shall not be able to test for the existence of a version.
            That's why a 404 is returned here, even if a 403 might be more appropriate.*
      summary: List projects having version
      tags:
      - Projects
  /api/v3/views:
    get:
      description: Returns a collection of Views. The collection can be filtered via
        query parameters similar to how work packages are filtered.
      operationId: List_views
      parameters:
      - description: |-
          JSON specifying filter conditions.
          Currently supported filters are:

          + project: filters views by the project their associated query is assigned to. If the project filter is passed with the `!*` (not any) operator, global views are returned.

          + id: filters views based on their id

          + type: filters views based on their type
        example: "[{ \"project_id\": { \"operator\": \"!*\", \"values\": null }\"\
          \ }]"
        explode: true
        in: query
        name: filters
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/hal+json:
              examples:
                Queries:
                  $ref: '#/components/examples/Views'
          description: OK
      summary: List views
      tags:
      - Views
  /api/v3/views/{id}:
    get:
      description: ""
      operationId: View_view
      parameters:
      - description: View id
        example: 42
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              examples:
                ViewWorkPackagesTable:
                  $ref: '#/components/examples/ViewWorkPackagesTable'
                ViewTeamPlanner:
                  $ref: '#/components/examples/ViewTeamPlanner'
          description: "Returns the result of a single view, dependent of the view\
            \ type."
        "400":
          $ref: '#/components/responses/InvalidRequestBody'
        "403":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:openproject-org:api:v3:errors:MissingPermission
                    message: You are not authorized to access this resource.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permission:** The required permission depends on the type of the view.
        "404":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:openproject-org:api:v3:errors:NotFound
                    message: The requested resource could not be found.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the resource can not be found.

            *Note: A client without sufficient permissions shall not be able to test for the existence of
            a view. That's why a 404 is returned here, even if a 403 might be more appropriate.*
      summary: View view
      tags:
      - Views
    post:
      description: |-
        When calling this endpoint the client provides a single object, containing at least the properties and links that are required, in the body.
        The required fields of a View can be found in its schema, which is embedded in the respective form.
        Note that it is only allowed to provide properties or links supporting the write operation.

        There are different subtypes of `Views` (e.g. `Views::WorkPackagesTable`) with each having its own
        endpoint for creating that subtype e.g.

        * `/api/v3/views/work_packages_table` for `Views::WorkPackagesTable`
        * `/api/v3/views/team_planner` for `Views::TeamPlanner`
        * `/api/v3/views/work_packages_calendar` for `Views::WorkPackagesCalendar`

        **Not yet implemented** To get the list of available subtypes and by that the endpoints for creating a subtype, use the
        ```
          /api/v3/views/schemas
        ```
        endpoint.
      operationId: Create_views
      parameters:
      - description: The view identifier
        example: "1"
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              Views::WorkPackagesTable:
                value:
                  _links:
                    query:
                      href: /api/v3/queries/5
              Views::TeamPlanner:
                value:
                  _links:
                    query:
                      href: /api/v3/queries/5
            schema:
              $ref: '#/components/schemas/Create_views_request'
      responses:
        "201":
          content:
            application/hal+json:
              examples:
                Views::WorkPackagesTable:
                  $ref: '#/components/examples/ViewWorkPackagesTable'
                Views::TeamPlanner:
                  $ref: '#/components/examples/ViewTeamPlanner'
              schema:
                type: object
          description: Created
        "400":
          $ref: '#/components/responses/InvalidRequestBody'
        "406":
          $ref: '#/components/responses/MissingContentType'
        "415":
          $ref: '#/components/responses/UnsupportedMediaType'
        "422":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _embedded:
                      details:
                        attribute: query
                    _type: Error
                    errorIdentifier: urn:openproject-org:api:v3:errors:PropertyConstraintViolation
                    message: Query does not exist.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if:

            * the client tries to modify a read-only property (`PropertyIsReadOnly`)

            * a constraint for a property was violated (`PropertyConstraintViolation`)

            * the client provides a link to an invalid resource (`ResourceTypeMismatch`),
              e.g. a query not found
      summary: Create view
      tags:
      - Views
  /api/v3/wiki_pages/{id}:
    get:
      description: Retrieve an individual wiki page as identified by the id parameter
      operationId: View_Wiki_Page
      parameters:
      - description: Wiki page identifier
        example: "1"
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _embedded:
                      project:
                        _type: Project...
                        id: 12
                    _links:
                      addAttachment:
                        href: /api/v3/wiki_pages/72/attachments
                        method: post
                      attachments:
                        href: /api/v3/wiki_pages/72/attachments
                      project:
                        href: /api/v3/projects/12
                        title: some project
                      self:
                        href: /api/v3/wiki_pages/72
                    _type: WikiPage
                    id: 72
                    title: A wiki page with a name
              schema:
                $ref: '#/components/schemas/Wiki_PageModel'
          description: OK
        "404":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:openproject-org:api:v3:errors:NotFound
                    message: The requested resource could not be found.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the wiki page does not exist or the client does not have sufficient permissions to see it.

            **Required permission:** view wiki page in the page's project
      summary: View Wiki Page
      tags:
      - Wiki Pages
  /api/v3/wiki_pages/{id}/attachments:
    get:
      description: ""
      operationId: List_attachments_by_wiki_page
      parameters:
      - description: ID of the wiki page whose attachments will be listed
        example: "1"
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _embedded:
                      elements:
                      - _links:
                          author:
                            href: /api/v3/users/1
                            title: OpenProject Admin
                          container:
                            href: /api/v3/wiki_pages/72
                            title: wiki
                          delete:
                            href: /api/v3/attachments/376
                            method: delete
                          downloadLocation:
                            href: /api/v3/attachments/376/content
                          self:
                            href: /api/v3/attachments/376
                            title: 200.gif
                        _type: Attachment
                        contentType: image/gif
                        createdAt: 2018-06-01T07:24:19.896Z
                        description:
                          format: plain
                          html: ""
                          raw: ""
                        digest:
                          algorithm: md5
                          hash: 7ac9c97ef73d47127f590788b84c0c1c
                        fileName: some.gif
                        fileSize: 3521772
                        id: 376
                    _links:
                      self:
                        href: /api/v3/wiki_pages/72/attachments
                    _type: Collection
                    count: 1
                    total: 1
              schema:
                $ref: '#/components/schemas/Attachments_Model'
          description: OK
        "404":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:openproject-org:api:v3:errors:NotFound
                    message: The requested resource could not be found.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the wiki page does not exist or the client does not have sufficient permissions
            to see it.

            **Required permission:** view wiki pages

            *Note: A client without sufficient permissions shall not be able to test for the existence of a work package.
            That's why a 404 is returned here, even if a 403 might be more appropriate.*
      summary: List attachments by wiki page
      tags:
      - Attachments
    post:
      description: Adds an attachment with the wiki page as it's container.
      operationId: Add_attachment_to_wiki_page
      parameters:
      - description: ID of the wiki page to receive the attachment
        example: "1"
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _embedded:
                      author:
                        _links:
                          lock:
                            href: /api/v3/users/1/lock
                            method: post
                            title: Set lock on admin
                          self:
                            href: /api/v3/users/1
                            title: OpenProject Admin
                          showUser:
                            href: /users/1
                            type: text/html
                          updateImmediately:
                            href: /api/v3/users/1
                            method: patch
                            title: Update admin
                        _type: User
                        admin: true
                        avatar: ""
                        createdAt: 2015-03-20T12:56:52.343Z
                        email: null
                        firstName: OpenProject
                        id: 1
                        identityUrl: null
                        lastName: Admin
                        login: admin
                        name: OpenProject Admin
                        status: active
                        updatedAt: 2018-05-29T13:57:44.662Z
                      container:
                        _links:
                          addAttachment:
                            href: /api/v3/wiki_pages/72/attachments
                            method: post
                          attachments:
                            href: /api/v3/wiki_pages/72/attachments
                          project:
                            href: /api/v3/projects/12
                            title: Demo project
                          self:
                            href: /api/v3/wiki_pages/72
                        _type: WikiPage
                        id: 72
                        title: wiki
                    _links:
                      author:
                        href: /api/v3/users/1
                        title: OpenProject Admin
                      container:
                        href: /api/v3/wiki_pages/72
                        title: wiki
                      delete:
                        href: /api/v3/attachments/376
                        method: delete
                      downloadLocation:
                        href: /api/v3/attachments/376/content
                      self:
                        href: /api/v3/attachments/376
                        title: 200.gif
                    _type: Attachment
                    contentType: image/gif
                    createdAt: 2018-06-01T07:24:19.896Z
                    description:
                      format: plain
                      html: ""
                      raw: ""
                    digest:
                      algorithm: md5
                      hash: 7ac9c97ef73d47127f590788b84c0c1c
                    fileName: some.gif
                    fileSize: 3521772
                    id: 376
          description: OK
        "400":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:openproject-org:api:v3:errors:InvalidRequestBody
                    message: The request could not be parsed as JSON.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the client sends a not understandable request. Reasons include:

            * Omitting one of the required parts (metadata and file)

            * sending unparsable JSON in the metadata part
        "403":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:openproject-org:api:v3:errors:MissingPermission
                    message: You are not allowed to delete this attachment.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permission:** edit wiki pages

            *Note that you will only receive this error, if you are at least allowed to see the wiki page*
        "404":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:openproject-org:api:v3:errors:NotFound
                    message: The requested resource could not be found.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the wiki page does not exist or the client does not have sufficient permissions
            to see it.

            **Required permission:** view wiki pages

            *Note: A client without sufficient permissions shall not be able to test for the existence of a wiki page
            That's why a 404 is returned here, even if a 403 might be more appropriate.*
        "406":
          $ref: '#/components/responses/MissingContentType'
        "415":
          $ref: '#/components/responses/UnsupportedMediaType'
        "422":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:openproject-org:api:v3:errors:PropertyConstraintViolation
                    message: File is too large (maximum size is 5242880 Bytes).
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the client tries to send an invalid attachment.
            Reasons are:

            * Omitting the file name (`fileName` property of metadata part)

            * Sending a file that is too large
      summary: Add attachment to wiki page
      tags:
      - Attachments
  /api/v3/work_packages:
    get:
      description: Returns a collection of work packages.
      operationId: list_work_packages
      parameters:
      - description: Page number inside the requested collection.
        example: "25"
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 1
          type: integer
        style: form
      - description: Number of elements to display per page.
        example: "25"
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          type: integer
        style: form
      - description: |-
          JSON specifying filter conditions.
          Accepts the same format as returned by the [queries](https://www.openproject.org/docs/api/endpoints/queries/)
          endpoint. If no filter is to be applied, the client should send an empty array (`[]`), otherwise a default
          filter is applied. A Currently supported filters are (there are additional filters added by modules):

          - assigned_to
          - assignee_or_group
          - attachment_base
          - attachment_content
          - attachment_file_name
          - author
          - blocked
          - blocks
          - category
          - comment
          - created_at
          - custom_field
          - dates_interval
          - description
          - done_ratio
          - due_date
          - duplicated
          - duplicates
          - duration
          - estimated_hours
          - file_link_origin_id
          - follows
          - group
          - id
          - includes
          - linkable_to_storage_id
          - linkable_to_storage_url
          - manual_sort
          - milestone
          - only_subproject
          - parent
          - partof
          - precedes
          - principal_base
          - priority
          - project
          - relatable
          - relates
          - required
          - requires
          - responsible
          - role
          - search
          - start_date
          - status
          - storage_id
          - storage_url
          - subject
          - subject_or_id
          - subproject
          - type
          - typeahead
          - updated_at
          - version
          - watcher
          - work_package
        example: "[{ \"type_id\": { \"operator\": \"=\", \"values\": [\"1\", \"2\"\
          ] }}]"
        explode: true
        in: query
        name: filters
        required: false
        schema:
          default: "[{ \"status_id\": { \"operator\": \"o\", \"values\": null }}]"
          type: string
        style: form
      - description: |-
          JSON specifying sort criteria.
          Accepts the same format as returned by the [queries](https://www.openproject.org/docs/api/endpoints/queries/) endpoint.
        example: "[[\"status\", \"asc\"]]"
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          default: "[[\"id\", \"asc\"]]"
          type: string
        style: form
      - description: The column to group by.
        example: status
        explode: true
        in: query
        name: groupBy
        required: false
        schema:
          type: string
        style: form
      - description: Indicates whether properties should be summed up if they support
          it.
        example: true
        explode: true
        in: query
        name: showSums
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Comma separated list of properties to include.
        example: "total,elements/subject,elements/id,self"
        explode: true
        in: query
        name: select
        required: false
        schema:
          type: string
        style: form
      - description: |-
          In order to perform a [baseline comparison](/docs/api/baseline-comparisons), you may provide one or several timestamps
          in ISO-8601 format as comma-separated list. The timestamps may be absolute or relative,
          such as ISO8601 dates, ISO8601 durations and the following relative date keywords: "oneDayAgo@HH:MM+HH:MM",
          "lastWorkingDay@HH:MM+HH:MM", "oneWeekAgo@HH:MM+HH:MM", "oneMonthAgo@HH:MM+HH:MM".
          The first "HH:MM" part represents the zero paded hours and minutes.
          The last "+HH:MM" part represents the timezone offset from UTC associated with the time,
          the offset can be positive or negative e.g."oneDayAgo@01:00+01:00", "oneDayAgo@01:00-01:00".

          Usually, the first timestamp is the baseline date, the last timestamp is the current date.
          Values older than 1 day are accepted only with valid Enterprise Token available.
        example: "2022-01-01T00:00:00Z,PT0S"
        explode: true
        in: query
        name: timestamps
        required: false
        schema:
          default: PT0S
          type: string
        style: form
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Work_PackagesModel'
          description: OK
        "400":
          $ref: '#/components/responses/InvalidRequestBody'
        "403":
          content:
            application/hal+json:
              example:
                _type: Error
                errorIdentifier: urn:openproject-org:api:v3:errors:MissingPermission
                message: You are not allowed to see work packages.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permission:** view work packages (globally or in any project)
      summary: List work packages
      tags:
      - Work Packages
    post:
      description: |-
        When calling this endpoint the client provides a single object, containing at least the properties and links that are required, in the body.
        The required fields of a WorkPackage can be found in its schema, which is embedded in the respective form.
        Note that it is only allowed to provide properties or links supporting the write operation.

        A project link must be set when creating work packages through this route.

        When setting start date, finish date, and duration together, their correctness will be checked and a 422 error will be returned if one value does not match with the two others. You can make the server compute a value: set only two values in the request and the third one will be computed and returned in the response. For instance, when sending `{ "startDate": "2022-08-23", duration: "P2D" }`, the response will include `{ "dueDate": "2022-08-24" }`.
      operationId: create_work_package
      parameters:
      - description: |-
          Indicates whether change notifications (e.g. via E-Mail) should be sent.
          Note that this controls notifications for all users interested in changes to the work package (e.g. watchers, author and assignee),
          not just the current user.
        example: false
        explode: true
        in: query
        name: notify
        required: false
        schema:
          default: true
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Work_PackageModel'
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Work_PackageModel'
          description: OK
        "400":
          $ref: '#/components/responses/InvalidRequestBody'
        "403":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:openproject-org:api:v3:errors:MissingPermission
                    message: You are not allowed to add work packages to this project.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permission:** add work packages

            *Note that you will only receive this error, if you are at least allowed to see the corresponding project.*
        "404":
          content:
            application/hal+json:
              example:
                _type: Error
                errorIdentifier: urn:openproject-org:api:v3:errors:NotFound
                message: The specified project does not exist.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the project does not exist or the client does not have sufficient permissions
            to see it.

            **Required permissions:** view project

            *Note: A client without sufficient permissions shall not be able to test for the existence of a project.
            That's why a 404 is returned here, even if a 403 might be more appropriate.*
        "406":
          $ref: '#/components/responses/MissingContentType'
        "415":
          $ref: '#/components/responses/UnsupportedMediaType'
        "422":
          content:
            application/hal+json:
              example:
                _embedded:
                  details:
                    attribute: Subject
                _type: Error
                errorIdentifier: urn:openproject-org:api:v3:errors:PropertyConstraintViolation
                message: The subject might not be blank.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if:

            * the client tries to write a read-only property

            * a constraint for a property was violated

            * a property was provided in an unreadable format
      summary: Create Work Package
      tags:
      - Work Packages
  /api/v3/work_packages/form:
    post:
      description: ""
      operationId: Work_Package_Create_Form
      responses:
        "200":
          description: OK
      summary: Work Package Create Form
      tags:
      - Work Packages
  /api/v3/work_packages/schemas:
    get:
      description: List work package schemas.
      operationId: List_Work_Package_Schemas
      parameters:
      - description: |-
          JSON specifying filter conditions.
          Accepts the same format as returned by the [queries](https://www.openproject.org/docs/api/endpoints/queries/) endpoint. Currently supported filters are:

          + id: The schema's id

          Schema id has the form `project_id-work_package_type_id`.
        example: "[{ \"id\": { \"operator\": \"=\", \"values\": [\"12-1\", \"14-2\"\
          ] } }]"
        explode: true
        in: query
        name: filters
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _embedded:
                      elements:
                      - _links:
                          self:
                            href: /api/v3/work_packages/schemas/13-1
                        _type: Schema...
                      - _links:
                          self:
                            href: /api/v3/work_packages/schemas/7-6
                        _type: Schema...
                    _links:
                      self:
                        href: /api/v3/work_packages/schemas
                    _type: Collection
                    count: 2
                    total: 5
              schema:
                $ref: '#/components/schemas/Work_Package_SchemasModel'
          description: OK
        "400":
          $ref: '#/components/responses/InvalidRequestBody'
        "403":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:openproject-org:api:v3:errors:MissingPermission
                    message: You are not allowed to list schemas.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permission:** View work packages in any project.
      summary: List Work Package Schemas
      tags:
      - Work Packages
  /api/v3/work_packages/schemas/{identifier}:
    get:
      description: ""
      operationId: View_Work_Package_Schema
      parameters:
      - description: Identifier of the schema
        example: 12-13
        explode: false
        in: path
        name: identifier
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
        "404":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:openproject-org:api:v3:errors:NotFound
                    message: The specified schema does not exist.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the schema does not exist or the client does not have sufficient permissions
            to see it.

            **Required permission:** view work packages (on the project where this schema is used)

            *Note: A client without sufficient permissions shall not be able to test for the existence of a project.
            That's why a 404 is returned here, even if a 403 might be more appropriate.*
      summary: View Work Package Schema
      tags:
      - Work Packages
  /api/v3/work_packages/{id}:
    delete:
      description: |-
        Deletes the work package, as well as:

        - all associated time entries
        - its hierarchy of child work packages
      operationId: delete_work_package
      parameters:
      - description: Work package id
        example: 1
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "204":
          description: |-
            Returned if the work package was deleted successfully.

            Note that the response body is empty as of now. In future versions of the API a body
            *might* be returned along with an appropriate HTTP status.
        "403":
          content:
            application/hal+json:
              example:
                _type: Error
                errorIdentifier: urn:openproject-org:api:v3:errors:MissingPermission
                message: You are not allowed to delete this work package.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permission:** delete work package
        "404":
          content:
            application/hal+json:
              example:
                _type: Error
                errorIdentifier: urn:openproject-org:api:v3:errors:NotFound
                message: The specified work package does not exist.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the work package does not exist or the client does not have sufficient permissions to see it.

            **Required permission:** view work package
        "406":
          $ref: '#/components/responses/MissingContentType'
        "415":
          $ref: '#/components/responses/UnsupportedMediaType'
      summary: Delete Work Package
      tags:
      - Work Packages
    get:
      description: Returns the specified work package.
      operationId: view_work_package
      parameters:
      - description: Work package id
        example: 1
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: |-
          In order to perform a [baseline comparison](/docs/api/baseline-comparisons) of the work-package attributes, you may
          provide one or several timestamps in ISO-8601 format as comma-separated list. The timestamps may be absolute or relative,
          such as ISO8601 dates, ISO8601 durations and the following relative date keywords: "oneDayAgo@HH:MM+HH:MM",
          "lastWorkingDay@HH:MM+HH:MM", "oneWeekAgo@HH:MM+HH:MM", "oneMonthAgo@HH:MM+HH:MM".
          The first "HH:MM" part represents the zero paded hours and minutes.
          The last "+HH:MM" part represents the timezone offset from UTC associated with the time,
          the offset can be positive or negative e.g."oneDayAgo@01:00+01:00", "oneDayAgo@01:00-01:00".

          Usually, the first timestamp is the baseline date, the last timestamp is the current date.
          Values older than 1 day are accepted only with valid Enterprise Token available.
        example: "2022-01-01T00:00:00Z,PT0S"
        explode: true
        in: query
        name: timestamps
        required: false
        schema:
          default: PT0S
          type: string
        style: form
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Work_PackageModel'
          description: OK
        "404":
          content:
            application/hal+json:
              example:
                _type: Error
                errorIdentifier: urn:openproject-org:api:v3:errors:NotFound
                message: The specified work package does not exist.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the work package does not exist or the client does not have sufficient permissions to see it.

            **Required permission:** view work package
      summary: View Work Package
      tags:
      - Work Packages
    patch:
      description: |-
        When calling this endpoint the client provides a single object, containing the properties and links that it wants
        to change, in the body. Note that it is only allowed to provide properties or links supporting the **write**
        operation.

        Additionally to the fields the client wants to change, it is mandatory to provide the value of `lockVersion` which
        was received by the `GET` request this change originates from.

        The value of `lockVersion` is used to implement
        [optimistic locking](https://en.wikipedia.org/wiki/Optimistic_concurrency_control).
      operationId: update_work_package
      parameters:
      - description: Work package id
        example: 42
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: |-
          Indicates whether change notifications should be sent. Note that this controls notifications for all users
          interested in changes to the work package (e.g. watchers, author and assignee), not just the current user.
        example: false
        explode: true
        in: query
        name: notify
        required: false
        schema:
          default: true
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Work_PackageModel'
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/WorkPackagePatchModel'
          description: OK
        "400":
          $ref: '#/components/responses/InvalidRequestBody'
        "403":
          content:
            application/hal+json:
              example:
                _type: Error
                errorIdentifier: urn:openproject-org:api:v3:errors:MissingPermission
                message: You are not allowed to edit the content of the work package.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permission:** edit work package, assign version, change work package status, manage subtasks or move work package
        "404":
          content:
            application/hal+json:
              example:
                _type: Error
                errorIdentifier: urn:openproject-org:api:v3:errors:NotFound
                message: The specified work package does not exist.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the work package does not exist or the client does not have sufficient permissions to see it.

            **Required permission:** view work package
        "406":
          $ref: '#/components/responses/MissingContentType'
        "409":
          content:
            application/hal+json:
              example:
                _type: Error
                errorIdentifier: urn:openproject-org:api:v3:errors:UpdateConflict
                message: "Your changes could not be saved, because the work package\
                  \ was changed since you've seen it the last time."
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Returned if the resource was changed since the client requested
            it. This is determined using the `lockVersion` property.
        "415":
          $ref: '#/components/responses/UnsupportedMediaType'
        "422":
          content:
            application/hal+json:
              example:
                _embedded:
                  details:
                    attribute: Subject
                _type: Error
                errorIdentifier: urn:openproject-org:api:v3:errors:PropertyConstraintViolation
                message: The subject might not be blank.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if:

            - the client tries to modify a read-only property (`PropertyIsReadOnly`)
            - a constraint for a property was violated (`PropertyConstraintViolation`)
            - the client provides a link to an invalid resource (`ResourceTypeMismatch`)
      summary: Update a Work Package
      tags:
      - Work Packages
  /api/v3/work_packages/{id}/activities:
    get:
      description: ""
      operationId: List_work_package_activities
      parameters:
      - description: Work package id
        example: "1"
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _embedded:
                      elements:
                      - _links:
                          self:
                            href: /api/v3/activity/1
                          user:
                            href: /api/v3/users/1
                          workPackage:
                            href: /api/v3/work_packages/1
                        _type: Activity
                        comment:
                          format: markdown
                          html: <p>Lorem ipsum dolor sit amet.</p>
                          raw: Lorem ipsum dolor sit amet.
                        createdAt: 2014-05-21T08:51:20.396Z
                        updatedAt: 2014-05-21T09:14:02.726Z
                        details: []
                        id: 1
                        version: 1
                      - _links:
                          self:
                            href: /api/v3/activity/2
                          user:
                            href: /api/v3/users/1
                          workPackage:
                            href: /api/v3/work_packages/1
                        _type: Activity
                        comment:
                          format: markdown
                          html: <p>Lorem ipsum dolor sit amet.</p>
                          raw: Lorem ipsum dolor sit amet.
                        createdAt: 2014-05-21T09:51:22.077Z
                        updatedAt: 2014-05-21T10:14:02.957Z
                        details: []
                        id: 2
                        version: 2
                    _links:
                      self:
                        href: /api/v3/work_packages/1/revisions
                    _type: Collection
                    count: 2
                    total: 2
              schema:
                $ref: '#/components/schemas/Work_Package_activitiesModel'
          description: OK
        "404":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:openproject-org:api:v3:errors:NotFound
                    message: The specified work package does not exist.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the work package does not exist or the client does not have sufficient permissions to see it.

            **Required permission:** view work package
      summary: List work package activities
      tags:
      - Work Packages
    post:
      description: |-
        Creates an activity for the selected work package and, on success, returns the
        updated activity.
      operationId: Comment_work_package
      parameters:
      - description: Work package id
        example: "1"
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: |-
          Indicates whether change notifications (e.g. via E-Mail) should be sent.
          Note that this controls notifications for all users interested in changes to the work package (e.g. watchers, author and assignee),
          not just the current user.
        example: false
        explode: true
        in: query
        name: notify
        required: false
        schema:
          default: true
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Comment_work_package_request'
      responses:
        "201":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ActivityModel'
          description: Created
        "400":
          $ref: '#/components/responses/InvalidRequestBody'
        "403":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:openproject-org:api:v3:errors:MissingPermission
                    message: You are not allowed to create a comment here.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permission:** create journals

            *Note that you will only receive this error, if you are at least allowed to see the corresponding work package.*
        "404":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:openproject-org:api:v3:errors:NotFound
                    message: The specified work package does not exist.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the work package does not exist or the client does not have sufficient permissions to see it.

            **Required permission:** view work package
      summary: Comment work package
      tags:
      - Work Packages
  /api/v3/work_packages/{id}/attachments:
    get:
      description: ""
      operationId: list_work_package_attachments
      parameters:
      - description: ID of the work package whose attachments will be listed
        example: "1"
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Attachments_Model'
          description: OK
        "404":
          content:
            application/hal+json:
              example:
                _type: Error
                errorIdentifier: urn:openproject-org:api:v3:errors:NotFound
                message: The specified work package does not exist.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the work package does not exist or the client does not have sufficient permissions
            to see it.

            **Required permission:** view work package

            *Note: A client without sufficient permissions shall not be able to test for the existence of a work package.
            That's why a 404 is returned here, even if a 403 might be more appropriate.*
      summary: List attachments by work package
      tags:
      - Attachments
    post:
      description: |-
        To add an attachment to a work package, a client needs to issue a request of type `multipart/form-data`
        with exactly two parts.

        The first part *must* be called `metadata`. Its content type is expected to be `application/json`,
        the body *must* be a single JSON object, containing at least the `fileName` and optionally the attachments `description`.

        The second part *must* be called `file`, its content type *should* match the mime type of the file.
        The body *must* be the raw content of the file.
        Note that a `filename` must be indicated in the `Content-Disposition` of this part, however it will be ignored.
        Instead the `fileName` inside the JSON of the metadata part will be used.
      operationId: create_work_package_attachment
      parameters:
      - description: ID of the work package to receive the attachment
        example: "1"
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/create_attachment_request'
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AttachmentModel'
          description: OK
        "400":
          content:
            application/hal+json:
              example:
                _type: Error
                errorIdentifier: urn:openproject-org:api:v3:errors:InvalidRequestBody
                message: The request could not be parsed as JSON.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the client sends a not understandable request. Reasons include:

            * Omitting one of the required parts (metadata and file)

            * sending unparsable JSON in the metadata part
        "403":
          content:
            application/hal+json:
              example:
                _type: Error
                errorIdentifier: urn:openproject-org:api:v3:errors:MissingPermission
                message: You are not allowed to delete this attachment.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permission:** edit work package or add work package

            *Note that you will only receive this error, if you are at least allowed to see the work package.*
        "404":
          content:
            application/hal+json:
              example:
                _type: Error
                errorIdentifier: urn:openproject-org:api:v3:errors:NotFound
                message: The specified work package does not exist.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the work package does not exist or the client does not have sufficient permissions
            to see it.

            **Required permission:** view work package

            *Note: A client without sufficient permissions shall not be able to test for the existence of a work package.
            That's why a 404 is returned here, even if a 403 might be more appropriate.*
        "406":
          $ref: '#/components/responses/MissingContentType'
        "415":
          $ref: '#/components/responses/UnsupportedMediaType'
        "422":
          content:
            application/hal+json:
              example:
                _type: Error
                errorIdentifier: urn:openproject-org:api:v3:errors:PropertyConstraintViolation
                message: File is too large (maximum size is 5242880 Bytes).
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the client tries to send an invalid attachment.
            Reasons are:

            * Omitting the file name (`fileName` property of metadata part)

            * Sending a file that is too large
      summary: Create work package attachment
      tags:
      - Attachments
  /api/v3/work_packages/{id}/available_assignees:
    get:
      description: Gets a list of users that can be assigned to the given work package.
      operationId: Work_Package_Available_assignees
      parameters:
      - description: Work package id
        example: "1"
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _embedded:
                      elements:
                      - _links:
                          delete:
                            href: /api/v3/users/1
                            method: DELETE
                            title: Delete j.sheppard
                          lock:
                            href: /api/v3/users/1/lock
                            method: POST
                            title: Set lock on j.sheppard
                          self:
                            href: /api/v3/users/1
                            title: John Sheppard - j.sheppard
                        _type: User
                        avatar: https://example.org/users/1/avatar
                        createdAt: 2014-05-21T08:51:20.396Z
                        email: shep@mail.com
                        firstName: John
                        id: 1
                        lastName: Sheppard
                        login: j.sheppard
                        status: active
                        updatedAt: 2014-05-21T08:51:20.396Z
                      - _links:
                          delete:
                            href: /api/v3/users/2
                            method: DELETE
                            title: Delete j.sheppard2
                          lock:
                            href: /api/v3/users/2/lock
                            method: POST
                            title: Set lock on j.sheppard2
                          self:
                            href: /api/v3/users/2
                            title: Jim Sheppard - j.sheppard2
                        _type: User
                        avatar: https://example.org/users/1/avatar
                        createdAt: 2014-05-21T08:51:20.396Z
                        email: shep@mail.net
                        firstName: Jim
                        id: 2
                        lastName: Sheppard
                        login: j.sheppard2
                        status: active
                        updatedAt: 2014-05-21T08:51:20.396Z
                    _links:
                      self:
                        href: /api/v3/work_packages/42/available_assignees
                    _type: Collection
                    count: 2
                    total: 2
              schema:
                $ref: '#/components/schemas/Available_AssigneesModel'
          description: OK
        "403":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:openproject-org:api:v3:errors:MissingPermission
                    message: You are not allowed to see the assignable users for this
                      work package.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permission:** edit work packages

            *Note that you will only receive this error, if you are at least allowed to see the corresponding work package.*
        "404":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:openproject-org:api:v3:errors:NotFound
                    message: The work package you are looking for cannot be found
                      or has been deleted.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the work package does not exist or the client does not have sufficient permissions to see it.

            **Required permission:** view work packages
      summary: Work Package Available assignees
      tags:
      - Work Packages
  /api/v3/work_packages/{id}/available_projects:
    get:
      description: Gets a list of projects that are available as projects to which
        the work package can be moved.
      operationId: Available_projects_for_work_package
      parameters:
      - description: work package id
        example: "1"
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _embedded:
                      elements:
                      - _links:
                          categories:
                            href: /api/v3/projects/6/categories
                          createWorkPackage:
                            href: /api/v3/projects/6/work_packages/form
                            method: post
                          createWorkPackageImmediate:
                            href: /api/v3/projects/6/work_packages
                            method: post
                          editWorkPackage:
                            href: "/api/v3//work_packages/{id}/form"
                            method: post
                            templated: true
                          self:
                            href: /api/v3/projects/6
                            title: A project
                          versions:
                            href: /api/v3/projects/6/versions
                        _type: Project
                        createdAt: 2015-07-06T13:28:14+00:00
                        description: Eveniet molestias omnis quis aut qui eum adipisci.
                          Atque aut aut in exercitationem adipisci amet. Nisi asperiores
                          quia ratione veritatis enim exercitationem magnam. Aut fuga
                          architecto adipisci nihil. Et repellat pariatur. Aliquam
                          et sed perferendis nostrum quaerat. Fugit doloremque voluptatem.
                        id: 6
                        identifier: a_project
                        name: A project
                        type: Customer Project
                        updatedAt: 2015-10-01T09:55:02+00:00
                      - _links:
                          categories:
                            href: /api/v3/projects/14/categories
                          createWorkPackage:
                            href: /api/v3/projects/14/work_packages/form
                            method: post
                          createWorkPackageImmediate:
                            href: /api/v3/projects/14/work_packages
                            method: post
                          self:
                            href: /api/v3/projects/14
                            title: Another project
                          versions:
                            href: /api/v3/projects/14/versions
                        _type: Project
                        createdAt: 2016-02-29T12:50:20+00:00
                        description: ""
                        id: 14
                        identifier: another_project
                        name: Another project
                        type: null
                        updatedAt: 2016-02-29T12:50:20+00:00
                    _links:
                      self:
                        href: /api/v3/work_packages/5/available_projects
                    _type: Collection
                    count: 2
                    total: 2
              schema:
                $ref: '#/components/schemas/Available_projects_for_work_packageModel'
          description: OK
        "403":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:openproject-org:api:v3:errors:MissingPermission
                    message: You are not authorized to access this resource.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permission:** edit work package

            *Note that you will only receive this error, if you are at least allowed to see the corresponding work package.*
        "404":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:openproject-org:api:v3:errors:NotFound
                    message: The specified work package does not exist.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the work package does not exist or the client does not have sufficient permissions to see it.

            **Required permission:** view work package
      summary: Available projects for work package
      tags:
      - Work Packages
  /api/v3/work_packages/{id}/available_relation_candidates:
    get:
      description: ""
      operationId: list_available_relation_candidates
      parameters:
      - description: Project id
        example: "1"
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: Maximum number of candidates to list (default 10)
        example: "25"
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          type: integer
        style: form
      - description: |-
          JSON specifying filter conditions.
          Accepts the same filters as the [work packages](https://www.openproject.org/docs/api/endpoints/work-packages/) endpoint.
        example: "[{ \"status_id\": { \"operator\": \"o\", \"values\": null } }]"
        explode: true
        in: query
        name: filters
        required: false
        schema:
          type: string
        style: form
      - description: Shortcut for filtering by ID or subject
        example: '"rollout"'
        explode: true
        in: query
        name: query
        required: false
        schema:
          type: string
        style: form
      - description: Type of relation to find candidates for (default "relates")
        example: '"follows"'
        explode: true
        in: query
        name: type
        required: false
        schema:
          type: string
        style: form
      - description: |-
          JSON specifying sort criteria.
          Accepts the same sort criteria as the [work packages](https://www.openproject.org/docs/api/endpoints/work-packages/) endpoint.
        example: "[[\"status\", \"asc\"]]"
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          default: "[[\"id\", \"asc\"]]"
          type: string
        style: form
      responses:
        "200":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _embedded:
                      elements:
                      - _links:
                          self:
                            href: /api/v3/work_packages/1
                        _type: WorkPackage
                        id: 1
                        subject: Skipped other properties for brevity
                      - _links:
                          self:
                            href: /api/v3/work_packages/2
                        _type: WorkPackage
                        id: 2
                        subject: Skipped other properties for brevity
                    _links:
                      self:
                        href: /api/v3/projects/14/work_packages
                    _type: Collection
                    count: 2
                    total: 2
              schema:
                $ref: '#/components/schemas/Available_relation_candidatesModel'
          description: OK
        "404":
          content:
            application/hal+json:
              example:
                _type: Error
                errorIdentifier: urn:openproject-org:api:v3:errors:NotFound
                message: The specified work package does not exist.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the work package does not exist or the client does not have sufficient permissions to see it.

            **Required permission:** view work package
      summary: Available relation candidates
      tags:
      - Work Packages
  /api/v3/work_packages/{id}/available_watchers:
    get:
      description: Gets a list of users that are able to be watchers of the specified
        work package.
      operationId: Available_watchers
      parameters:
      - description: work package id
        example: "1"
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _embedded:
                      elements:
                      - _links:
                          delete:
                            href: /api/v3/users/1
                            method: DELETE
                            title: Delete j.sheppard
                          lock:
                            href: /api/v3/users/1/lock
                            method: POST
                            title: Set lock on j.sheppard
                          self:
                            href: /api/v3/users/1
                            title: John Sheppard - j.sheppard
                        _type: User
                        avatar: https://example.org/users/1/avatar
                        createdAt: 2014-05-21T08:51:20.396Z
                        email: shep@mail.com
                        firstName: John
                        id: 1
                        lastName: Sheppard
                        login: j.sheppard
                        status: active
                        updatedAt: 2014-05-21T08:51:20.396Z
                      - _links:
                          delete:
                            href: /api/v3/users/2
                            method: DELETE
                            title: Delete j.sheppard2
                          lock:
                            href: /api/v3/users/2/lock
                            method: POST
                            title: Set lock on j.sheppard2
                          self:
                            href: /api/v3/users/2
                            title: Jim Sheppard - j.sheppard2
                        _type: User
                        avatar: https://example.org/users/1/avatar
                        createdAt: 2014-05-21T08:51:20.396Z
                        email: shep@mail.net
                        firstName: Jim
                        id: 2
                        lastName: Sheppard
                        login: j.sheppard2
                        status: active
                        updatedAt: 2014-05-21T08:51:20.396Z
                    _links:
                      self:
                        href: /api/v3/work_packages/1/available_watchers
                    _type: Collection
                    count: 2
                    total: 2
              schema:
                $ref: '#/components/schemas/Available_WatchersModel'
          description: OK
        "403":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:openproject-org:api:v3:errors:MissingPermission
                    message: You are not authorized to access this resource.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permission:** add work package watchers

            *Note that you will only receive this error, if you are at least allowed to see the corresponding work package.*
        "404":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:openproject-org:api:v3:errors:NotFound
                    message: The specified work package does not exist.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the work package does not exist or the client does not have sufficient permissions to see it.

            **Required permission:** view work package
      summary: Available watchers
      tags:
      - Work Packages
  /api/v3/work_packages/{id}/file_links:
    get:
      description: "Gets all file links of a work package.\n\nAs a side effect, for\
        \ every file link a request is sent to the storage's origin to fetch live\
        \ data and patch\nthe file link's data before returning, as well as retrieving\
        \ permissions of the user on this origin file. "
      operationId: list_work_package_file_links
      parameters:
      - description: Work package id
        example: 1337
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: |-
          JSON specifying filter conditions.
          Accepts the same format as returned by the [queries](https://www.openproject.org/docs/api/endpoints/queries/)
          endpoint. The following filters are supported:

          - storage
        example: "[{\"storage\":{\"operator\":\"=\",\"values\":[\"42\"]}}]"
        explode: true
        in: query
        name: filters
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/FileLinkCollectionReadModel'
          description: OK
        "403":
          content:
            application/hal+json:
              example:
                _type: Error
                errorIdentifier: urn:openproject-org:api:v3:errors:MissingPermission
                message: You are not authorized to access this resource.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permission:** view file links

            *Note that you will only receive this error, if you are at least allowed to see the corresponding work package.*
        "404":
          content:
            application/hal+json:
              example:
                _type: Error
                errorIdentifier: urn:openproject-org:api:v3:errors:NotFound
                message: The requested resource could not be found.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the work package does not exist or the client does not have sufficient permissions to see it.

            **Required permission:** view work package
      summary: Gets all file links of a work package
      tags:
      - Work Packages
    post:
      description: |-
        Creates file links on a work package.

        The request is interpreted as a bulk insert, where every element of the collection is validated separately. Each
        element contains the origin meta data and a link to the storage, the file link is about to point to. The storage
        link can be provided as a resource link with id or as the host url.

        The file's id and name are considered mandatory information. The rest of the origin meta data SHOULD be provided
        by the client. The _mimeType_ SHOULD be a standard mime type. An empty mime type will be handled as unknown. To link
        a folder, the custom mime type `application/x-op-directory` MUST be used.

        Up to 20 file links can be submitted at once.

        If any element data is invalid, no file links will be created.

        If a file link with matching origin id, work package, and storage already exists, then it will not create an
        additional file link or update the meta data. Instead the information from the existing file link will be returned.
      operationId: create_work_package_file_link
      parameters:
      - description: Work package id
        example: 1337
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            example:
              _type: Collection
              _embedded:
                elements:
                - originData:
                    id: 5503
                    name: logo.png
                    mimeType: image/png
                    size: 433765
                    createdAt: 2021-12-19T09:42:10.170Z
                    lastModifiedAt: 2021-12-20T14:00:13.987Z
                    createdByName: Luke Skywalker
                    lastModifiedByName: Anakin Skywalker
                  _links:
                    storageUrl:
                      href: https://nextcloud.deathstar.rocks/
            schema:
              $ref: '#/components/schemas/FileLinkCollectionWriteModel'
      responses:
        "201":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/FileLinkCollectionReadModel'
          description: Created
        "400":
          $ref: '#/components/responses/InvalidRequestBody'
        "403":
          content:
            application/hal+json:
              example:
                _type: Error
                errorIdentifier: urn:openproject-org:api:v3:errors:MissingPermission
                message: You are not authorized to access this resource.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permission:** manage file links

            *Note that you will only receive this error, if you are at least allowed to see the corresponding work package.*
        "404":
          content:
            application/hal+json:
              example:
                _type: Error
                errorIdentifier: urn:openproject-org:api:v3:errors:NotFound
                message: The requested resource could not be found.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the work package does not exist or the client does not have sufficient permissions to see it.

            **Required permission:** view work package, view file links
        "406":
          $ref: '#/components/responses/MissingContentType'
        "415":
          $ref: '#/components/responses/UnsupportedMediaType'
        "422":
          content:
            application/hal+json:
              example:
                _type: Error
                errorIdentifier: urn:openproject-org:api:v3:errors:PropertyConstraintViolation
                message: The request was invalid. File Link logo.png - Storage was
                  invalid.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Occurs if the request body was correctly formatted, but some properties lead to errors in the validation
            process. This happens e.g. if the provided storage url is not available on the server.
      summary: Creates file links.
      tags:
      - Work Packages
  /api/v3/work_packages/{id}/form:
    post:
      description: |-
        When calling this endpoint, the client provides a single object containing the properties and links to be edited, in the body.

        Note that it is only allowed to provide properties or links supporting the write operation.

        When setting start date, finish date, and duration together, their correctness will be checked and a 422 error will be returned if one value does not match with the two others. You can make the server compute a value: set only two values in the request and the third one will be computed and returned in the response. For instance, when sending `{ "startDate": "2022-08-23", duration: "P2D" }`, the response will include `{ "dueDate": "2022-08-24" }`.
      operationId: Work_Package_Edit_Form
      parameters:
      - description: ID of the work package being modified
        example: "1"
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Work_PackageModel'
      responses:
        "200":
          description: OK
        "403":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:openproject-org:api:v3:errors:MissingPermission
                    message: You are not allowed to edit the specified work package.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permission:** edit work package, assign version, change work package status, manage subtasks or move work package

            *Note that you will only receive this error, if you are at least allowed to see the corresponding work package.*
        "404":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:openproject-org:api:v3:errors:NotFound
                    message: The specified work package does not exist.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the work package does not exist or the client does not have sufficient permissions to see it.

            **Required permission:** view work package
        "406":
          $ref: '#/components/responses/MissingContentType'
        "415":
          $ref: '#/components/responses/UnsupportedMediaType'
      summary: Work Package Edit Form
      tags:
      - Work Packages
  /api/v3/work_packages/{id}/revisions:
    get:
      description: |-
        Gets a list of revisions that are linked to this work package, e.g., because it is referenced in the commit message of the revision.
        Only linked revisions from repositories are shown if the user has the view changesets permission in the defining project.
      operationId: Revisions
      parameters:
      - description: Work package id
        example: "1"
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _embedded:
                      elements:
                      - _links:
                          author:
                            href: /api/v3/users/1
                            title: John Sheppard - j.sheppard
                          project:
                            href: /api/v3/projects/1
                            title: A Test Project
                          self:
                            href: /api/v3/revisions/13
                          showRevision:
                            href: /projects/identifier/repository/revision/11f4b07
                        _type: Revision
                        authorName: John Sheppard
                        createdAt: 2015-07-21T13:36:59.220Z
                        formattedIdentifier: 11f4b07
                        id: 13
                        identifier: 11f4b07dff4f4ce9548a52b7d002daca7cd63ec6
                        message:
                          format: plain
                          html: <p>This revision provides new features<br/><br/>An
                            elaborate description</p>
                          raw: |-
                            This revision provides new features

                            An elaborate description
                      - _links:
                          author:
                            href: /api/v3/users/2
                            title: Jim Sheppard - j.sheppard
                          project:
                            href: /api/v3/projects/1
                            title: A Test Project
                          self:
                            href: /api/v3/revisions/14
                          showRevision:
                            href: /projects/identifier/repository/revision/029ed72a
                        _type: Revision
                        authorName: j1msheppard
                        createdAt: 2015-06-30T08:47:00.818Z
                        formattedIdentifier: 029ed72a
                        id: 13
                        identifier: 029ed72a3b7b7c4ab332b1f6eaa6576e7c946059
                        message:
                          format: plain
                          html: <p>This revision fixes some stuff<br/><br/>More information
                            here</p>
                          raw: |-
                            This revision fixes some stuff

                            More information here
                    _links:
                      self:
                        href: /api/v3/work_packages/42/revisions
                    _type: Collection
                    count: 2
                    total: 2
              schema:
                $ref: '#/components/schemas/RevisionsModel'
          description: OK
        "403":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:openproject-org:api:v3:errors:MissingPermission
                    message: You are not allowed to see linked revisions for this
                      work package.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permission:** view work packages for the project the work package is contained in.

            *Note that you will only receive this error, if you are at least allowed to see the corresponding work package.*
        "404":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:openproject-org:api:v3:errors:NotFound
                    message: The specified work project does not exist.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the work package does not exist or the client does not have sufficient permissions to see it.

            **Required permission:** view work package
      summary: Revisions
      tags:
      - Work Packages
  /api/v3/work_packages/{id}/relations:
    get:
      description: Lists all relations this work package is involved in.
      operationId: List_work_package_relations
      parameters:
      - description: Work package id
        example: "1"
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "302":
          content:
            text/plain:
              examples:
                response:
                  value: "You are being redirected to /api/v3/relations?involved={work_package_id}"
              schema:
                type: string
          description: Found
          headers:
            Location:
              explode: false
              schema:
                type: string
              style: simple
      summary: List relations
      tags:
      - Work Packages
    post:
      description: |-
        When calling this endpoint the client provides a single object, containing at least the properties and links that are required, in the body.
        The required fields of a Relation can be found in its schema, which is embedded in the respective form.
        Note that it is only allowed to provide properties or links supporting the write operation.
      operationId: Create_Relation
      parameters:
      - description: Work package id
        example: "1"
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Create_Relation_request'
      responses:
        "201":
          description: Created
        "400":
          $ref: '#/components/responses/InvalidRequestBody'
        "403":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:openproject-org:api:v3:errors:MissingPermission
                    message: You are not allowed to create a relation.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permission:** manage work package relations
        "409":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:openproject-org:api:v3:errors:UpdateConflict
                    message: Couldn't update the resource because of conflicting modifications.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if there already exists a relation between the given work packages of **any** type
            or if the relation is not allowed.
        "406":
          $ref: '#/components/responses/MissingContentType'
        "415":
          $ref: '#/components/responses/UnsupportedMediaType'
        "422":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _embedded:
                      details:
                        attribute: lag
                    _type: Error
                    errorIdentifier: urn:openproject-org:api:v3:errors:PropertyConstraintViolation
                    message: Lag must be a number greater than or equal to 0
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if:

            * the client tries to write a read-only property (`PropertyIsReadOnly`)

            * a constraint for a property was violated (`PropertyConstraintViolation`)

            * the client provides a link to an invalid resource (`ResourceTypeMismatch`)
      summary: Create Relation
      tags:
      - Work Packages
  /api/v3/work_packages/{id}/watchers:
    get:
      description: ""
      operationId: List_watchers
      parameters:
      - description: Work package id
        example: 1
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              example:
                _embedded:
                  elements:
                  - _links:
                      delete:
                        href: /api/v3/users/1
                        method: DELETE
                        title: Delete j.sheppard
                      lock:
                        href: /api/v3/users/1/lock
                        method: POST
                        title: Set lock on j.sheppard
                      self:
                        href: /api/v3/users/1
                        title: John Sheppard - j.sheppard
                      showUser:
                        href: /users/1
                        type: text/html
                    _type: User
                    avatar: https://example.org/users/1/avatar
                    createdAt: 2014-05-21T08:51:20.396Z
                    firstName: John
                    id: 1
                    lastName: Sheppard
                    login: j.sheppard
                    mail: shep@mail.com
                    status: active
                    updatedAt: 2014-05-21T08:51:20.396Z
                  - _links:
                      delete:
                        href: /api/v3/users/2
                        method: DELETE
                        title: Delete j.sheppard2
                      lock:
                        href: /api/v3/users/2/lock
                        method: POST
                        title: Set lock on j.sheppard2
                      self:
                        href: /api/v3/users/2
                        title: Jim Sheppard - j.sheppard2
                    _type: User
                    avatar: https://example.org/users/1/avatar
                    createdAt: 2014-05-21T08:51:20.396Z
                    firstName: Jim
                    id: 2
                    lastName: Sheppard
                    login: j.sheppard2
                    mail: shep@mail.net
                    status: active
                    updatedAt: 2014-05-21T08:51:20.396Z
                _links:
                  self:
                    href: /api/v3/work_packages/14/watchers
                _type: Collection
                count: 2
                total: 2
              schema:
                $ref: '#/components/schemas/WatchersModel'
          description: OK
        "403":
          content:
            application/hal+json:
              example:
                _type: Error
                errorIdentifier: urn:openproject-org:api:v3:errors:MissingPermission
                message: You are not allowed to see the watchers of this work package.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permission:** view work package watchers

            *Note that you will only receive this error, if you are at least allowed to see the corresponding work package.*
        "404":
          content:
            application/hal+json:
              example:
                _type: Error
                errorIdentifier: urn:openproject-org:api:v3:errors:NotFound
                message: The specified work package does not exist.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the work package does not exist or the client does not have sufficient permissions to see it.

            **Required permission:** view work package

            *Note that you will effectively not be able to see the watchers of a work package without being able to see the work package.*
      summary: List watchers
      tags:
      - Work Packages
    post:
      description: |-
        Adds a watcher to the specified work package.

        The request is expected to contain a single JSON object, that contains a link object under the `user` key.

        The response will be user added as watcher.
        In case the user was already watching the work package an `HTTP 200` is returned, an
        `HTTP 201` if the user was added as a new watcher.
      operationId: Add_watcher
      parameters:
      - description: Work package id
        example: 1
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Add_watcher_request'
      responses:
        "200":
          description: OK
        "201":
          description: Created
        "400":
          content:
            application/hal+json:
              example:
                _type: Error
                errorIdentifier: urn:openproject-org:api:v3:errors:InvalidRequestBody
                message: The request body was not a single JSON object.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Occurs when the client did not send a valid JSON object in the request body.

            For example:

            * The request did not contain a single JSON object

            * The JSON object did not contain the key `user`

            * The value of `users` was not a link object
        "403":
          content:
            application/hal+json:
              example:
                _type: Error
                errorIdentifier: urn:openproject-org:api:v3:errors:MissingPermission
                message: You are not allowed to add watchers to this work package.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permissions:**

            * view work package (for self)

            * add work package watchers (for other users)

            *Note that you will only receive this error, if you are at least allowed to see the corresponding work package.*
        "404":
          content:
            application/hal+json:
              example:
                _type: Error
                errorIdentifier: urn:openproject-org:api:v3:errors:NotFound
                message: The specified work package does not exist.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the work package does not exist or the client does not have sufficient permissions to see it.

            **Required permission:** view work package

            *Note that you will effectively not be able to change the watchers of a work package without being able to see the work package.*
        "406":
          $ref: '#/components/responses/MissingContentType'
        "415":
          $ref: '#/components/responses/UnsupportedMediaType'
        "422":
          description: |-
            Returned if:

            * the client tries to specify a link to a resource that is not a user (`ResourceTypeMismatch`)

            * the user specified is not allowed to watch that work package (`PropertyConstraintViolation`)

            * the user specified does not exist (`PropertyConstraintViolation`)
      summary: Add watcher
      tags:
      - Work Packages
  /api/v3/work_packages/{id}/watchers/{user_id}:
    delete:
      description: |-
        Removes the specified user from the list of watchers for the given work package.

        If the request succeeds, the specified user is not watching the work package anymore.

        *Note: This might also be the case, if the specified user did not watch the work package prior to the request.*
      operationId: Remove_watcher
      parameters:
      - description: Work package id
        example: "1"
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: User id
        example: "1"
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "204":
          description: No Content
        "403":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:openproject-org:api:v3:errors:MissingPermission
                    message: You are not allowed to remove watchers from this work
                      package.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned if the client does not have sufficient permissions.

            **Required permission:** delete work package watchers

            *Note that you will only receive this error, if you are at least allowed to see the corresponding work package.*
        "404":
          content:
            application/hal+json:
              examples:
                response:
                  value:
                    _type: Error
                    errorIdentifier: urn:openproject-org:api:v3:errors:NotFound
                    message: The specified work package does not exist.
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: |-
            Returned in one of the following cases:

            Either the work package does not exist or the client does not have sufficient permissions to see it.

            **Required permission:** view work package

            Or the specified user does not exist at all.

            *Note that you will effectively not be able to change the watchers of a work package without being able to see the work package.*
        "406":
          $ref: '#/components/responses/MissingContentType'
        "415":
          $ref: '#/components/responses/UnsupportedMediaType'
      summary: Remove watcher
      tags:
      - Work Packages
components:
  examples:
    DateAlertNotification:
      value:
        _type: Notification
        id: 1
        readIAN: false
        reason: dateAlert
        createdAt: 2022-04-05T14:38:28.361Z
        updatedAt: 2022-04-06T09:03:24.347Z
        _embedded:
          project:
            _hint: Project resource shortened for brevity
            _type: Project
            id: 11
            name: Jedi Remnant Locator
          resource:
            _hint: WorkPackage resource shortened for brevity
            _type: WorkPackage
            id: 77
            subject: Educate Visas Marr
          details:
          - _type: Values::Property
            property: startDate
            value: 2021-01-01
            _links:
              self:
                href: api/v3/notifications/123/details/0
              schema:
                href: api/v3/values/schemas/startDate
        _links:
          self:
            href: /api/v3/notifications/1
          readIAN:
            href: /api/v3/notifications/1/read_ian
            method: post
          actor:
            href: null
          project:
            href: /api/v3/projects/11
            title: Jedi Remnant Locator
          activity:
            href: null
          resource:
            href: /api/v3/work_packages/77
            title: Educate Visas Marr
    GridSimpleCollectionResponse:
      value:
        _type: Collection
        total: 1
        count: 1
        pageSize: 30
        offset: 1
        _embedded:
          elements:
          - _type: Grid
            id: 2
            rowCount: 8
            columnCount: 5
            widgets:
            - _type: GridWidget
              identifier: time_entries_current_user
              startRow: 1
              endRow: 8
              startColumn: 1
              endColumn: 3
            - _type: GridWidget
              identifier: news
              startRow: 3
              endRow: 8
              startColumn: 4
              endColumn: 5
            - _type: GridWidget
              identifier: documents
              startRow: 1
              endRow: 3
              startColumn: 3
              endColumn: 6
            createdAt: 2018-12-03T16:58:30.297Z
            updatedAt: 2018-12-13T19:36:40.352Z
            _links:
              scope:
                href: /my/page
                type: text/html
              updateImmediately:
                href: /api/v3/grids/2
                method: patch
              update:
                href: /api/v3/grids/2/form
                method: post
              self:
                href: /api/v3/grids/2
    GridSimplePatchModel:
      value:
        rowCount: 1
        columnCount: 2
        widgets:
        - _type: GridWidget
          identifier: tasks
          startRow: 1
          endRow: 2
          startColumn: 1
          endColumn: 2
          options:
            name: Tasks
        - _type: GridWidget
          identifier: news
          startRow: 1
          endRow: 2
          startColumn: 2
          endColumn: 3
          options:
            name: News
        _links:
          scope:
            href: /my/page
            type: text/html
    GridSimpleResponse:
      value:
        _type: Grid
        id: 2
        rowCount: 8
        columnCount: 5
        widgets:
        - _type: GridWidget
          identifier: tasks
          startRow: 1
          endRow: 8
          startColumn: 1
          endColumn: 3
        - _type: GridWidget
          identifier: news
          startRow: 3
          endRow: 8
          startColumn: 4
          endColumn: 5
        - _type: GridWidget
          identifier: documents
          startRow: 1
          endRow: 3
          startColumn: 3
          endColumn: 6
        createdAt: 2018-12-03T16:58:30.915Z
        updatedAt: 2018-12-13T19:36:40.588Z
        _links:
          self:
            href: /api/v3/grids/2
          attachments:
            href: /api/v3/grids/2/attachments
          addAttachment:
            href: /api/v3/grids/2/attachments
            method: post
          scope:
            href: /my/page
            type: text/html
          updateImmediately:
            href: /api/v3/grids/2
            method: patch
          update:
            href: /api/v3/grids/2/form
            method: post
          delete:
            href: /api/v3/grids/2
            method: delete
    GroupResponse:
      value:
        _type: Group
        id: 26
        name: Force Users
        createdAt: 2024-01-11T15:54:16.542Z
        updatedAt: 2024-01-11T15:58:02.237Z
        _embedded:
          members:
          - _hint: Principal resource shortened for brevity
            _type: User
            id: 23
            name: Grogu Jarin
          - _hint: Principal resource shortened for brevity
            _type: User
            id: 14
            name: Mara Jade
          - _hint: Principal resource shortened for brevity
            _type: User
            id: 3
            name: Darth Vader
        _links:
          self:
            href: /api/v3/groups/26
            title: Force Users
          memberships:
            href: /api/v3/memberships?filters=%5B%7B%22principal%22%3A%7B%22operator%22%3A%22%3D%22%2C%22values%22%3A%5B%2226%22%5D%7D%7D%5D
            title: Memberships
          delete:
            href: /api/v3/groups/26
            method: delete
          updateImmediately:
            href: /api/v3/groups/26
            method: patch
          members:
          - href: /api/v3/users/23
            title: Grogu Jarin
          - href: /api/v3/users/14
            title: Mara Jade
          - href: /api/v3/users/3
            title: Darth Vader
    MembershipCreateRequestCustomMessage:
      description: Create a membership and send a custom notification message.
      value:
        _links:
          principal:
            href: /api/v3/users/14
          project:
            href: /api/v3/projects/21
          roles:
          - href: /api/v3/roles/4
        _meta:
          notificationMessage:
            format: markdown
            raw: Granted permission to execute Order *66*.
    MembershipCreateRequestGlobalRole:
      description: "Create a membership for a global role. To address global roles,\
        \ no project must be set."
      value:
        _links:
          principal:
            href: /api/v3/users/14
          roles:
          - href: /api/v3/roles/4
    MembershipCreateRequestNoNotification:
      description: Create a membership without sending a notification message.
      value:
        _links:
          principal:
            href: /api/v3/users/14
          project:
            href: /api/v3/projects/21
          roles:
          - href: /api/v3/roles/4
        _meta:
          sendNotification: false
    MembershipFormResponse:
      description: A simple form response example.
      value:
        _type: Form
        _embedded:
          payload:
            _meta:
              notificationMessage:
                format: markdown
                raw: '*Hallo*'
                html: <p class="op-uc-p"><em>Hallo</em></p>
            _links:
              project:
                href: /api/v3/projects/21
                title: Death Star v3
              principal:
                href: /api/v3/users/14
                title: Mara Jade
              roles: []
          schema:
            _type: Schema
            _hint: Schema resource shortened for brevity
          validationErrors:
            roles:
              _type: Error
              errorIdentifier: urn:openproject-org:api:v3:errors:PropertyConstraintViolation
              message: Roles need to be assigned.
              _embedded:
                details:
                  attribute: roles
        _links:
          self:
            href: /api/v3/memberships/form
            method: post
          validate:
            href: /api/v3/memberships/form
            method: post
    MembershipSchemaResponse:
      description: A simple schema response example.
      value:
        _type: Schema
        _dependencies: []
        id:
          type: Integer
          name: ID
          required: true
          hasDefault: false
          writable: false
          options: {}
        createdAt:
          type: DateTime
          name: Created on
          required: true
          hasDefault: false
          writable: false
          options: {}
        updatedAt:
          type: DateTime
          name: Updated on
          required: true
          hasDefault: false
          writable: false
          options: {}
        notificationMessage:
          type: Formattable
          name: Message
          required: false
          hasDefault: false
          writable: true
          options: {}
          location: _meta
        project:
          type: Project
          name: Project
          required: false
          hasDefault: false
          writable: true
          location: _links
          _links:
            allowedValues:
              href: /api/v3/memberships/available_projects?filters=%5B%7B%22principal%22%3A%7B%22operator%22%3A%22%21%22%2C%22values%22%3A%5B%2214%22%5D%7D%7D%5D
        principal:
          type: Principal
          name: Principal
          required: true
          hasDefault: false
          writable: true
          location: _links
          _links:
            allowedValues:
              href: /api/v3/principals?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22%21%22%2C%22values%22%3A%5B%223%22%5D%7D%7D%2C%7B%22member%22%3A%7B%22operator%22%3A%22%21%22%2C%22values%22%3A%5B%2221%22%5D%7D%7D%5D
        roles:
          type: "[]Role"
          name: Role
          required: true
          hasDefault: false
          writable: true
          location: _links
          _links:
            allowedValues:
              href: /api/v3/roles
        _links:
          self:
            href: /api/v3/memberships/schema
    MembershipSimpleCollectionResponse:
      description: A simple membership collection response example.
      value:
        _type: Collection
        total: 2
        count: 2
        pageSize: 20
        offset: 1
        _embedded:
          elements:
          - _type: Membership
            id: 11
            createdAt: 2015-03-20T12:56:56.643Z
            updatedAt: 2018-12-20T18:16:11.643Z
            _links:
              self:
                href: /api/v3/memberships/11
                title: Darth Vader
              schema:
                href: /api/v3/memberships/schema
              update:
                href: /api/v3/memberships/11/form
                method: post
              updateImmediately:
                href: /api/v3/memberships/11
                method: patch
              project:
                href: /api/v3/projects/3
                title: Death Start v3
              principal:
                href: /api/v3/users/5
                title: Darth Vader
              roles:
              - href: /api/v3/roles/4
                title: Sith Lord
          - _type: Membership
            id: 12
            _hint: Membership resource shortened for brevity
        _links:
          self:
            href: /api/v3/memberships
          jumpTo:
            href: /api/v3/memberships?filters=%5B%5D&offset=%7Boffset%7D&pageSize=20
            templated: true
          changeSize:
            href: /api/v3/memberships?filters=%5B%5D&offset=1&pageSize=%7Bsize%7D
            templated: true
          nextByOffset:
            href: /api/v3/memberships?filters=%5B%5D&offset=2&pageSize=20
    MembershipSimpleResponse:
      description: A simple membership response example.
      value:
        _type: Membership
        id: 11
        createdAt: 2015-03-20T12:56:56.626Z
        updatedAt: 2018-12-20T18:16:11.563Z
        _embedded:
          project:
            _type: Project
            id: 3
            _hint: Project resource shortened for brevity
          principal:
            _type: User
            id: 5
            _hint: User resource shortened for brevity
          roles:
          - _type: Role
            id: 4
            _hint: Roles resource shortened for brevity
        _links:
          self:
            href: /api/v3/memberships/11
            title: Darth Vader
          schema:
            href: /api/v3/memberships/schema
          update:
            href: /api/v3/memberships/11/form
            method: post
          updateImmediately:
            href: /api/v3/memberships/11
            method: patch
          project:
            href: /api/v3/projects/3
            title: Death Start v3
          principal:
            href: /api/v3/users/5
            title: Darth Vader
          roles:
          - href: /api/v3/roles/4
            title: Sith Lord
    MembershipUpdateAdditionalRoles:
      description: Updates a membership and add multiple roles.
      value:
        _links:
          roles:
          - href: /api/v3/roles/5
          - href: /api/v3/roles/6
    MentionedNotification:
      value:
        _type: Notification
        id: 1
        readIAN: false
        reason: mentioned
        createdAt: 2022-04-05T14:38:28.881Z
        updatedAt: 2022-04-06T09:03:24.591Z
        _embedded:
          author:
            _hint: User resource shortened for brevity
            _type: User
            id: 13
            name: Darth Nihilus
          project:
            _hint: Project resource shortened for brevity
            _type: Project
            id: 11
            name: Jedi Remnant Locator
          activity:
            _hint: Activity resource shortened for brevity
            _type: Activity::Comment
            id: 180
            version: 3
          resource:
            _hint: WorkPackage resource shortened for brevity
            _type: WorkPackage
            id: 77
            subject: Educate Visas Marr
          details: []
        _links:
          self:
            href: /api/v3/notifications/1
          readIAN:
            href: /api/v3/notifications/1/read_ian
            method: post
          actor:
            href: /api/v3/users/13
            title: Darth Nihilus
          project:
            href: /api/v3/projects/11
            title: Jedi Remnant Locator
          activity:
            href: /api/v3/activities/180
          resource:
            href: /api/v3/work_packages/77
            title: Educate Visas Marr
    NotificationCollection:
      value:
        _type: Collection
        count: 2
        total: 2
        offset: 1
        pageSize: 20
        _embedded:
          elements:
          - _hint: Notification resource shortened for brevity
            id: 1
            readIAN: false
            reason: mentioned
          - _hint: Notification resource shortened for brevity
            id: 2
            readIAN: false
            reason: dateAlert
            _embedded:
              details:
              - _type: Values::Property
                property: startDate
                value: 2021-01-01
                _links:
                  self:
                    href: api/v3/notifications/123/details/0
                  schema:
                    href: api/v3/values/schemas/startDate
          detailsSchemas:
          - _type: Schema
            property:
              name: Property
              type: String
            value:
              name: Start date
              type: Date
            _links:
              self:
                href: /api/v3/values/schemas/startDate
        _links:
          self:
            href: /api/v3/notifications?offset=1&pageSize=20
          jumpTo:
            href: /api/v3/notifications?filters=%5B%5D&offset=%7Boffset%7D&pageSize=20
            templated: true
          changeSize:
            href: /api/v3/notifications?filters=%5B%5D&offset=1&pageSize=%7Bsize%7D
            templated: true
    PlaceholderUserResponse:
      value:
        _type: PlaceholderUser
        id: 27
        name: Akolyth
        createdAt: 2024-02-12T11:52:24.708Z
        updatedAt: 2024-02-12T11:52:24.708Z
        _links:
          self:
            href: /api/v3/placeholder_users/27
            title: Akolyth
          memberships:
            href: /api/v3/memberships?filters=%5B%7B%22principal%22%3A%7B%22operator%22%3A%22%3D%22%2C%22values%22%3A%5B%2227%22%5D%7D%7D%5D
            title: Memberships
          updateImmediately:
            href: /api/v3/placeholder_users/27
            title: Update Akolyth
            method: patch
          delete:
            href: /api/v3/placeholder_users/27
            title: Delete Akolyth
            method: delete
          showUser:
            href: /placeholder_users/27
            type: text/html
    PriorityCollection:
      value:
        _embedded:
          elements:
          - _links:
              self:
                href: /api/v3/priorities/1
                title: Low
            _type: Priority
            id: 1
            isActive: true
            isDefault: false
            name: Low
            position: 1
          - _links:
              self:
                href: /api/v3/priorities/2
                title: Normal
            _type: Priority
            id: 2
            isActive: true
            isDefault: true
            name: Normal
            position: 2
          - _links:
              self:
                href: /api/v3/priorities/3
                title: High
            _type: Priority
            id: 3
            isActive: true
            isDefault: false
            name: High
            position: 3
          - _links:
              self:
                href: /api/v3/priorities/4
                title: Immediate
            _type: Priority
            id: 4
            isActive: true
            isDefault: false
            name: Immediate
            position: 5
        _links:
          self:
            href: /api/v3/priorities
        _type: Collection
        count: 4
        total: 4
    Project:
      value:
        _type: Project
        _links:
          self:
            href: /api/v3/projects/1
            title: Lorem
          createWorkPackage:
            href: /api/v3/projects/1/work_packages/form
            method: post
          createWorkPackageImmediate:
            href: /api/v3/projects/1/work_packages
            method: post
          categories:
            href: /api/v3/projects/1/categories
          types:
            href: /api/v3/projects/1/types
          versions:
            href: /api/v3/projects/1/versions
          workPackages:
            href: /api/v3/projects/1/work_packages
          memberships:
            href: "/api/v3/memberships?filters=[{\"project\":{\"operator\":\"=\",\"\
              values\":[\"1\"]}}]"
          customField456:
            href: /api/v3/users/315
            title: A user
          parent:
            href: /api/v3/projects/123
            title: Parent project
          ancestors:
          - href: /api/v3/projects/2
            title: Root project
          - href: /api/v3/projects/12
            title: Grandparent project
          - href: /api/v3/projects/123
            title: Parent project
          status:
            href: /api/v3/project_statuses/on_track
            title: On track
        id: 1
        identifier: project_example
        name: Project example
        active: true
        public: false
        statusExplanation:
          format: markdown
          raw: Everything **fine**
          html: <p>Everything <strong>fine</strong></p>
        description:
          format: markdown
          raw: Lorem **ipsum** dolor sit amet
          html: <p>Lorem <strong>ipsum</strong> dolor sit amet</p>
        createdAt: 2014-05-21T08:51:20.396Z
        updatedAt: 2014-05-21T08:51:20.396Z
        customField123: 123
    ProjectBody:
      value:
        name: Project example
        statusExplanation:
          raw: Everything **fine**
        description:
          raw: Lorem **ipsum** dolor sit amet
        customField123: 123
        _links:
          parent:
            href: /api/v3/projects/123
          customField456:
            href: /api/v3/users/315
    ProjectCollection:
      value:
        _type: Collection
        count: 2
        total: 2
        pageSize: 20
        offset: 1
        _embedded:
          elements:
          - _hint: Project resource shortened for brevity
            id: 1
            identifier: initialproject
            name: DeathStar construction
            active: true
            public: true
          - _hint: Project resource shortened for brevity
            id: 2
            identifier: mysecret
            name: Palpatine's secret plan
            active: true
            public: false
        _links:
          self:
            href: /api/v3/projects?filters=%5B%5D&offset=1&pageSize=20
          jumpTo:
            href: /api/v3/projects?filters=%5B%5D&offset=%7Boffset%7D&pageSize=20
            templated: true
          changeSize:
            href: /api/v3/projects?filters=%5B%5D&offset=1&pageSize=%7Bsize%7D
            templated: true
          representations:
          - href: /projects.csv?filters=%5B%5D&offset=1&pageSize=20
            identifier: csv
            type: text/csv
            title: CSV
          - href: /projects.xls?filters=%5B%5D&offset=1&pageSize=20
            identifier: xls
            type: application/vnd.ms-excel
            title: XLS
    QueriesModel:
      value:
        _links:
          self:
            href: /api/v3/queries
        total: 1
        count: 1
        _type: Collection
        _embedded:
          elements:
          - _type: Query
            id: 9
            name: fdsfdsfdsf
            createdAt: 2015-03-20T12:56:56.413Z
            updatedAt: 2015-05-20T18:16:53.392Z
            filters:
            - _type: StatusQueryFilter
              name: Status
              _links:
                filter:
                  href: /api/v3/queries/filters/status
                  title: Status
                operator:
                  href: /api/v3/queries/operators/o
                  title: open
                schema:
                  href: /api/v3/queries/filter_instance_schemas/status
                values: []
            - _type: DueDateQueryFilter
              name: Finish date
              values:
              - "1"
              _links:
                filter:
                  href: /api/v3/queries/filters/dueDate
                  title: Finish date
                operator:
                  href: /api/v3/queries/operators/<t+
                  title: in less than
                schema:
                  href: /api/v3/queries/filter_instance_schemas/dueDate
            public: false
            sums: false
            starred: true
            projections:
            - _type: QueryProjection::Table
            - _type: QueryProjection::TeamPlanner
              _links:
                rows:
                - href: /api/v3/users/1
                  title: Bob Bobbit
            - _type: QueryProjection::Calendar
            _embedded:
              results:
                _type: WorkPackageCollection
                total: 234
                count: 30
                pageSize: 30
                offset: 1
                _embedded:
                  elements:
                  - <--- shortened for brevity --->
                _links:
                  self:
                    href: /api/v3/projects/3/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=1&pageSize=2&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D
                  jumpTo:
                    href: /api/v3/projects/3/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=%7Boffset%7D&pageSize=2&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D
                    templated: true
                  changeSize:
                    href: /api/v3/projects/3/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=1&pageSize=%7Bsize%7D&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D
                    templated: true
                  createWorkPackage:
                    href: /api/v3/work_packages/form
                    method: post
                  createWorkPackageImmediate:
                    href: /api/v3/work_packages
                    method: post
            _links:
              self:
                href: /api/v3/queries/9
                title: fdsfdsfdsf
              results:
                href: /api/v3/projects/3/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=1&pageSize=2&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D
              columns:
              - href: /api/v3/queries/columns/id
                title: ID
              - href: /api/v3/queries/columns/subject
                title: Subject
              - href: /api/v3/queries/columns/type
                title: Type
              - href: /api/v3/queries/columns/status
                title: Status
              - href: /api/v3/queries/columns/priority
                title: Priority
              - href: /api/v3/queries/columns/assignee
                title: Assignee
              - href: /api/v3/queries/columns/updated_at
                title: Updated on
              groupBy:
                href: null
                title: null
              sortBy:
              - href: /api/v3/queries/sort_bys/parent-desc
                title: Parent (Descending)
              user:
                href: /api/v3/users/1
                title: OpenProject Admin
              project:
                href: /api/v3/projects/3
                title: copy
    QueryModel:
      value:
        _type: Query
        id: 9
        name: abcdefg
        createdAt: 2015-03-20T12:56:56.235Z
        updatedAt: 2015-05-20T18:16:53.976Z
        filters:
        - _type: StatusQueryFilter
          name: Status
          _links:
            filter:
              href: /api/v3/queries/filters/status
              title: Status
            operator:
              href: /api/v3/queries/operators/o
              title: open
            schema:
              href: /api/v3/queries/filter_instance_schemas/status
            values: []
        - _type: DueDateQueryFilter
          name: Finish date
          values:
          - "1"
          _links:
            filter:
              href: /api/v3/queries/filters/dueDate
              title: Finish date
            operator:
              href: /api/v3/queries/operators/<t+
              title: in less than
            schema:
              href: /api/v3/queries/filter_instance_schemas/dueDate
        public: false
        sums: false
        starred: false
        hidden: false
        timestamps:
        - PT0S
        projections:
        - _type: QueryProjection::Table
          showHierarchies: true
          _links:
            columns:
            - href: /api/v3/queries/columns/id
              title: ID
            - href: /api/v3/queries/columns/subject
              title: Subject
            - href: /api/v3/queries/columns/type
              title: Type
            - href: /api/v3/queries/columns/status
              title: Status
            - href: /api/v3/queries/columns/priority
              title: Priority
            - href: /api/v3/queries/columns/assignee
              title: Assignee
            - href: /api/v3/queries/columns/updated_at
              title: Updated on
            highlightedAttributes: []
        - _type: QueryProjection::Gantt
          labels: {}
          zoomLevel: auto
          _links:
            highlightedAttributes: []
        - _type: QueryProjection::TeamPlanner
          _links:
            rows:
            - href: /api/v3/users/1
              title: Alan Touring
            - href: /api/v3/users/5
              title: John von Neumann
        - _type: QueryProjection::Calendar
        _embedded:
          results:
            _type: WorkPackageCollection
            total: 234
            count: 30
            pageSize: 30
            offset: 1
            _embedded:
              elements:
              - <--- shortened for brevity --->
            _links:
              self:
                href: /api/v3/projects/3/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=1&pageSize=2&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D
              jumpTo:
                href: /api/v3/projects/3/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=%7Boffset%7D&pageSize=2&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D
                templated: true
              changeSize:
                href: /api/v3/projects/3/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=1&pageSize=%7Bsize%7D&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D
                templated: true
              createWorkPackage:
                href: /api/v3/work_packages/form
                method: post
              createWorkPackageImmediate:
                href: /api/v3/work_packages
                method: post
        _links:
          self:
            href: /api/v3/queries/9
            title: abcdefg
          results:
            href: /api/v3/projects/3/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=1&pageSize=2&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D
          groupBy:
            href: null
            title: null
          sortBy:
          - href: /api/v3/queries/sort_bys/parent-desc
            title: Parent (Descending)
          user:
            href: /api/v3/users/1
            title: OpenProject Admin
          project:
            href: /api/v3/projects/3
            title: copy
    QuerySchemaModel:
      value:
        _dependencies: []
        _embedded:
          filtersSchemas:
            _embedded:
              elements:
              - _dependencies:
                - _type: SchemaDependency
                  dependencies:
                    /api/v3/queries/operators/!:
                      values:
                        _links: {}
                        hasDefault: false
                        name: Values
                        required: true
                        type: "[]User"
                        writable: true
                    /api/v3/queries/operators/!*: {}
                    /api/v3/queries/operators/*: {}
                    /api/v3/queries/operators/=:
                      values:
                        _links: {}
                        hasDefault: false
                        name: Values
                        required: true
                        type: "[]User"
                        writable: true
                  "on": operator
                _links:
                  filter:
                    href: /api/v3/queries/filters/assignee
                    title: Assignee
                  self:
                    href: /api/v3/queries/filter_instance_schemas/assignee
                _type: QueryFilterInstanceSchema
                filter:
                  _links: {}
                  hasDefault: false
                  name: Filter
                  required: true
                  type: QueryFilter
                  writable: true
                name:
                  hasDefault: true
                  name: Name
                  required: true
                  type: String
                  writable: false
              - _dependencies:
                - _type: SchemaDependency
                  dependencies:
                    /api/v3/queries/operators/!:
                      values:
                        _links: {}
                        hasDefault: false
                        name: Values
                        required: true
                        type: "[]User"
                        writable: true
                    /api/v3/queries/operators/=:
                      values:
                        _links: {}
                        hasDefault: false
                        name: Values
                        required: true
                        type: "[]User"
                        writable: true
                  "on": operator
                _links:
                  filter:
                    href: /api/v3/queries/filters/author
                    title: Author
                  self:
                    href: /api/v3/queries/filter_instance_schemas/author
                _type: QueryFilterInstanceSchema
                filter:
                  _links: {}
                  hasDefault: false
                  name: Filter
                  required: true
                  type: QueryFilter
                  writable: true
                name:
                  hasDefault: true
                  name: Name
                  required: true
                  type: String
                  writable: false
            _links:
              self:
                href: /api/v3/queries/filter_instance_schemas
            _type: Collection
            count: 20
            total: 20
        _links:
          self:
            href: /api/v3/queries/schema
        _type: Schema
        columns:
          _links: {}
          hasDefault: true
          location: _links
          name: Columns
          required: false
          type: "[]QueryColumn"
          writable: true
        createdAt:
          hasDefault: false
          name: Created on
          required: true
          type: DateTime
          writable: false
        filters:
          _links:
            allowedValuesSchemas:
              href: /api/v3/queries/filter_instance_schemas
          hasDefault: true
          location: _links
          name: Filters
          required: false
          type: "[]QueryFilterInstance"
          writable: true
        groupBy:
          _links: {}
          hasDefault: false
          name: Group results by
          required: false
          type: "[]QueryGroupBy"
          writable: true
        highlightedAttributes:
          hasDefault: true
          location: _links
          name: Highlighted attributes
          required: false
          type: "[]QueryColumn"
          writable: true
          deprecated: true
        highlightingMode:
          hasDefault: true
          name: Highlighting mode
          required: false
          type: String
          writable: true
          deprecated: true
        id:
          hasDefault: false
          name: ID
          required: true
          type: Integer
          writable: false
        name:
          hasDefault: false
          maxLength: 255
          minLength: 1
          name: Name
          required: true
          type: String
          writable: true
        project:
          _links: {}
          hasDefault: false
          location: _links
          name: Project
          required: false
          type: Project
          writable: true
        public:
          hasDefault: true
          name: Public
          required: false
          type: Boolean
          writable: true
        results:
          hasDefault: false
          name: Results
          required: false
          type: WorkPackageCollection
          writable: false
        showHierarchies:
          hasDefault: true
          name: Show hierarchies
          required: false
          type: Boolean
          writable: true
          deprecated: true
        sortBy:
          _links: {}
          hasDefault: true
          name: Sort by
          required: false
          type: "[]QuerySortBy"
          writable: true
        starred:
          hasDefault: true
          name: Starred
          required: false
          type: Boolean
          writable: true
        sums:
          hasDefault: true
          name: Sums
          required: false
          type: Boolean
          writable: true
        timelineLabels:
          hasDefault: true
          name: Timeline labels
          required: false
          type: QueryTimelineLabels
          writable: true
          deprecated: true
        timelineVisible:
          hasDefault: true
          name: Timeline visible
          required: false
          type: Boolean
          writable: true
          deprecated: true
        timelineZoomLevel:
          hasDefault: true
          name: Timeline zoom level
          required: false
          type: String
          writable: true
          deprecated: true
        timestamps:
          hasDefault: true
          name: Timestamps
          required: false
          type: "[]Timestamp"
          writable: true
        updatedAt:
          hasDefault: false
          name: Updated on
          required: true
          type: DateTime
          writable: false
        user:
          hasDefault: true
          name: User
          required: true
          type: User
          writable: false
    StatusCollection:
      value:
        _embedded:
          elements:
          - _links:
              self:
                href: /api/v3/statuses/1
            _type: Status
            defaultDoneRatio: 0
            id: 1
            isClosed: false
            isDefault: true
            name: New
            position: 1
          - _links:
              self:
                href: /api/v3/statuses/3
            _type: Status
            defaultDoneRatio: 75
            id: 3
            isClosed: false
            isDefault: false
            isReadonly: false
            name: Resolved
            position: 3
          - _links:
              self:
                href: /api/v3/statuses/4
            _type: Status
            defaultDoneRatio: 25
            id: 4
            isClosed: false
            isDefault: false
            name: Feedback
            position: 4
          - _links:
              self:
                href: /api/v3/statuses/5
            _type: Status
            defaultDoneRatio: 100
            id: 5
            isClosed: true
            isDefault: false
            name: Closed
            position: 5
          - _links:
              self:
                href: /api/v3/statuses/6
            _type: Status
            defaultDoneRatio: 100
            id: 6
            isClosed: true
            isDefault: false
            name: Rejected
            position: 6
          - _links:
              self:
                href: /api/v3/statuses/2
            _type: Status
            defaultDoneRatio: 50
            id: 2
            isClosed: false
            isDefault: false
            name: In Progress
            position: 3
        _links:
          self:
            href: /api/v3/statuses
        _type: Collection
        count: 6
        total: 6
    StoragesSimpleCollectionModel:
      value:
        _type: Collection
        count: 2
        total: 2
        offset: 1
        pageSize: 20
        _embedded:
          elements:
          - id: 1337
            _type: Storage
            name: It's no moon
            hasApplicationPassword: true
            createdAt: 2021-12-20T13:37:00.211Z
            updatedAt: 2021-12-20T13:37:00.211Z
            _links:
              self:
                href: /api/v3/storages/1337
                title: It's no moon
              type:
                href: urn:openproject-org:api:v3:storages:nextcloud
                title: Nextcloud
              origin:
                href: https://nextcloud.deathstar.rocks/
              open:
                href: https://nextcloud.deathstar.rocks/apps/files
              authorizationState:
                href: urn:openproject-org:api:v3:storages:authorization:FailedAuthorization
                title: Failed Authorization
              authorize:
                href: https://nextcloud.deathstar.rocks/authorize/
                title: Authorize
              oauthApplication:
                href: /api/v3/oauth_application/42
                title: It's no moon (Nextcloud)
              oauthClientCredentials:
                href: /api/v3/oauth_client_credentials/42
          - id: 1338
            _type: Storage
            name: EmpireSharepoint
            createdAt: 2022-12-21T13:37:00.296Z
            updatedAt: 2022-12-21T13:37:00.296Z
            _links:
              self:
                href: /api/v3/storages/1338
                title: EmpireSharepoint
              type:
                href: urn:openproject-org:api:v3:storages:one-drive
                title: OneDrive
              open:
                href: https://empire.sharepoint.com/sites/Documents
              authorizationState:
                href: urn:openproject-org:api:v3:storages:authorization:Connected
                title: Connected
              oauthClientCredentials:
                href: /api/v3/oauth_client_credentials/44
    UserResponse:
      value:
        _type: User
        id: 14
        name: Mara Jade
        createdAt: 2022-04-04T08:07:22.910Z
        updatedAt: 2024-02-09T09:01:17.382Z
        login: member
        admin: false
        firstName: Mara
        lastName: Jade
        email: m.jade@empire.org
        avatar: https://secure.gravatar.com/avatar/17dd23570f3bd129d06db9b48b7a41b8?default=404&secure=true
        status: active
        identityUrl: null
        language: en
        _links:
          self:
            href: /api/v3/users/14
            title: Mara Jade
          memberships:
            href: /api/v3/memberships?filters=%5B%7B%22principal%22%3A%7B%22operator%22%3A%22%3D%22%2C%22values%22%3A%5B%2214%22%5D%7D%7D%5D
            title: Memberships
          showUser:
            href: /users/14
            type: text/html
          updateImmediately:
            href: /api/v3/users/14
            title: Update member
            method: patch
          lock:
            href: /api/v3/users/14/lock
            title: Set lock on member
            method: post
          delete:
            href: /api/v3/users/14
            title: Delete member
            method: delete
    ValuesPropertyStartDateSchema:
      value:
        _type: Schema
        property:
          name: Property
          type: String
        value:
          name: Start date
          type: Date
        _links:
          self:
            href: api/v3/values/schemas/startDate
    ValuesPropertyDueDateSchema:
      value:
        _type: Schema
        property:
          name: Property
          type: String
        value:
          name: Due date
          type: Date
        _links:
          self:
            href: api/v3/values/schemas/dueDate
    ValuesPropertyDateSchema:
      value:
        _type: Schema
        property:
          name: Property
          type: String
        value:
          name: Date
          type: Date
        _links:
          self:
            href: api/v3/values/schemas/date
    ValuesPropertyStartDate:
      value:
        _type: Values::Property
        property: startDate
        value: 2021-01-01
        _links:
          self:
            href: api/v3/notifications/123/details/0
          schema:
            href: api/v3/values/schemas/startDate
    ValuesPropertyDueDate:
      value:
        _type: Values::Property
        property: dueDate
        value: 2021-01-01
        _links:
          self:
            href: api/v3/notifications/123/details/0
          schema:
            href: api/v3/values/schemas/dueDate
    ValuesPropertyDate:
      value:
        _type: Values::Property
        property: date
        value: 2021-01-01
        _links:
          self:
            href: api/v3/notifications/123/details/0
          schema:
            href: api/v3/values/schemas/date
    Views:
      value:
        _links:
          self:
            href: /api/v3/views
          changeSize:
            href: "/api/v3/views?pageSize={size}"
            templated: true
          jumpTo:
            href: "/api/v3/views?offset={offset}"
            templated: true
        total: 1
        count: 1
        _type: Collection
        _embedded:
          elements:
          - _type: Views::WorkPackagesTable
            name: Current work packages
            timelineVisible: true
            id: 9
            _links:
              self:
                href: /api/v3/views/9
              query:
                href: /api/v3/queries/18
                title: A query
              columns:
              - href: /api/v3/users/id
                title: ID
              - href: /api/v3/users/subject
                title: Subject
              - href: /api/v3/users/type
                title: Type
              - href: /api/v3/users/status
                title: Status
              - href: /api/v3/users/priority
                title: Priority
              - href: /api/v3/users/assignee
                title: Assignee
              - href: /api/v3/users/updated_at
                title: Updated on
              project:
                href: /api/v3/project/89
                title: The project
    ViewWorkPackagesTable:
      value:
        _type: Views::WorkPackagesTable
        name: Current work packages
        id: 9
        _links:
          self:
            href: /api/v3/views/9
          query:
            href: /api/v3/queries/18
            title: Current work packages
          project:
            href: /api/v3/project/89
            title: The project
    ViewTeamPlanner:
      value:
        _type: Views::TeamPlanner
        name: Product team
        id: 9
        _links:
          self:
            href: /api/v3/views/9
          query:
            href: /api/v3/queries/18
            title: Product team
          project:
            href: /api/v3/project/89
            title: The project
  responses:
    InvalidQuery:
      content:
        application/hal+json:
          example:
            _type: Error
            errorIdentifier: urn:openproject-org:api:v3:errors:InvalidQuery
            message: Filters Invalid filter does not exist.
          schema:
            $ref: '#/components/schemas/ErrorResponse'
      description: Returned if the client sends invalid request parameters e.g. filters
    InvalidRequestBody:
      content:
        application/hal+json:
          example:
            _type: Error
            errorIdentifier: urn:openproject-org:api:v3:errors:InvalidRequestBody
            message: The request body was not a single JSON object.
          schema:
            $ref: '#/components/schemas/ErrorResponse'
      description: Occurs when the client did not send a valid JSON object in the
        request body.
    MissingContentType:
      content:
        text/plain:
          example: Missing content-type header
          schema:
            type: string
      description: Occurs when the client did not send a Content-Type header
    UnsupportedMediaType:
      content:
        application/hal+json:
          example:
            _type: Error
            errorIdentifier: urn:openproject-org:api:v3:errors:TypeNotSupported
            message: Expected CONTENT-TYPE to be (expected value) but got (actual
              value).
          schema:
            $ref: '#/components/schemas/ErrorResponse'
      description: Occurs when the client sends an unsupported Content-Type header.
  schemas:
    ActivityModel:
      example:
        _type: Activity::Comment
        _links:
          self:
            href: /api/v3/activity/1
            title: Priority changed from High to Low
          workPackage:
            href: /api/v3/work_packages/1
            title: quis numquam qui voluptatum quia praesentium blanditiis nisi
          user:
            href: /api/v3/users/1
            title: John Sheppard - admin
        id: 1
        details:
        - format: markdown
          raw: Lorem ipsum dolor sit amet.
          html: <p>Lorem ipsum dolor sit amet.</p>
        comment:
          format: markdown
          raw: Lorem ipsum dolor sit amet.
          html: <p>Lorem ipsum dolor sit amet.</p>
        createdAt: 2014-05-21T08:51:20.721Z
        updatedAt: 2014-05-21T09:14:02.929Z
        version: 31
      properties:
        _links:
          $ref: '#/components/schemas/ActivityModel__links'
        id:
          description: Activity id
          readOnly: true
          type: integer
        version:
          description: Activity version
          readOnly: true
          type: integer
        comment:
          $ref: '#/components/schemas/ActivityModel_comment'
        details:
          items:
            allOf:
            - $ref: '#/components/schemas/Formattable'
          type: array
        createdAt:
          description: Time of creation
          format: date-time
          readOnly: true
          type: string
        updatedAt:
          description: Time of update
          format: date-time
          readOnly: true
          type: string
    AttachmentModel:
      example:
        _type: Attachment
        _links:
          self:
            href: /api/v3/attachments/1
          container:
            href: /api/v3/work_packages/1
          author:
            href: /api/v3/users/1
          staticDownloadLocation:
            href: /api/v3/attachments/1/content
          downloadLocation:
            href: /some/remote/aws/url/image.png
        id: 1
        fileName: cat.png
        filesize: 24
        description:
          format: plain
          raw: A picture of a cute cat
          html: <p>A picture of a cute cat</p>
        contentType: image/png
        digest:
          algorithm: md5
          hash: 64c26a8403cd796ea4cf913cda2ee4a9
        createdAt: 2014-05-21T08:51:20.396Z
      properties:
        id:
          description: Attachment's id
          minimum: 1
          type: integer
        title:
          description: The name of the file
          type: string
        fileName:
          description: The name of the uploaded file
          type: string
        fileSize:
          description: The size of the uploaded file in Bytes
          minimum: 0
          type: integer
        description:
          $ref: '#/components/schemas/AttachmentModel_description'
        contentType:
          description: The files MIME-Type as determined by the server
          type: string
        digest:
          $ref: '#/components/schemas/AttachmentModel_digest'
        createdAt:
          description: Time of creation
          format: date-time
          type: string
        _links:
          $ref: '#/components/schemas/AttachmentModel__links'
      required:
      - contentType
      - createdAt
      - description
      - digest
      - fileName
    Attachments_Model:
      allOf:
      - $ref: '#/components/schemas/CollectionModel'
      - properties:
          _links:
            $ref: '#/components/schemas/Attachments_Model_allOf__links'
          _embedded:
            $ref: '#/components/schemas/Attachments_Model_allOf__embedded'
        required:
        - _embedded
        - _links
    Available_AssigneesModel:
      allOf:
      - $ref: '#/components/schemas/CollectionModel'
      - properties:
          _links:
            $ref: '#/components/schemas/Available_AssigneesModel_allOf__links'
          _embedded:
            $ref: '#/components/schemas/Available_AssigneesModel_allOf__embedded'
        required:
        - _embedded
        - _links
    Available_WatchersModel:
      example:
        _links:
          self:
            href: /api/v3/work_packages/1/available_watchers
        total: 2
        count: 2
        _type: Collection
        _embedded:
          elements:
          - _type: User
            _links:
              self:
                href: /api/v3/users/1
                title: John Sheppard - j.sheppard
              lock:
                href: /api/v3/users/1/lock
                title: Set lock on j.sheppard
                method: POST
              delete:
                href: /api/v3/users/1
                title: Delete j.sheppard
                method: DELETE
            id: 1
            login: j.sheppard
            firstName: John
            lastName: Sheppard
            email: shep@mail.com
            avatar: https://example.org/users/1/avatar
            status: active
            createdAt: 2014-05-21T08:51:20.286Z
            updatedAt: 2014-05-21T08:51:20.286Z
          - _type: User
            _links:
              self:
                href: /api/v3/users/2
                title: Jim Sheppard - j.sheppard2
              lock:
                href: /api/v3/users/2/lock
                title: Set lock on j.sheppard2
                method: POST
              delete:
                href: /api/v3/users/2
                title: Delete j.sheppard2
                method: DELETE
            id: 2
            login: j.sheppard2
            firstName: Jim
            lastName: Sheppard
            email: shep@mail.net
            avatar: https://example.org/users/1/avatar
            status: active
            createdAt: 2014-05-21T08:51:20.286Z
            updatedAt: 2014-05-21T08:51:20.286Z
      type: object
    Available_projects_for_queryModel:
      example:
        _links:
          self:
            href: /api/v3/queries/available_projects
        _type: Collection
        total: 2
        count: 2
        _embedded:
          elements:
          - _type: Project
            _links:
              self:
                href: /api/v3/projects/6
                title: A project
              createWorkPackage:
                href: /api/v3/projects/6/work_packages/form
                method: post
              createWorkPackageImmediate:
                href: /api/v3/projects/6/work_packages
                method: post
              categories:
                href: /api/v3/projects/6/categories
              versions:
                href: /api/v3/projects/6/versions
            id: 6
            identifier: a_project
            name: A project
            description: Eveniet molestias omnis quis aut qui eum adipisci.
            createdAt: 2015-07-06T13:28:14+00:00
            updatedAt: 2015-10-01T09:55:02+00:00
            type: Customer Project
          - _type: Project
            _links:
              self:
                href: /api/v3/projects/14
                title: Another project
              createWorkPackage:
                href: /api/v3/projects/14/work_packages/form
                method: post
              createWorkPackageImmediate:
                href: /api/v3/projects/14/work_packages
                method: post
              categories:
                href: /api/v3/projects/14/categories
              versions:
                href: /api/v3/projects/14/versions
            id: 14
            identifier: another_project
            name: Another project
            description: ""
            createdAt: 2016-02-29T12:50:20+00:00
            updatedAt: 2016-02-29T12:50:20+00:00
            type: null
      type: object
    Available_projects_for_time_entriesModel:
      example:
        _links:
          self:
            href: /api/v3/time_entries/available_projects
        _type: Collection
        total: 2
        count: 2
        _embedded:
          elements:
          - _type: Project...
          - _type: Project...
      type: object
    Available_projects_for_versionsModel:
      example:
        _links:
          self:
            href: /api/v3/versions/available_projects
        _type: Collection
        total: 2
        count: 2
        _embedded:
          elements:
          - _type: Project
            _links:
              self:
                href: /api/v3/projects/6
                title: A project
              editWorkPackage:
                href: "/api/v3/work_packages/{id}/form"
                templated: true
                method: post
              createWorkPackage:
                href: /api/v3/projects/6/work_packages/form
                method: post
              createWorkPackageImmediate:
                href: /api/v3/projects/6/work_packages
                method: post
              categories:
                href: /api/v3/projects/6/categories
              versions:
                href: /api/v3/projects/6/versions
            id: 6
            identifier: a_project
            name: A project
            description: Eveniet molestias omnis quis aut qui eum adipisci. Atque
              aut aut in exercitationem adipisci amet. Nisi asperiores quia ratione
              veritatis enim exercitationem magnam. Aut fuga architecto adipisci nihil.
              Et repellat pariatur. Aliquam et sed perferendis nostrum quaerat. Fugit
              doloremque voluptatem.
            createdAt: 2015-07-06T13:28:14+00:00
            updatedAt: 2015-10-01T09:55:02+00:00
            type: Customer Project
          - _type: Project
            _links:
              self:
                href: /api/v3/projects/14
                title: Another project
              createWorkPackage:
                href: /api/v3/projects/14/work_packages/form
                method: post
              createWorkPackageImmediate:
                href: /api/v3/projects/14/work_packages
                method: post
              categories:
                href: /api/v3/projects/14/categories
              versions:
                href: /api/v3/projects/14/versions
            id: 14
            identifier: another_project
            name: Another project
            description: ""
            createdAt: 2016-02-29T12:50:20+00:00
            updatedAt: 2016-02-29T12:50:20+00:00
            type: null
      type: object
    Available_projects_for_work_packageModel:
      example:
        _links:
          self:
            href: /api/v3/work_packages/5/available_projects
        _type: Collection
        total: 2
        count: 2
        _embedded:
          elements:
          - _type: Project
            _links:
              self:
                href: /api/v3/projects/6
                title: A project
              editWorkPackage:
                href: "/api/v3/work_packages/{id}/form"
                templated: true
                method: post
              createWorkPackage:
                href: /api/v3/projects/6/work_packages/form
                method: post
              createWorkPackageImmediate:
                href: /api/v3/projects/6/work_packages
                method: post
              categories:
                href: /api/v3/projects/6/categories
              versions:
                href: /api/v3/projects/6/versions
            id: 6
            identifier: a_project
            name: A project
            description: Eveniet molestias omnis quis aut qui eum adipisci. Atque
              aut aut in exercitationem adipisci amet. Nisi asperiores quia ratione
              veritatis enim exercitationem magnam. Aut fuga architecto adipisci nihil.
              Et repellat pariatur. Aliquam et sed perferendis nostrum quaerat. Fugit
              doloremque voluptatem.
            createdAt: 2015-07-06T13:28:14+00:00
            updatedAt: 2015-10-01T09:55:02+00:00
            type: Customer Project
          - _type: Project
            _links:
              self:
                href: /api/v3/projects/14
                title: Another project
              createWorkPackage:
                href: /api/v3/projects/14/work_packages/form
                method: post
              createWorkPackageImmediate:
                href: /api/v3/projects/14/work_packages
                method: post
              categories:
                href: /api/v3/projects/14/categories
              versions:
                href: /api/v3/projects/14/versions
            id: 14
            identifier: another_project
            name: Another project
            description: ""
            createdAt: 2016-02-29T12:50:20+00:00
            updatedAt: 2016-02-29T12:50:20+00:00
            type: null
      type: object
    Available_relation_candidatesModel:
      example:
        _links:
          self:
            href: /api/v3/projects/14/work_packages
        total: 2
        count: 2
        _type: Collection
        _embedded:
          elements:
          - _type: WorkPackage
            _links:
              self:
                href: /api/v3/work_packages/1
            id: 1
            subject: Skipped other properties for brevity
          - _type: WorkPackage
            _links:
              self:
                href: /api/v3/work_packages/2
            id: 2
            subject: Skipped other properties for brevity
      type: object
    BudgetModel:
      example:
        _type: Budget
        _links:
          self:
            href: /api/v3/budgets/1
            title: Q3 2015
        id: 1
        subject: Q3 2015
      properties:
        _links:
          $ref: '#/components/schemas/BudgetModel__links'
    Budgets_by_ProjectModel:
      example:
        _links:
          self:
            href: /api/v3/projects/1/budgets
        _type: Collection
        total: 2
        count: 2
        _embedded:
          elements:
          - _type: Budget
            _links:
              self:
                href: /api/v3/budgets/1
                title: Q3 2015
            id: 1
            subject: Q3 2015
          - _type: Budget
            _links:
              self:
                href: /api/v3/budgets/2
                title: Q4 2015
            id: 2
            subject: Q4 2015
      type: object
    Categories_by_ProjectModel:
      allOf:
      - $ref: '#/components/schemas/CollectionModel'
      - properties:
          _links:
            $ref: '#/components/schemas/Categories_by_ProjectModel_allOf__links'
          _embedded:
            $ref: '#/components/schemas/Categories_by_ProjectModel_allOf__embedded'
        required:
        - _embedded
        - _links
    CategoryModel:
      example:
        _links:
          self:
            href: /api/v3/categories/10
            title: Category with assignee
          project:
            href: /api/v3/projects/11
            title: Example project
          defaultAssignee:
            href: /api/v3/users/42
            title: John Sheppard
        _type: Category
        id: 10
        name: Foo
      properties:
        id:
          description: Category id
          readOnly: true
          type: integer
        name:
          description: Category name
          type: string
        _links:
          $ref: '#/components/schemas/CategoryModel__links'
    CollectionModel:
      properties:
        _type:
          enum:
          - Collection
          type: string
        total:
          description: The total amount of elements available in the collection.
          minimum: 0
          type: integer
        count:
          description: Actual amount of elements in this response.
          minimum: 0
          type: integer
        _links:
          $ref: '#/components/schemas/CollectionModel__links'
      required:
      - _links
      - _type
      - count
      - total
    ConfigurationModel:
      properties:
        maximumAttachmentFileSize:
          description: The maximum allowed size of an attachment in Bytes
          readOnly: true
          type: integer
        hostName:
          description: The host name configured for the system
          readOnly: true
          type: string
        perPageOptions:
          description: Page size steps to be offered in paginated list UI
          items:
            type: integer
          type: array
        activeFeatureFlags:
          description: The list of all feature flags that are active
          items:
            type: string
          type: array
    CustomActionModel:
      properties:
        _type:
          enum:
          - CustomAction
          type: string
        name:
          description: The name of the custom action
          type: string
        description:
          description: The description for the custom action
          type: string
        _links:
          $ref: '#/components/schemas/CustomActionModel__links'
    CustomOptionModel:
      example:
        _links:
          self:
            href: /api/v3/custom_options/1
        _type: CustomOption
        value: Foo
      properties:
        id:
          description: The identifier
          readOnly: true
          type: integer
        value:
          description: The value defined for this custom option
          readOnly: true
          type: string
        _links:
          $ref: '#/components/schemas/CustomOptionModel__links'
    DayCollectionModel:
      allOf:
      - $ref: '#/components/schemas/CollectionModel'
      - properties:
          _links:
            $ref: '#/components/schemas/DayCollectionModel_allOf__links'
          _embedded:
            $ref: '#/components/schemas/DayCollectionModel_allOf__embedded'
        required:
        - _embedded
        - _links
      example:
        _type: Collection
        total: 5
        count: 5
        _links:
          self:
            href: "/api/v3/days?filters=[{\"interval\":{\"operator\":\"<>d\",\"values\"\
              :[\"2022-04-29\",\"2022-05-03\"]}}]"
        _embedded:
          elements:
          - _type: Day
            date: 2022-04-29
            name: Friday
            working: true
            _links:
              self:
                href: /api/v3/days/2022-04-29
              weekday:
                href: /api/v3/days/week/5
                title: Friday
          - _type: Day
            date: 2022-04-30
            name: Saturday
            working: false
            _links:
              self:
                href: /api/v3/days/2022-04-30
              nonWorkingReasons:
              - href: /api/v3/days/week/6
                title: Saturday
              weekday:
                href: /api/v3/days/week/6
                title: Saturday
          - _type: Day
            date: 2022-05-01
            name: Sunday (Labour day)
            working: false
            _links:
              self:
                href: /api/v3/days/2022-05-01
              nonWorkingReasons:
              - href: /api/v3/days/week/7
                title: Sunday
              - href: /api/v3/days/non_working/2022-05-01
                title: Labour day
              weekday:
                href: /api/v3/days/week/7
                title: Sunday
          - _type: Day
            date: 2022-05-02
            name: Monday
            working: true
            _links:
              self:
                href: /api/v3/days/2022-05-02
              weekday:
                href: /api/v3/days/week/1
                title: Monday
          - _type: Day
            date: 2022-05-03
            name: Tuesday
            working: true
            _links:
              self:
                href: /api/v3/days/2022-05-03
              weekday:
                href: /api/v3/days/week/2
                title: Tuesday
    DayModel:
      example:
        _type: Day
        date: 2022-12-25
        name: Sunday (Christmas)
        working: false
        _links:
          self:
            href: /api/v3/days/2022-12-25
          nonWorkingReasons:
          - href: /api/v3/days/week/7
            title: Sunday
          - href: /api/v3/days/non_working/2022-12-25
            title: Christmas
          weekday:
            href: /api/v3/days/week/7
            title: Sunday
      properties:
        _type:
          enum:
          - Day
          type: string
        date:
          description: Date of the day.
          format: date
          type: string
        name:
          description: Descriptive name for the day.
          type: string
        working:
          description: "`true` for a working day, `false` otherwise."
          type: boolean
        _links:
          $ref: '#/components/schemas/DayModel__links'
      required:
      - _type
      - date
      - name
      - working
    Default_QueryModel:
      example:
        _type: Query
        name: default
        filters:
        - _type: StatusQueryFilter
          name: Status
          _links:
            filter:
              href: /api/v3/queries/filters/status
              title: Status
            operator:
              href: /api/v3/queries/operators/o
              title: open
            schema:
              href: /api/v3/queries/filter_instance_schemas/status
            values: []
        public: false
        sums: false
        timelineVisible: false
        timelineZoomLevel: days
        timelineLabels: {}
        highlightingMode: inline
        timestamps:
        - P0D
        showHierarchies: true
        starred: false
        _embedded:
          results:
            _type: WorkPackageCollection
            total: 234
            count: 30
            pageSize: 2
            offset: 1
            _embedded:
              elements:
              - <--- shortened for brevity --->
            _links:
              self:
                href: /api/v3/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=1&pageSize=2&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D
              jumpTo:
                href: /api/v3/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=%7Boffset%7D&pageSize=2&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D
                templated: true
              changeSize:
                href: /api/v3/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=1&pageSize=%7Bsize%7D&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D
                templated: true
              createWorkPackage:
                href: /api/v3/work_packages/form
                method: post
              createWorkPackageImmediate:
                href: /api/v3/work_packages
                method: post
            highlightedAttributes: []
        _links:
          self:
            href: /api/v3/queries/default
            title: Default
          results:
            href: /api/v3/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=1&pageSize=2&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D
          columns:
          - href: /api/v3/queries/columns/id
            title: ID
          - href: /api/v3/queries/columns/subject
            title: Subject
          - href: /api/v3/queries/columns/type
            title: Type
          - href: /api/v3/queries/columns/status
            title: Status
          - href: /api/v3/queries/columns/priority
            title: Priority
          - href: /api/v3/queries/columns/assignee
            title: Assignee
          - href: /api/v3/queries/columns/updated_at
            title: Updated on
          highlightedAttributes: []
          groupBy:
            href: null
            title: null
          sortBy:
          - href: /api/v3/queries/sort_bys/parent-desc
            title: Parent (Descending)
          user:
            href: /api/v3/users/1
            title: OpenProject Admin
          project:
            href: null
      type: object
    Default_Query_for_ProjectModel:
      example:
        _type: Query
        name: default
        filters:
        - _type: StatusQueryFilter
          name: Status
          _links:
            filter:
              href: /api/v3/queries/filters/status
              title: Status
            operator:
              href: /api/v3/queries/operators/o
              title: open
            schema:
              href: /api/v3/queries/filter_instance_schemas/status
            values: []
        public: false
        sums: false
        timelineVisible: false
        timelineZoomLevel: days
        showHierarchies: true
        starred: false
        _embedded:
          results:
            _type: WorkPackageCollection
            total: 234
            count: 30
            pageSize: 2
            offset: 1
            _embedded:
              elements:
              - <--- shortened for brevity --->
            _links:
              self:
                href: /api/v3/projects/42/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=1&pageSize=2&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D
              jumpTo:
                href: /api/v3/projects/42/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=%7Boffset%7D&pageSize=2&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D
                templated: true
              changeSize:
                href: /api/v3/projects/42/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=1&pageSize=%7Bsize%7D&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D
                templated: true
              createWorkPackage:
                href: /api/v3/work_packages/form
                method: post
              createWorkPackageImmediate:
                href: /api/v3/work_packages
                method: post
        _links:
          self:
            href: /api/v3/projects/42/queries/default
            title: Default
          results:
            href: /api/v3/projects/42/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=1&pageSize=2&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D
          columns:
          - href: /api/v3/queries/columns/id
            title: ID
          - href: /api/v3/queries/columns/subject
            title: Subject
          - href: /api/v3/queries/columns/type
            title: Type
          - href: /api/v3/queries/columns/status
            title: Status
          - href: /api/v3/queries/columns/priority
            title: Priority
          - href: /api/v3/queries/columns/assignee
            title: Assignee
          - href: /api/v3/queries/columns/updated_at
            title: Updated on
          groupBy:
            href: null
            title: null
          sortBy:
          - href: /api/v3/queries/sort_bys/parent-desc
            title: Parent (Descending)
          user:
            href: /api/v3/users/1
            title: OpenProject Admin
          project:
            href: /api/v3/projects/42
            title: Lorem ipsum project
      type: object
    DocumentModel:
      example:
        _type: Document
        id: 1
        title: Some other document
        description:
          format: markdown
          raw: Videlicet deserunt aequitas cognatus. Concedo quia est quia pariatur
            vorago vallum. Calco autem atavus accusamus conscendo cornu ulterius.
            Tam patria ago consectetur ventito sustineo nihil caecus. Supra officiis
            eos velociter somniculosus tonsor qui. Suffragium aduro arguo angustus
            cogito quia tolero vulnus. Supplanto sortitus cresco apud vestrum qui.
          html: <p>Videlicet deserunt aequitas cognatus. Concedo quia est quia pariatur
            vorago vallum. Calco autem atavus accusamus conscendo cornu ulterius.
            Tam patria ago consectetur ventito sustineo nihil caecus. Supra officiis
            eos velociter somniculosus tonsor qui. Suffragium aduro arguo angustus
            cogito quia tolero vulnus. Supplanto sortitus cresco apud vestrum qui.</p>
        createdAt: 2018-12-10T20:53:39.539Z
        _links:
          attachments:
            href: /api/v3/documents/1/attachments
          addAttachment:
            href: /api/v3/documents/1/attachments
            method: post
          self:
            href: /api/v3/documents/1
            title: Some document
          project:
            href: /api/v3/projects/19
            title: Some project
        _embedded:
          project:
            _type: Project...
          attachments:
            _type: Collection
            total: 2
            count: 2
            _embedded...:
              elements: []
            _links:
              self:
                href: /api/v3/documents/1/attachments
      properties:
        id:
          description: Document's id
          readOnly: true
          type: integer
        title:
          description: The title chosen for the collection of documents
          readOnly: true
          type: string
        description:
          description: A text describing the documents
          readOnly: true
          type: string
        createdAt:
          description: The time the document was created at
          format: date-time
          readOnly: true
          type: string
        _links:
          $ref: '#/components/schemas/DocumentModel__links'
    DocumentsModel:
      example:
        _type: Collection
        total: 2
        count: 2
        pageSize: 30
        offset: 1
        _embedded:
          elements:
          - description:
              format: markdown
              raw: Videlicet deserunt aequitas cognatus. Concedo quia est quia pariatur
                vorago vallum. Calco autem atavus accusamus conscendo cornu ulterius.
                Tam patria ago consectetur ventito sustineo nihil caecus. Supra officiis
                eos velociter somniculosus tonsor qui. Suffragium aduro arguo angustus
                cogito quia tolero vulnus. Supplanto sortitus cresco apud vestrum
                qui.
              html: <p>Videlicet deserunt aequitas cognatus. Concedo quia est quia
                pariatur vorago vallum. Calco autem atavus accusamus conscendo cornu
                ulterius. Tam patria ago consectetur ventito sustineo nihil caecus.
                Supra officiis eos velociter somniculosus tonsor qui. Suffragium aduro
                arguo angustus cogito quia tolero vulnus. Supplanto sortitus cresco
                apud vestrum qui.</p>
            _type: Document
            id: 1
            title: Some other document
            createdAt: 2018-12-10T20:53:39.966Z
            _links:
              attachments:
                href: /api/v3/documents/1/attachments
              addAttachment:
                href: /api/v3/documents/1/attachments
                method: post
              self:
                href: /api/v3/documents/1
                title: Some document
              project:
                href: /api/v3/projects/19
                title: Some project
          - description:
              format: markdown
              raw: Videlicet deserunt aequitas cognatus. Concedo quia est quia pariatur
                vorago vallum. Calco autem atavus accusamus conscendo cornu ulterius.
                Tam patria ago consectetur ventito sustineo nihil caecus. Supra officiis
                eos velociter somniculosus tonsor qui. Suffragium aduro arguo angustus
                cogito quia tolero vulnus. Supplanto sortitus cresco apud vestrum
                qui.
              html: <p>Videlicet deserunt aequitas cognatus. Concedo quia est quia
                pariatur vorago vallum. Calco autem atavus accusamus conscendo cornu
                ulterius. Tam patria ago consectetur ventito sustineo nihil caecus.
                Supra officiis eos velociter somniculosus tonsor qui. Suffragium aduro
                arguo angustus cogito quia tolero vulnus. Supplanto sortitus cresco
                apud vestrum qui.</p>
            _type: Document
            id: 2
            title: Some other document
            createdAt: 2018-12-10T20:55:54.886Z
            _links:
              attachments:
                href: /api/v3/documents/2/attachments
              addAttachment:
                href: /api/v3/documents/2/attachments
                method: post
              self:
                href: /api/v3/documents/2
                title: Some other document
              project:
                href: /api/v3/projects/29
                title: Some other project
        _links:
          self:
            href: /api/v3/documents?offset=1&pageSize=30
          jumpTo:
            href: /api/v3/documents?offset=%7Boffset%7D&pageSize=30
            templated: true
          changeSize:
            href: /api/v3/documents?offset=1&pageSize=%7Bsize%7D
            templated: true
      type: object
    ErrorResponse:
      properties:
        _embedded:
          $ref: '#/components/schemas/ErrorResponse__embedded'
        _type:
          enum:
          - Error
          type: string
        errorIdentifier:
          example: urn:openproject-org:api:v3:errors:PropertyConstraintViolation
          type: string
        message:
          example: Project can't be blank.
          type: string
      required:
      - _type
      - errorIdentifier
      - message
    Example_FormModel:
      example:
        _links:
          self:
            href: /api/v3/example/form
          validate:
            href: /api/v3/example/form
            method: POST
          previewMarkup:
            href: /api/v3/render/markdown
            method: POST
          commit:
            href: /api/v3/example
            method: PATCH
        _type: Form
        _embedded:
          payload:
            _links:
              status:
                href: /api/v3/statuses/1
            _type: Example
            lockVersion: 5
            subject: An example title
          schema:
            _type: Schema
            _links:
              self:
                href: /api/v3/example/schema
            lockVersion:
              type: Integer
              writable: false
            subject:
              type: String
              minLength: 1
              maxLength: 255
            status:
              _links:
                allowedValues:
                - href: /api/v3/statuses/1
                  title: New
                - href: /api/v3/statuses/2
                  title: Closed
              type: Status
              _embedded:
                allowedValues:
                - _links:
                    self:
                      href: /api/v3/statuses/1
                  _type: Status
                  id: 1
                  name: New
                  position: 1
                  isDefault: true
                  isClosed: false
                  defaultDoneRatio: 0
                  createdAt: 2014-05-21T08:51:20.759Z
                  updatedAt: 2014-05-21T09:12:00.237Z
                - _links:
                    self:
                      href: /api/v3/statuses/2
                  _type: Status
                  id: 2
                  name: Closed
                  position: 2
                  isDefault: false
                  isClosed: true
                  defaultDoneRatio: 100
                  createdAt: 2014-05-21T08:51:20.759Z
                  updatedAt: 2014-05-21T09:12:00.237Z
          validationErrors:
            subject:
              _type: Error
              errorIdentifier: urn:openproject-org:api:v3:errors:BadExampleError
              message: For the purpose of this example we need a validation error.
                The remainder of the response pretends there were no errors.
      type: object
    Example_SchemaModel:
      example:
        _type: Schema
        _dependencies: []
        _links:
          self:
            href: /api/v3/example/schema
        lockVersion:
          name: Resource Version
          type: Integer
          writable: false
        subject:
          name: Subject
          type: String
          minLength: 1
          maxLength: 255
        status:
          _links:
            allowedValues:
            - href: /api/v3/statuses/1
              title: New
            - href: /api/v3/statuses/2
              title: Closed
          name: Status
          type: Status
          location: _links
          _embedded:
            allowedValues:
            - _links:
                self:
                  href: /api/v3/statuses/1
              _type: Status
              id: 1
              name: New
              position: 1
              isDefault: true
              isClosed: false
              defaultDoneRatio: 0
              createdAt: 2014-05-21T08:51:20.991Z
              updatedAt: 2014-05-21T09:12:00.155Z
            - _links:
                self:
                  href: /api/v3/statuses/2
              _type: Status
              id: 2
              name: Closed
              position: 2
              isDefault: false
              isClosed: true
              defaultDoneRatio: 100
              createdAt: 2014-05-21T08:51:20.991Z
              updatedAt: 2014-05-21T09:12:00.155Z
      type: object
    FileLinkCollectionReadModel:
      allOf:
      - $ref: '#/components/schemas/CollectionModel'
      - properties:
          _links:
            $ref: '#/components/schemas/FileLinkCollectionReadModel_allOf__links'
          _embedded:
            $ref: '#/components/schemas/FileLinkCollectionReadModel_allOf__embedded'
        required:
        - _embedded
        - _links
      example:
        _type: Collection
        total: 2
        count: 2
        _links:
          self:
            href: /api/v3/work_packages/42/file_links
        _embedded:
          elements:
          - id: 1337
            _type: FileLink
            createdAt: 2021-12-20T13:37:00.211Z
            updatedAt: 2021-12-20T13:37:00.211Z
            originData:
              id: 5503
              name: logo.png
              mimeType: image/png
              size: 16042
              createdAt: 2021-12-19T09:42:10.170Z
              lastModifiedAt: 2021-12-20T14:00:13.987Z
              createdByName: Luke Skywalker
              lastModifiedByName: Anakin Skywalker
            _links:
              self:
                href: /api/v3/work_package/17/file_links/1337
                title: file link
              storage:
                href: /api/v3/storage/42
                title: storage
              container:
                href: /api/v3/work_package/17
                title: work package
              creator:
                href: /api/v3/users/33
                title: Obi-Wan Kenobi
              delete:
                href: /api/v3/work_package/17/file_links/1337
                method: delete
              originOpen:
                href: https://nextcloud.deathstar.rocks/index.php/f?fileid=5503
              staticOriginOpen:
                href: /api/v3/work_package/17/file_links/1337/open
          - _hint: File Link resource shortened for brevity
            id: 1338
    FileLinkCollectionWriteModel:
      allOf:
      - $ref: '#/components/schemas/CollectionModel'
      - properties:
          _embedded:
            $ref: '#/components/schemas/FileLinkCollectionWriteModel_allOf__embedded'
        required:
        - _embedded
      example:
        _embedded:
          elements:
          - originData:
              id: 5503
              name: logo.png
              mimeType: image/png
              size: 16042
              createdAt: 2021-12-19T09:42:10.170Z
              lastModifiedAt: 2021-12-20T14:00:13.987Z
              createdByName: Luke Skywalker
              lastModifiedByName: Anakin Skywalker
            _links:
              storage:
                href: /api/v3/storage/42
          - _hint: File Link resource shortened for brevity
            id: 1338
    FileLinkOriginDataModel:
      properties:
        id:
          description: Linked file's id on the origin
          type: string
        name:
          description: Linked file's name on the origin
          type: string
        mimeType:
          description: |-
            MIME type of the linked file.

            To link a folder entity, the custom MIME type `application/x-op-directory` MUST be provided. Otherwise it defaults back to
            an unknown MIME type.
          minLength: 0
          type: string
        size:
          description: file size on origin in bytes
          minimum: 0
          type: integer
        createdAt:
          description: Timestamp of the creation datetime of the file on the origin
          format: date-time
          type: string
        lastModifiedAt:
          description: Timestamp of the datetime of the last modification of the file
            on the origin
          format: date-time
          type: string
        createdByName:
          description: Display name of the author that created the file on the origin
          type: string
        lastModifiedByName:
          description: Display name of the author that modified the file on the origin
            last
          type: string
      required:
      - id
      - name
    FileLinkReadModel:
      example:
        id: 1337
        _type: FileLink
        createdAt: 2021-12-20T13:37:00.211Z
        updatedAt: 2021-12-20T13:37:00.211Z
        originData:
          id: 5503
          name: logo.png
          mimeType: image/png
          size: 16042
          createdAt: 2021-12-19T09:42:10.170Z
          lastModifiedAt: 2021-12-20T14:00:13.987Z
          createdByName: Luke Skywalker
          lastModifiedByName: Anakin Skywalker
        _embedded:
          storage:
            id: 1337
            _type: Storage
            name: It's no moon
            createdAt: 2021-12-20T13:37:00.211Z
            updatedAt: 2021-12-20T13:37:00.211Z
            _links:
              self:
                href: /api/v3/storages/1337
                title: It's no moon
              type:
                href: urn:openproject-org:api:v3:storages:nextcloud
                title: Nextcloud
              origin:
                href: https://nextcloud.deathstar.rocks/
          container:
            _hint: Work package resource shortened for brevity
            _type: WorkPackage
            _links:
              self:
                href: /api/v3/work_packages/1528
                title: Develop API
              schema:
                href: /api/v3/work_packages/schemas/11-2
            id: 1528
            subject: Develop API
            description:
              format: markdown
              raw: Develop super cool OpenProject API.
              html: <p>Develop super cool OpenProject API.</p>
            scheduleManually: false
            readonly: false
            startDate: null
            dueDate: null
            createdAt: 2014-08-29T12:40:53.860Z
            updatedAt: 2014-08-29T12:44:41.036Z
        _links:
          self:
            href: /api/v3/work_package/17/file_links/1337
          storage:
            href: /api/v3/storage/42
            title: It's no moon
          container:
            href: /api/v3/work_package/17
            title: Develop API
          creator:
            href: /api/v3/users/33
            title: Obi-Wan Kenobi
          delete:
            href: /api/v3/work_package/17/file_links/1337
          status:
            href: urn:openproject-org:api:v3:file-links:permission:View
            title: View
          originOpen:
            href: https://nextcloud.deathstar.rocks/index.php/f/5503?openfile=1
          staticOriginOpen:
            href: /api/v3/file_links/1337/open
          originOpenLocation:
            href: https://nextcloud.deathstar.rocks/index.php/f/5503?openfile=0
          staticOriginOpenLocation:
            href: /api/v3/file_links/1337/open?location=true
          staticOriginDownload:
            href: /api/v3/file_links/1337/download
      properties:
        id:
          description: File link id
          type: integer
        _type:
          enum:
          - FileLink
          type: string
        createdAt:
          description: Time of creation
          format: date-time
          type: string
        updatedAt:
          description: Time of the most recent change to the file link
          format: date-time
          type: string
        originData:
          $ref: '#/components/schemas/FileLinkOriginDataModel'
        _embedded:
          $ref: '#/components/schemas/FileLinkReadModel__embedded'
        _links:
          $ref: '#/components/schemas/FileLinkReadModel__links'
      required:
      - _links
      - _type
      - id
      - originData
    FileLinkWriteModel:
      example:
        originData:
          id: 5503
          name: logo.png
          mimeType: image/png
          size: 16042
          createdAt: 2021-12-19T09:42:10.170Z
          lastModifiedAt: 2021-12-20T14:00:13.987Z
          createdByName: Luke Skywalker
          lastModifiedByName: Anakin Skywalker
        _links:
          storageUrl:
            href: https://nextcloud.my-deathstar.org
      properties:
        originData:
          $ref: '#/components/schemas/FileLinkOriginDataModel'
        _links:
          $ref: '#/components/schemas/FileLinkWriteModel__links'
      required:
      - _links
      - originData
    Formattable:
      example:
        format: markdown
        raw: I am formatted!
        html: I am formatted!
      properties:
        format:
          description: Indicates the formatting language of the raw text
          enum:
          - plain
          - markdown
          - custom
          example: markdown
          readOnly: true
          type: string
        raw:
          description: "The raw text, as entered by the user"
          example: I **am** formatted!
          type: string
        html:
          description: The text converted to HTML according to the format
          example: I <strong>am</strong> formatted!
          readOnly: true
          type: string
      required:
      - format
    GridCollectionModel:
      allOf:
      - $ref: '#/components/schemas/PaginatedCollectionModel'
      - properties:
          _embedded:
            $ref: '#/components/schemas/GridCollectionModel_allOf__embedded'
        required:
        - _embedded
    GridReadModel:
      properties:
        _type:
          enum:
          - Grid
          type: string
        id:
          description: Grid's id
          minimum: 1
          type: integer
        rowCount:
          description: The number of rows the grid has
          minimum: 1
          type: integer
        columnCount:
          description: The number of columns the grid has
          minimum: 1
          type: integer
        widgets:
          description: |-
            The set of `GridWidget`s selected for the grid.

            # Conditions

            - The widgets must not overlap.
          items:
            $ref: '#/components/schemas/GridWidgetModel'
          type: array
        createdAt:
          description: The time the grid was created.
          format: date-time
          type: string
        updatedAt:
          description: The time the grid was last updated.
          format: date-time
          type: string
        _links:
          $ref: '#/components/schemas/GridReadModel__links'
      required:
      - _links
      - _type
      - columnCount
      - id
      - rowCount
      - widgets
    GridWidgetModel:
      example:
        identifier: identifier
        endColumn: 1
        startRow: 1
        startColumn: 1
        _type: GridWidget
        options: "{}"
        endRow: 1
        id: 1
      properties:
        _type:
          enum:
          - GridWidget
          type: string
        id:
          description: "The grid widget's unique identifier. Can be null, if a new\
            \ widget is created within a grid."
          minimum: 1
          type: integer
          nullable: true
        identifier:
          description: "An alternative, human legible, and unique identifier."
          type: string
        startRow:
          description: The index of the starting row of the widget. The row is inclusive.
          minimum: 1
          type: integer
        endRow:
          description: The index of the ending row of the widget. The row is exclusive.
          minimum: 1
          type: integer
        startColumn:
          description: The index of the starting column of the widget. The column
            is inclusive.
          minimum: 1
          type: integer
        endColumn:
          description: The index of the ending column of the widget. The column is
            exclusive.
          minimum: 1
          type: integer
        options:
          type: object
      required:
      - _type
      - endColumn
      - endRow
      - id
      - identifier
      - startColumn
      - startRow
    GridWriteModel:
      example:
        _links:
          scope:
            identifier: identifier
            templated: false
            method: GET
            payload: "{}"
            href: href
            title: title
            type: type
        rowCount: 1
        columnCount: 1
        widgets:
        - identifier: identifier
          endColumn: 1
          startRow: 1
          startColumn: 1
          _type: GridWidget
          options: "{}"
          endRow: 1
          id: 1
        - identifier: identifier
          endColumn: 1
          startRow: 1
          startColumn: 1
          _type: GridWidget
          options: "{}"
          endRow: 1
          id: 1
      properties:
        rowCount:
          description: The number of rows the grid has
          minimum: 1
          type: integer
        columnCount:
          description: The number of columns the grid has
          minimum: 1
          type: integer
        widgets:
          description: |-
            The set of `GridWidget`s selected for the grid.

            # Conditions

            - The widgets must not overlap.
          items:
            $ref: '#/components/schemas/GridWidgetModel'
          type: array
        _links:
          $ref: '#/components/schemas/GridWriteModel__links'
    GroupCollectionModel:
      allOf:
      - $ref: '#/components/schemas/CollectionModel'
      - properties:
          _links:
            $ref: '#/components/schemas/GroupCollectionModel_allOf__links'
          _embedded:
            $ref: '#/components/schemas/GroupCollectionModel_allOf__embedded'
        required:
        - _embedded
        - _links
      example:
        _type: Collection
        total: 2
        count: 2
        _links:
          self:
            href: /api/v3/groups
        _embedded:
          elements:
          - _type: Group
            id: 1337
            name: Stormtroopers
            createdAt: 2022-09-23T11:06:36.300Z
            updatedAt: 2022-09-23T11:06:36.300Z
            _links:
              self:
                href: /api/v3/groups/9
                title: Stormtroopers
              delete:
                href: /api/v3/group/9
                method: delete
              memberships:
                href: "/api/v3/memberships?filters=[{\"principal\":{\"operator\":\"\
                  =\",\"values\":[\"9\"]}}]"
                title: Memberships
              updateImmediately:
                href: /api/v3/group/9
                method: patch
              members:
              - href: /api/v3/users/363
                title: ST-097E
              - href: /api/v3/users/60
                title: ST-C-334
          - _hint: Group resource shortened for brevity
            id: 1338
    GroupModel:
      allOf:
      - $ref: '#/components/schemas/PrincipalModel'
      - properties:
          _type:
            enum:
            - Group
            type: string
          _embedded:
            $ref: '#/components/schemas/GroupModel_allOf__embedded'
          _links:
            $ref: '#/components/schemas/GroupModel_allOf__links'
        required:
        - _embedded
        - _type
    GroupWriteModel:
      example:
        name: Emperor's guard
        _links:
          members:
          - href: /api/v3/users/42
          - href: /api/v3/users/43
          - href: /api/v3/users/44
      properties:
        name:
          description: The new group name.
          type: string
        _links:
          $ref: '#/components/schemas/GroupWriteModel__links'
    HelpTextCollectionModel:
      allOf:
      - $ref: '#/components/schemas/CollectionModel'
      - properties:
          _links:
            $ref: '#/components/schemas/HelpTextCollectionModel_allOf__links'
          _embedded:
            $ref: '#/components/schemas/HelpTextCollectionModel_allOf__embedded'
        required:
        - _embedded
        - _links
      example:
        total: 2
        count: 2
        _type: Collection
        _embedded:
          elements:
          - _type: HelpText
            _links:
              self:
                href: /api/v3/help_texts/1
            id: 1
            attribute: id
            attributeCaption: ID
            scope: WorkPackage
            helpText:
              format: markdown
              raw: Help text for id attribute.
              html: <p>Help text for id attribute.</p>
          - _type: HelpText
            _links:
              self:
                href: /api/v3/help_texts/2
            id: 2
            attribute: status
            attributeCaption: Status
            scope: WorkPackage
            helpText:
              format: markdown
              raw: Help text for status attribute.
              html: <p>Help text for status attribute.</p>
        _links:
          self:
            href: /api/v3/help_texts
    HelpTextModel:
      example:
        _type: HelpText
        id: 1
        attribute: id
        scope: WorkPackage
        helpText:
          format: markdown
          raw: Help text for id attribute.
          html: <p>Help text for id attribute.</p>
        _links:
          self:
            href: /api/v3/help_texts/1
          editText:
            href: /admin/attribute_help_texts/1/edit
            type: text/html
          attachments:
            href: /api/v3/help_texts/1/attachments
          addAttachments:
            href: /api/v3/help_texts/1/attachments
            method: post
      properties:
        _type:
          enum:
          - HelpText
          type: string
        id:
          format: int64
          minimum: 1
          type: integer
        attribute:
          description: The attribute the help text is assigned to.
          type: string
        scope:
          enum:
          - WorkPackage
          - Project
          type: string
        helpText:
          $ref: '#/components/schemas/Formattable'
        _links:
          $ref: '#/components/schemas/HelpTextModel__links'
      required:
      - _links
      - _type
      - attribute
      - helpText
      - id
      - scope
    Link:
      example:
        href: /api/v3/work_packages
        method: POST
      properties:
        href:
          description: URL to the referenced resource (might be relative)
          type: string
          nullable: true
        title:
          description: Representative label for the resource
          type: string
        templated:
          default: false
          description: If true the href contains parts that need to be replaced by
            the client
          type: boolean
        method:
          default: GET
          description: The HTTP verb to use when requesting the resource
          type: string
        payload:
          description: The payload to send in the request to achieve the desired result
          type: object
        identifier:
          description: An optional unique identifier to the link object
          type: string
        type:
          description: The MIME-Type of the returned resource.
          type: string
      required:
      - href
    List_actionsModel:
      example:
        _links:
          self:
            href: /api/v3/actions
        total: 2
        count: 2
        _type: Collection
        _embedded:
          elements:
          - _links:
              self:
                href: /api/v3/actions/work_packages/create
                title: Add work package
            _type: Action
            id: work_packages/create
            name: Add work package
            description: "Creating a work package within a project including the uploading\
              \ of attachments. Some attributes might not be selected, e.g version\
              \ which requires a second permission"
            modules:
            - work_packages
          - _links:
              self:
                href: /api/v3/actions/work_packages/assign_versions
                title: Assigning version
            _type: Action
            id: work_packages/assign_versions
            name: Assign version
            description: Assigning a work package to a version when creating/updating
              a work package. Only principals having this permission can assign a
              value to the version property of the work package resource.
            modules:
            - work_packages
            - versions
      type: object
    List_available_parent_project_candidatesModel:
      allOf:
      - $ref: '#/components/schemas/CollectionModel'
      - properties:
          _links:
            $ref: '#/components/schemas/List_available_parent_project_candidatesModel_allOf__links'
          _embedded:
            $ref: '#/components/schemas/List_available_parent_project_candidatesModel_allOf__embedded'
        required:
        - _embedded
        - _links
    List_capabilitiesModel:
      example:
        _links:
          self:
            href: /api/v3/capabilities
          changeSize:
            href: "/api/v3/capabilities?pageSize={size}"
            templated: true
          jumpTo:
            href: "/api/v3/capabilities?offset={offset}"
            templated: true
        total: 4
        count: 4
        _type: Collection
        _embedded:
          elements:
          - _links:
              self:
                href: /api/v3/capabilities/work_packages/create/p123-567
              action:
                href: /api/v3/actions/work_packages/create
                title: Add work package
              context:
                href: /api/v3/projects/123
                title: A project
              principal:
                href: /api/v3/users/567
                title: Some user
            _type: Capability
            id: work_packages/create/p123-567
          - _links:
              self:
                href: /api/v3/capabilities/work_packages/assignee/p123-567
              action:
                href: /api/v3/actions/work_packages/assignee
              context:
                href: /api/v3/projects/123
                title: A project
              principal:
                href: /api/v3/users/567
                title: Some user
            _type: Capability
            id: work_packages/assignee/p123-567
          - _links:
              self:
                href: /api/v3/capabilities/memberships/create/p345-821
                title: Create members
              action:
                href: /api/v3/actions/memberships/create
              context:
                href: /api/v3/projects/345
                title: A project
              principal:
                href: /api/v3/users/821
                title: Some user
            _type: Capability
            id: memberships/create/p345-821
          - _links:
              self:
                href: /api/v3/capabilities/users/delete/g-567
                title: Delete user
              context:
                href: /api/v3/capabilities/context/global
                title: Global
              principal:
                href: /api/v3/users/567
                title: Some user
            _type: Capability
            id: users/delete/g-567
      type: object
    List_of_NewsModel:
      example:
        _type: Collection
        total: 78
        count: 2
        pageSize: 2
        offset: 1
        _embedded:
          elements:
          - _type: News
            id: 1
            title: asperiores possimus nam doloribus ab
            summary: Celebrer spiculum colo viscus claustrum atque. Id nulla culpa
              sumptus. Comparo crapula depopulo demonstro.
            description:
              format: markdown
              raw: Videlicet deserunt aequitas cognatus. Concedo quia est quia pariatur
                vorago vallum. Calco autem atavus accusamus conscendo cornu ulterius.
                Tam patria ago consectetur ventito sustineo nihil caecus. Supra officiis
                eos velociter somniculosus tonsor qui. Suffragium aduro arguo angustus
                cogito quia tolero vulnus. Supplanto sortitus cresco apud vestrum
                qui.
              html: <p>Videlicet deserunt aequitas cognatus. Concedo quia est quia
                pariatur vorago vallum. Calco autem atavus accusamus conscendo cornu
                ulterius. Tam patria ago consectetur ventito sustineo nihil caecus.
                Supra officiis eos velociter somniculosus tonsor qui. Suffragium aduro
                arguo angustus cogito quia tolero vulnus. Supplanto sortitus cresco
                apud vestrum qui.</p>
            createdAt: 2015-03-20T12:57:01.509Z
            _links:
              self:
                href: /api/v3/news/1
                title: asperiores possimus nam doloribus ab
              project:
                href: /api/v3/projects/1
                title: Seeded Project
              author:
                href: /api/v3/users/2
                title: Peggie Feeney
          - _type: News
            id: 2
            title: terminatio tutamen. Officia adeptio sp
            summary: Consequatur sequi surculus creo tui aequitas.
            description:
              format: markdown
              raw: Amicitia alius cattus voluntarius. Virgo viduo terminatio tutamen.
                Officia adeptio spectaculum atavus nisi cum concido bis. Harum caecus
                auxilium sol theatrum eaque consequatur. Omnis aeger suus adipisci
                cicuta. Cur delicate alias curto cursim atqui talio fugiat.
              html: <p>Amicitia alius cattus voluntarius. Virgo viduo terminatio tutamen.
                Officia adeptio spectaculum atavus nisi cum concido bis. Harum caecus
                auxilium sol theatrum eaque consequatur. Omnis aeger suus adipisci
                cicuta. Cur delicate alias curto cursim atqui talio fugiat.</p>
            createdAt: 2015-03-20T12:57:01.509Z
            _links:
              self:
                href: /api/v3/news/2
                title: terminatio tutamen. Officia adeptio sp
              project:
                href: /api/v3/projects/1
                title: Seeded Project
              author:
                href: /api/v3/users/2
                title: Peggie Feeney
        _links:
          self:
            href: /api/v3/news?offset=1&pageSize=2
          jumpTo:
            href: /api/v3/news?offset=%7Boffset%7D&pageSize=2
            templated: true
          changeSize:
            href: /api/v3/news?offset=1&pageSize=%7Bsize%7D
            templated: true
          nextByOffset:
            href: /api/v3/news?offset=2&pageSize=2
      type: object
    List_projects_by_versionModel:
      example:
        _links:
          self:
            href: /api/v3/versions/2/projects
        total: 1
        count: 1
        _type: Collection
        _embedded:
          elements:
          - _type: Project
            _links:
              self:
                href: /api/v3/projects/1
                title: Lorem
              categories:
                href: /api/v3/projects/1/categories
              versions:
                href: /api/v3/projects/1/versions
              status:
                href: /api/v3/project_statuses/on_track
                title: On track
            id: 1
            identifier: project_identifier
            name: Project example
            description:
              format: markdown
              raw: Lorem **ipsum** dolor sit amet
              html: <p>Lorem <strong>ipsum</strong> dolor sit amet</p>
            active: true
            statusExplanation:
              format: markdown
              raw: Everything **fine**
              html: <p>Everything <strong>fine</strong></p>
            createdAt: 2014-05-21T08:51:20.142Z
            updatedAt: 2014-05-21T08:51:20.142Z
      type: object
    MeetingModel:
      example:
        _type: Meeting
        id: 72
        lockVersion: 5
        title: A meeting
        startTime: 2014-05-21T08:00:00.000Z
        endTime: 2014-05-21T10:00:00.000Z
        duration: 120
        createdAt: 2014-05-21T08:51:20.396Z
        updatedAt: 2014-05-21T09:14:02.776Z
        _embedded:
          project:
            _type: Project...
            id: 12
          author:
            _type: User...
            id: 2
        _links:
          addAttachment:
            href: /api/v3/meetings/72/attachments
            method: post
          attachments:
            href: /api/v3/meetings/72/attachments
          project:
            href: /api/v3/projects/12
            title: some project
          author:
            href: /api/v3/users/2
            title: Peggie Feeney
          self:
            href: /api/v3/meetings/72
      properties:
        id:
          description: Identifier of this meeting
          readOnly: true
          type: integer
        title:
          description: The meeting's title
          type: string
        _links:
          $ref: '#/components/schemas/MeetingModel__links'
      required:
      - title
    MarkdownModel:
      example: <p>Hello world! <a href="http://example.com">This</a> <strong>is</strong>
        markdown!</p>
      format: html
      type: string
    MembershipCollectionModel:
      allOf:
      - $ref: '#/components/schemas/PaginatedCollectionModel'
      - properties:
          _embedded:
            $ref: '#/components/schemas/MembershipCollectionModel_allOf__embedded'
        required:
        - _embedded
    MembershipFormModel:
      properties:
        _type:
          enum:
          - Form
          type: string
        _embedded:
          $ref: '#/components/schemas/MembershipFormModel__embedded'
        _links:
          $ref: '#/components/schemas/MembershipFormModel__links'
      required:
      - _embedded
      - _links
      - _type
    MembershipReadModel:
      properties:
        _type:
          enum:
          - Membership
          type: string
        id:
          description: The membership's id
          minimum: 1
          type: integer
        createdAt:
          description: The time the membership was created.
          format: date-time
          type: string
        updatedAt:
          description: The time the membership was last updated.
          format: date-time
          type: string
        _embedded:
          $ref: '#/components/schemas/MembershipReadModel__embedded'
        _links:
          $ref: '#/components/schemas/MembershipReadModel__links'
      required:
      - _links
      - _type
      - createdAt
      - id
      - updatedAt
    MembershipSchemaModel:
      allOf:
      - $ref: '#/components/schemas/SchemaModel'
      - properties:
          id:
            $ref: '#/components/schemas/SchemaPropertyModel'
          createdAt:
            $ref: '#/components/schemas/SchemaPropertyModel'
          updatedAt:
            $ref: '#/components/schemas/SchemaPropertyModel'
          notificationMessage:
            $ref: '#/components/schemas/SchemaPropertyModel'
          project:
            $ref: '#/components/schemas/SchemaPropertyModel'
          principal:
            $ref: '#/components/schemas/SchemaPropertyModel'
          roles:
            $ref: '#/components/schemas/SchemaPropertyModel'
        required:
        - createdAt
        - id
        - notificationMessage
        - principal
        - project
        - roles
        - updatedAt
    MembershipWriteModel:
      example:
        _links:
          principal:
            identifier: identifier
            templated: false
            method: GET
            payload: "{}"
            href: href
            title: title
            type: type
          roles:
          - identifier: identifier
            templated: false
            method: GET
            payload: "{}"
            href: href
            title: title
            type: type
          - identifier: identifier
            templated: false
            method: GET
            payload: "{}"
            href: href
            title: title
            type: type
          project:
            identifier: identifier
            templated: false
            method: GET
            payload: "{}"
            href: href
            title: title
            type: type
        _meta:
          notificationMessage:
            format: markdown
            raw: I **am** formatted!
            html: I <strong>am</strong> formatted!
          sendNotification: true
      properties:
        _links:
          $ref: '#/components/schemas/MembershipWriteModel__links'
        _meta:
          $ref: '#/components/schemas/MembershipWriteModel__meta'
      required:
      - _links
    NewsModel:
      example:
        _type: News
        id: 1
        title: asperiores possimus nam doloribus ab
        summary: Celebrer spiculum colo viscus claustrum atque. Id nulla culpa sumptus.
          Comparo crapula depopulo demonstro.
        description:
          format: markdown
          raw: Videlicet deserunt aequitas cognatus. Concedo quia est quia pariatur
            vorago vallum. Calco autem atavus accusamus conscendo cornu ulterius.
            Tam patria ago consectetur ventito sustineo nihil caecus. Supra officiis
            eos velociter somniculosus tonsor qui. Suffragium aduro arguo angustus
            cogito quia tolero vulnus. Supplanto sortitus cresco apud vestrum qui.
          html: <p>Videlicet deserunt aequitas cognatus. Concedo quia est quia pariatur
            vorago vallum. Calco autem atavus accusamus conscendo cornu ulterius.
            Tam patria ago consectetur ventito sustineo nihil caecus. Supra officiis
            eos velociter somniculosus tonsor qui. Suffragium aduro arguo angustus
            cogito quia tolero vulnus. Supplanto sortitus cresco apud vestrum qui.</p>
        createdAt: 2015-03-20T12:57:01.908Z
        _links:
          self:
            href: /api/v3/news/1
            title: asperiores possimus nam doloribus ab
          project:
            href: /api/v3/projects/1
            title: A project
          author:
            href: /api/v3/users/2
            title: Peggie Feeney
        _embedded:
          project:
            _type: Project...
          author:
            _type: User...
      properties:
        id:
          description: News' id
          readOnly: true
          type: integer
        title:
          description: The headline of the news
          readOnly: true
          type: string
        summary:
          description: A short summary
          readOnly: true
          type: string
        description:
          description: The main body of the news with all the details
          readOnly: true
          type: string
        createdAt:
          description: The time the news was created at
          format: date-time
          readOnly: true
          type: string
        _links:
          $ref: '#/components/schemas/NewsModel__links'
    NonWorkingDayCollectionModel:
      allOf:
      - $ref: '#/components/schemas/CollectionModel'
      - properties:
          _links:
            $ref: '#/components/schemas/NonWorkingDayCollectionModel_allOf__links'
          _embedded:
            $ref: '#/components/schemas/NonWorkingDayCollectionModel_allOf__embedded'
        required:
        - _embedded
        - _links
      example:
        _type: Collection
        total: 2
        count: 2
        _links:
          self:
            href: "/api/v3/non_working?filters=[{\"interval\":{\"operator\":\"<>d\"\
              ,\"values\":[\"2022-04-29\",\"2022-12-24\"]}}]"
        _embedded:
          elements:
          - _type: NonWorkingDay
            date: 2022-12-24
            name: Christmas Evening
            _links:
              self:
                href: /api/v3/days/non_working/2022-04-24
              weekday:
                href: /api/v3/days/week/6
                title: Saturday
          - _type: NonWorkingDay
            date: 2022-05-01
            name: Labour day
            _links:
              self:
                href: /api/v3/days/non_working/2022-05-01
              weekday:
                href: /api/v3/days/week/7
                title: Sunday
    NonWorkingDayModel:
      example:
        _type: NonWorkingDay
        date: 2022-12-25
        name: Christmas
        _links:
          self:
            href: /api/v3/days/non_working/2022-12-25
            title: Christmas
      properties:
        _type:
          enum:
          - NonWorkingDay
          type: string
        date:
          description: Date of the non-working day.
          format: date
          type: string
        name:
          description: Descriptive name for the non-working day.
          type: string
        _links:
          $ref: '#/components/schemas/NonWorkingDayModel__links'
      required:
      - _type
      - date
      - name
    NotificationCollectionModel:
      allOf:
      - $ref: '#/components/schemas/CollectionModel'
      - properties:
          _links:
            $ref: '#/components/schemas/NotificationCollectionModel_allOf__links'
          _embedded:
            $ref: '#/components/schemas/NotificationCollectionModel_allOf__embedded'
        required:
        - _embedded
        - _links
    NotificationModel:
      properties:
        _type:
          enum:
          - Notification
          type: string
        id:
          description: Notification id
          minimum: 1
          type: integer
        reason:
          description: The reason for the notification
          enum:
          - assigned
          - commented
          - created
          - dateAlert
          - mentioned
          - prioritized
          - processed
          - responsible
          - subscribed
          - scheduled
          - watched
          type: string
        readIAN:
          description: Whether the notification is marked as read
          type: boolean
        details:
          description: A list of objects including detailed information about the
            notification.
          items:
            $ref: '#/components/schemas/NotificationModel_details_inner'
          type: array
        createdAt:
          description: The time the notification was created at
          format: date-time
          type: string
        updatedAt:
          description: The time the notification was last updated
          format: date-time
          type: string
        _embedded:
          $ref: '#/components/schemas/NotificationModel__embedded'
        _links:
          $ref: '#/components/schemas/NotificationModel__links'
    OAuthApplicationReadModel:
      example:
        id: 1337
        _type: OauthClientCredentials
        name: Vader's secure OAuth app
        clientId: O5h6WObhMg1Z8IcLHRE3_LMh4jJYmmca2V6OTFSv8DA
        confidential: true
        createdAt: 2022-12-07T12:56:42.626Z
        updatedAt: 2022-12-07T12:56:42.626Z
        scopes:
        - api_v3
        _links:
          self:
            href: /api/v3/oauth_applications/1337
          owner:
            href: /api/v3/users/13
            title: Darth Vader
          integration:
            href: /api/v3/storages/42
            title: Death Star Cloud
          redirectUri:
            href: https://death-star.cloud.tools/index.php/apps/integration_openproject/oauth-redirect
      properties:
        id:
          minimum: 1
          type: integer
        _type:
          enum:
          - OAuthApplication
          type: string
        name:
          description: The name of the OAuth 2 application
          type: string
        clientId:
          description: OAuth 2 client id
          type: string
        clientSecret:
          description: OAuth 2 client secret. This is only returned when creating
            a new OAuth application.
          type: string
        confidential:
          description: "true, if OAuth 2 credentials are confidential, false, if no\
            \ secret is stored"
          type: boolean
        createdAt:
          description: The time the OAuth 2 Application was created at
          format: date-time
          type: string
        updatedAt:
          description: The time the OAuth 2 Application was last updated
          format: date-time
          type: string
        scopes:
          description: An array of the scopes of the OAuth 2 Application
          items:
            type: string
          type: array
        _links:
          $ref: '#/components/schemas/OAuthApplicationReadModel__links'
      required:
      - _type
      - clientId
      - confidential
      - id
      - name
    OAuthClientCredentialsReadModel:
      example:
        id: 1337
        _type: OAuthClientCredentials
        clientId: O5h6WObhMg1Z8IcLHRE3_LMh4jJYmmca2V6OTFSv8DA
        confidential: true
        createdAt: 2022-12-07T12:56:42.836Z
        updatedAt: 2022-12-07T12:56:42.836Z
        _link:
          self:
            href: /api/v3/oauth_client_credentials/1337
          integration:
            href: /api/v3/storages/42
            title: Death Star Cloud
      properties:
        id:
          minimum: 1
          type: integer
        _type:
          enum:
          - OAuthClientCredentials
          type: string
        clientId:
          description: OAuth 2 client id
          type: string
        confidential:
          description: "true, if OAuth 2 credentials are confidential, false, if no\
            \ secret is stored"
          type: boolean
        createdAt:
          description: The time the OAuth client credentials were created at
          format: date-time
          type: string
        updatedAt:
          description: The time the OAuth client credentials were last updated
          format: date-time
          type: string
        _links:
          $ref: '#/components/schemas/OAuthClientCredentialsReadModel__links'
      required:
      - _links
      - _type
      - clientId
      - confidential
      - id
    OAuthClientCredentialsWriteModel:
      example:
        clientId: O5h6WObhMg1Z8IcLHRE3_LMh4jJYmmca2V6OTFSv8DA
        clientSecret: LSk52mn4jmtSYTgH0NzDj-u2z5LMpT8bsS0BouwJQQw
      properties:
        clientId:
          description: OAuth 2 client id
          type: string
        clientSecret:
          description: OAuth 2 client secret
          type: string
      required:
      - clientId
      - clientSecret
    PaginatedCollectionModel:
      allOf:
      - $ref: '#/components/schemas/CollectionModel'
      - properties:
          pageSize:
            description: Amount of elements that a response will hold.
            minimum: 0
            type: integer
          offset:
            description: The page number that is requested from paginated collection.
            minimum: 1
            type: integer
          _links:
            $ref: '#/components/schemas/PaginatedCollectionModel_allOf__links'
        required:
        - offset
        - pageSize
    PlaceholderUserCollectionModel:
      allOf:
      - $ref: '#/components/schemas/CollectionModel'
      - properties:
          _links:
            $ref: '#/components/schemas/PlaceholderUserCollectionModel_allOf__links'
          _embedded:
            $ref: '#/components/schemas/PlaceholderUserCollectionModel_allOf__embedded'
        required:
        - _embedded
        - _links
      example:
        _type: Collection
        total: 2
        count: 2
        _links:
          self:
            href: /api/v3/placeholder_users
        _embedded:
          elements:
          - _hint: PlaceholderUser resource shortened for brevity
            _type: PlaceholderUser
            id: 1337
          - _hint: PlaceholderUser resource shortened for brevity
            _type: PlaceholderUser
            id: 1338
    PlaceholderUserCreateModel:
      properties:
        name:
          description: The new name of the placeholder user to be created.
          type: string
    PlaceholderUserModel:
      allOf:
      - $ref: '#/components/schemas/PrincipalModel'
      - properties:
          _type:
            enum:
            - PlaceholderUser
            type: string
          status:
            description: |-
              The current activation status of the placeholder user.

              # Conditions

              - User has `manage_placeholder_user` permission globally
            type: string
          _links:
            $ref: '#/components/schemas/PlaceholderUserModel_allOf__links'
        required:
        - _type
    Plain_TextModel:
      example: <p>Hello world! This *is* plain text!</p>
      format: html
      type: string
    PostModel:
      example:
        _type: Post
        id: 1
        subject: A post with a subject
        _embedded:
          project:
            _type: Project...
        _links:
          self:
            href: /api/v3/posts/1
          attachments:
            href: /api/v3/posts/1/attachments
          addAttachment:
            href: /api/v3/posts/1/attachments
            method: post
          project:
            href: /api/v3/projects/1
            title: A project with a title
      properties:
        id:
          description: Identifier of this post
          readOnly: true
          type: integer
        subject:
          description: The post's subject
          type: string
        _links:
          $ref: '#/components/schemas/PostModel__links'
      required:
      - subject
    PrincipalCollectionModel:
      allOf:
      - $ref: '#/components/schemas/CollectionModel'
      - properties:
          _links:
            $ref: '#/components/schemas/PrincipalCollectionModel_allOf__links'
          _embedded:
            $ref: '#/components/schemas/PrincipalCollectionModel_allOf__embedded'
        required:
        - _embedded
        - _links
      example:
        _type: Collection
        total: 3
        count: 3
        _links:
          self:
            href: /api/v3/principals
        _embedded:
          elements:
          - _hint: User resource shortened for brevity
            _type: User
            id: 1337
          - _hint: Group resource shortened for brevity
            _type: Group
            id: 1338
          - _hint: PlaceholderUser resource shortened for brevity
            _type: PlaceholderUser
            id: 1339
    PrincipalModel:
      properties:
        _type:
          enum:
          - User
          - Group
          - PlaceholderUser
          type: string
        id:
          description: The principal's unique identifier.
          minimum: 1
          type: integer
        name:
          description: "The principal's display name, layout depends on instance settings."
          type: string
        createdAt:
          description: Time of creation
          format: date-time
          type: string
        updatedAt:
          description: Time of the most recent change to the principal
          format: date-time
          type: string
        _links:
          $ref: '#/components/schemas/PrincipalModel__links'
      required:
      - _links
      - _type
      - id
      - name
    PriorityCollectionModel:
      allOf:
      - $ref: '#/components/schemas/CollectionModel'
      - properties:
          _links:
            $ref: '#/components/schemas/PriorityCollectionModel_allOf__links'
          _embedded:
            $ref: '#/components/schemas/PriorityCollectionModel_allOf__embedded'
        required:
        - _embedded
        - _links
    PriorityModel:
      example:
        _type: Priority
        _links:
          self:
            href: /api/v3/priorities/1
            title: Low
        id: 1
        name: Low
        position: 1
        isDefault: false
        isActive: true
      properties:
        id:
          description: Priority id
          readOnly: true
          type: integer
        name:
          description: Priority name
          minLength: 1
          readOnly: true
          type: string
        position:
          description: Sort index of the priority
          readOnly: true
          type: integer
        isDefault:
          description: Indicates whether this is the default value
          readOnly: true
          type: boolean
        isActive:
          description: Indicates whether the priority is available
          type: boolean
        _links:
          $ref: '#/components/schemas/PriorityModel__links'
    ProjectCollectionModel:
      allOf:
      - $ref: '#/components/schemas/CollectionModel'
      - properties:
          _links:
            $ref: '#/components/schemas/ProjectCollectionModel_allOf__links'
          _embedded:
            $ref: '#/components/schemas/ProjectCollectionModel_allOf__embedded'
        required:
        - _embedded
        - _links
    ProjectModel:
      properties:
        _type:
          enum:
          - Project
          type: string
        id:
          description: Projects' id
          minimum: 1
          type: integer
        identifier:
          type: string
        name:
          type: string
        active:
          description: Indicates whether the project is currently active or already
            archived
          type: boolean
        statusExplanation:
          $ref: '#/components/schemas/ProjectModel_statusExplanation'
        public:
          description: Indicates whether the project is accessible for everybody
          type: boolean
        description:
          $ref: '#/components/schemas/Formattable'
        createdAt:
          description: Time of creation. Can be writable by admins with the `apiv3_write_readonly_attributes`
            setting enabled.
          format: date-time
          type: string
        updatedAt:
          description: Time of the most recent change to the project
          format: date-time
          type: string
        _links:
          $ref: '#/components/schemas/ProjectModel__links'
    ProjectStorageCollectionModel:
      allOf:
      - $ref: '#/components/schemas/CollectionModel'
      - properties:
          _links:
            $ref: '#/components/schemas/ProjectStorageCollectionModel_allOf__links'
          _embedded:
            $ref: '#/components/schemas/ProjectStorageCollectionModel_allOf__embedded'
        required:
        - _embedded
        - _links
      example:
        _type: Collection
        total: 2
        count: 2
        _links:
          self:
            href: /api/v3/project_storages?filters=%5B%7B%22storage%22%3A%7B%22operator%22%3A%22%3D%22%2C%22values%22%3A%5B%2281%22%5D%7D%7D%5D
        _embedded:
          elements:
          - id: 1337
            _type: ProjectStorage
            _hint: project storage resource shortened for brevity
          - id: 1338
            _type: ProjectStorage
            _hint: File Link resource shortened for brevity
    ProjectStorageModel:
      example:
        _type: ProjectStorage
        id: 1337
        projectFolderMode: manual
        createdAt: 2023-01-20T14:30:00.368Z
        updatedAt: 2023-05-23T11:57:48.618Z
        _links:
          self:
            href: /api/v3/project_storages/23
          projectFolder:
            href: /api/v3/storages/81/files/30
          creator:
            title: Darth Vader
            href: /api/v3/users/3
          project:
            title: Death Star 3.0
            href: /api/v3/projects/11
          storage:
            title: Palpatine's Data Vault
            href: /api/v3/storages/81
          open:
            href: /api/v3/storages/81/open
          openWithConnectionEnsured:
            href: /oauth_clients/123/ensure_connection?destination_url=https%3A%2F%2Fopenproject.local%2Fprojects%2Fdeath-star%2Fproject_storages%2F23%2Fopen&storage_id=81
      properties:
        _type:
          enum:
          - ProjectStorage
          type: string
        id:
          description: The project storage's id
          minimum: 1
          type: integer
        projectFolderMode:
          enum:
          - inactive
          - manual
          type: string
        createdAt:
          description: Time of creation
          format: date-time
          type: string
        updatedAt:
          description: Time of the most recent change to the project storage
          format: date-time
          type: string
        _links:
          $ref: '#/components/schemas/ProjectStorageModel__links'
      required:
      - _type
      - createdAt
      - id
      - projectFolderMode
      - updatedAt
    Projects_schemaModel:
      example:
        _type: Schema
        _dependencies: []
        id:
          type: Integer
          name: ID
          required: true
          hasDefault: false
          writable: false
        name:
          type: String
          name: Name
          required: true
          hasDefault: false
          writable: true
          minLength: 1
          maxLength: 255
        identifier:
          type: String
          name: Identifier
          required: true
          hasDefault: false
          writable: true
          minLength: 1
          maxLength: 100
        description:
          type: Formattable
          name: Description
          required: false
          hasDefault: false
          writable: true
        public:
          type: Boolean
          name: Public
          required: true
          hasDefault: false
          writable: true
        active:
          type: Boolean
          name: Active
          required: true
          hasDefault: true
          writable: true
        status:
          type: ProjectStatus
          name: Status
          required: false
          hasDefault: true
          writable: true
          _links:
            allowedValues:
            - href: /api/v3/project_statuses/on_track
              title: On track
            - href: /api/v3/project_statuses/at_risk
              title: At risk
            - href: /api/v3/project_statuses/off_track
              title: Off track
        statusExplanation:
          type: Formattable
          name: Status explanation
          required: false
          hasDefault: false
          writable: true
        parent:
          type: Project
          name: Subproject of
          required: false
          hasDefault: false
          writable: true
          location: _links
          visibility: default
          _links: {}
        createdAt:
          type: DateTime
          name: Created on
          required: true
          hasDefault: false
          writable: false
        updatedAt:
          type: DateTime
          name: Updated on
          required: true
          hasDefault: false
          writable: false
        customField30:
          type: Integer
          name: Integer project custom field
          required: false
          hasDefault: false
          writable: true
          visibility: default
        customField31:
          type: CustomOption
          name: List project custom field
          required: false
          hasDefault: false
          writable: true
          location: _links
          visibility: default
          _links: {}
        customField32:
          type: Version
          name: Version project custom field
          required: false
          hasDefault: false
          writable: true
          location: _links
          visibility: default
          _links: {}
        customField34:
          type: Boolean
          name: Boolean project custom field
          required: false
          hasDefault: false
          writable: true
          visibility: default
        customField35:
          type: String
          name: Text project custom field
          required: true
          hasDefault: false
          writable: true
          visibility: default
        _links:
          self:
            href: /api/v3/projects/schema
      type: object
    QueriesModel:
      example:
        _links:
          self:
            href: /api/v3/queries
        total: 1
        count: 1
        _type: Collection
        _embedded:
          elements:
          - _type: Query
            id: 9
            name: fdsfdsfdsf
            createdAt: 2015-03-20T12:56:56.858Z
            updatedAt: 2015-05-20T18:16:53.887Z
            filters:
            - _type: StatusQueryFilter
              name: Status
              _links:
                filter:
                  href: /api/v3/queries/filters/status
                  title: Status
                operator:
                  href: /api/v3/queries/operators/o
                  title: open
                schema:
                  href: /api/v3/queries/filter_instance_schemas/status
                values: []
            - _type: DueDateQueryFilter
              name: Finish date
              values:
              - "1"
              _links:
                filter:
                  href: /api/v3/queries/filters/dueDate
                  title: Finish date
                operator:
                  href: /api/v3/queries/operators/<t+
                  title: in less than
                schema:
                  href: /api/v3/queries/filter_instance_schemas/dueDate
            public: false
            sums: false
            starred: true
            projections:
            - _type: Query::TableProjection
            - _type: Query::TeamPlannerProjection
              _links:
                rows:
                - href: /api/v3/users/1
                  title: Bob Bobbit
            - _type: Query::CalendarProjection
            _embedded:
              results:
                _type: WorkPackageCollection
                total: 234
                count: 30
                pageSize: 30
                offset: 1
                _embedded:
                  elements:
                  - <--- shortened for brevity --->
                _links:
                  self:
                    href: /api/v3/projects/3/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=1&pageSize=2&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D
                  jumpTo:
                    href: /api/v3/projects/3/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=%7Boffset%7D&pageSize=2&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D
                    templated: true
                  changeSize:
                    href: /api/v3/projects/3/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=1&pageSize=%7Bsize%7D&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D
                    templated: true
                  createWorkPackage:
                    href: /api/v3/work_packages/form
                    method: post
                  createWorkPackageImmediate:
                    href: /api/v3/work_packages
                    method: post
            _links:
              self:
                href: /api/v3/queries/9
                title: fdsfdsfdsf
              results:
                href: /api/v3/projects/3/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=1&pageSize=2&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D
              columns:
              - href: /api/v3/queries/columns/id
                title: ID
              - href: /api/v3/queries/columns/subject
                title: Subject
              - href: /api/v3/queries/columns/type
                title: Type
              - href: /api/v3/queries/columns/status
                title: Status
              - href: /api/v3/queries/columns/priority
                title: Priority
              - href: /api/v3/queries/columns/assignee
                title: Assignee
              - href: /api/v3/queries/columns/updated_at
                title: Updated on
              groupBy:
                href: null
                title: null
              sortBy:
              - href: /api/v3/queries/sort_bys/parent-desc
                title: Parent (Descending)
              user:
                href: /api/v3/users/1
                title: OpenProject Admin
              project:
                href: /api/v3/projects/3
                title: copy
      type: object
    QueryModel:
      properties:
        id:
          description: Query id
          readOnly: true
          type: integer
        name:
          description: Query name
          readOnly: true
          type: string
        filters:
          description: A set of QueryFilters which will be applied to the work packages
            to determine the resulting work packages
          items:
            $ref: '#/components/schemas/Query_Filter_Instance_SchemaModel'
          type: array
        sums:
          description: Should sums (of supported properties) be shown?
          readOnly: true
          type: boolean
        timelineVisible:
          deprecated: true
          description: Should the timeline mode be shown?
          readOnly: true
          type: boolean
        timelineLabels:
          description: "Which labels are shown in the timeline, empty when default"
          items:
            type: string
          type: array
        timelineZoomLevel:
          deprecated: true
          description: Which zoom level should the timeline be rendered in?
          readOnly: true
          type: string
        timestamps:
          description: Timestamps to filter by when showing changed attributes on
            work packages.
          items:
            description: TODO default missing array inner type to string
            type: string
          type: array
        highlightingMode:
          deprecated: true
          description: Which highlighting mode should the table have?
          readOnly: true
          type: string
        showHierarchies:
          deprecated: true
          description: Should the hierarchy mode be enabled?
          readOnly: true
          type: boolean
        hidden:
          deprecated: true
          description: Should the query be hidden from the query list?
          readOnly: true
          type: boolean
        public:
          description: Can users besides the owner see the query?
          readOnly: true
          type: boolean
        starred:
          description: Should the query be highlighted to the user?
          readOnly: true
          type: boolean
        createdAt:
          description: Time of creation
          format: date-time
          readOnly: true
          type: string
        updatedAt:
          description: Time of the most recent change to the query
          format: date-time
          readOnly: true
          type: string
        _links:
          $ref: '#/components/schemas/QueryModel__links'
      required:
      - createdAt
      - updatedAt
    Query_ColumnModel:
      example:
        _type: QueryColumn::Property
        id: priority
        name: Priority
        _links:
          self:
            href: /api/v3/queries/columns/priority
            title: Priority
      properties:
        id:
          description: Query column id
          readOnly: true
          type: string
        name:
          description: Query column name
          type: string
      required:
      - id
      - name
    Query_Create_Form:
      example:
        name: New query name
      properties:
        name:
          description: Query name.
          type: string
    Query_FilterModel:
      example:
        _type: QueryFilter
        id: status
        _links:
          self:
            href: /api/v3/queries/filters/status
            title: Status
      properties:
        id:
          description: QueryFilter id
          type: string
      required:
      - id
    Query_Filter_Instance_SchemaModel:
      example:
        _type: QueryFilterInstanceSchema
        _dependencies:
        - _type: SchemaDependency
          "on": operator
          dependencies:
            /api/v3/queries/operators/=:
              values:
                type: "[]User"
                name: Values
                required: true
                hasDefault: false
                writable: true
                _links: {}
            /api/v3/queries/operators/!:
              values:
                type: "[]User"
                name: Values
                required: true
                hasDefault: false
                writable: true
                _links: {}
        name:
          type: String
          name: Name
          required: true
          hasDefault: true
          writable: false
        filter:
          type: QueryFilter
          name: Filter
          required: true
          hasDefault: false
          writable: true
          _links: {}
        _links:
          self:
            href: /api/v3/queries/filter_instance_schemas/author
          filter:
            href: /api/v3/queries/filters/author
            title: Author
      properties:
        name:
          description: Describes the name attribute
          readOnly: true
          type: string
        filter:
          description: QuerySortBy name
          type: string
        _links:
          $ref: '#/components/schemas/Query_Filter_Instance_SchemaModel__links'
      required:
      - filter
      - name
    Query_Filter_Instance_SchemasModel:
      example:
        _type: Collection
        total: 2
        count: 2
        _embedded:
          elements:
          - _type: QueryFilterInstanceSchema
            _dependencies:
            - _type: SchemaDependency
              "on": operator
              dependencies:
                /api/v3/queries/operators/=:
                  values:
                    type: "[]User"
                    name: Values
                    required: true
                    hasDefault: false
                    writable: true
                    _links: {}
                /api/v3/queries/operators/!:
                  values:
                    type: "[]User"
                    name: Values
                    required: true
                    hasDefault: false
                    writable: true
                    _links: {}
                /api/v3/queries/operators/!*: {}
                /api/v3/queries/operators/*: {}
            name:
              type: String
              name: Name
              required: true
              hasDefault: true
              writable: false
            filter:
              type: QueryFilter
              name: Filter
              required: true
              hasDefault: false
              writable: true
              _links: {}
            _links:
              self:
                href: /api/v3/queries/filter_instance_schemas/assignee
              filter:
                href: /api/v3/queries/filters/assignee
                title: Assignee
          - _type: QueryFilterInstanceSchema
            _dependencies:
            - _type: SchemaDependency
              "on": operator
              dependencies:
                /api/v3/queries/operators/=:
                  values:
                    type: "[]User"
                    name: Values
                    required: true
                    hasDefault: false
                    writable: true
                    _links: {}
                /api/v3/queries/operators/!:
                  values:
                    type: "[]User"
                    name: Values
                    required: true
                    hasDefault: false
                    writable: true
                    _links: {}
            name:
              type: String
              name: Name
              required: true
              hasDefault: true
              writable: false
            filter:
              type: QueryFilter
              name: Filter
              required: true
              hasDefault: false
              writable: true
              _links: {}
            _links:
              self:
                href: /api/v3/queries/filter_instance_schemas/author
              filter:
                href: /api/v3/queries/filters/author
                title: Author
        _links:
          self:
            href: /api/v3/queries/filter_instance_schemas
      type: object
    Query_Filter_Instance_Schemas_For_ProjectModel:
      example:
        _type: Collection
        total: 2
        count: 2
        _embedded:
          elements:
          - _type: QueryFilterInstanceSchema
            _dependencies:
            - _type: SchemaDependency
              "on": operator
              dependencies:
                /api/v3/queries/operators/=:
                  values:
                    type: "[]User"
                    name: Values
                    required: true
                    hasDefault: false
                    writable: true
                    _links: {}
                /api/v3/queries/operators/!:
                  values:
                    type: "[]User"
                    name: Values
                    required: true
                    hasDefault: false
                    writable: true
                    _links: {}
                /api/v3/queries/operators/!*: {}
                /api/v3/queries/operators/*: {}
            name:
              type: String
              name: Name
              required: true
              hasDefault: true
              writable: false
            filter:
              type: QueryFilter
              name: Filter
              required: true
              hasDefault: false
              writable: true
              _links: {}
            _links:
              self:
                href: /api/v3/queries/filter_instance_schemas/assignee
              filter:
                href: /api/v3/queries/filters/assignee
                title: Assignee
          - _type: QueryFilterInstanceSchema
            _dependencies:
            - _type: SchemaDependency
              "on": operator
              dependencies:
                /api/v3/queries/operators/=:
                  values:
                    type: "[]User"
                    name: Values
                    required: true
                    hasDefault: false
                    writable: true
                    _links: {}
                /api/v3/queries/operators/!:
                  values:
                    type: "[]User"
                    name: Values
                    required: true
                    hasDefault: false
                    writable: true
                    _links: {}
            name:
              type: String
              name: Name
              required: true
              hasDefault: true
              writable: false
            filter:
              type: QueryFilter
              name: Filter
              required: true
              hasDefault: false
              writable: true
              _links: {}
            _links:
              self:
                href: /api/v3/queries/filter_instance_schemas/author
              filter:
                href: /api/v3/queries/filters/author
                title: Author
        _links:
          self:
            href: /api/v3/projects/42/queries/filter_instance_schemas
      type: object
    Query_OperatorModel:
      example:
        _type: QueryOperator
        id: '!'
        name: is not
        _links:
          self:
            href: /api/v3/queries/operators/!
            title: is not
      properties:
        id:
          description: Query operator id
          readOnly: true
          type: string
        name:
          description: Query operator name
          type: string
      required:
      - id
      - name
    Query_Sort_ByModel:
      example:
        _type: QuerySortBy
        id: status-asc
        name: Status (Ascending)
        _links:
          self:
            href: /api/v3/queries/sort_bys/status-asc
            title: Status (Ascending)
          column:
            href: /api/v3/queries/columns/status
            title: Status
          direction:
            href: urn:openproject-org:api:v3:queries:directions:asc
            title: Ascending
      properties:
        id:
          description: QuerySortBy id
          readOnly: true
          type: string
        name:
          description: QuerySortBy name
          type: string
      required:
      - id
      - name
    Query_Update_Form:
      example:
        name: Updated query name
      properties:
        name:
          description: Query name.
          type: string
    RelationModel:
      example:
        _links:
          self:
            href: /api/v3/relations/1
          update:
            href: /api/v3/relations/1/form
            method: POST
          updateImmediately:
            href: /api/v3/relations/1
            method: PATCH
          delete:
            href: /api/v3/relations/1
            method: DELETE
          from:
            href: /api/v3/work_packages/42
            title: Steel Delivery
          to:
            href: /api/v3/work_packages/84
            title: Bending the steel
        _type: Relation
        id: 1
        name: precedes
        type: precedes
        reverseType: follows
        description: We can't bend the steel before it's been delivered!
        lag: 0
      properties:
        id:
          description: Relation ID
          readOnly: true
          type: integer
        name:
          description: The internationalized name of this kind of relation
          type: string
        type:
          description: "Which kind of relation (blocks, precedes, etc.)"
          type: string
        reverseType:
          description: The kind of relation from the other WP's perspective
          readOnly: true
          type: string
        description:
          description: Short text further describing the relation
          type: string
        lag*:
          description: The lag in days between closing of `from` and start of `to`
          minimum: 0
          type: integer
        _links:
          $ref: '#/components/schemas/RelationModel__links'
    Relation_edit_formModel:
      example:
        _links:
          self:
            href: /api/v3/relations/form
          validate:
            href: /api/v3/relations/form
            method: POST
          commit:
            href: /api/v3/relations
            method: PATCH
        _type: Form
        _embedded:
          payload:
            _links:
              from:
                href: /api/v3/work_packages/4534
              to:
                href: /api/v3/work_packages/3857
            _type: WorkPackage
            type: follows
            lag: 3
            description: let it rest for 3 days
          schema:
            _type: Schema
            _links:
              self:
                href: /api/v3/relations/schema
            id:
              name: ID
              type: Integer
              writable: false
            type:
              name: Type
              type: String
              writable: true
              allowedValues:
              - relates
              - duplicates
              - duplicated
              - blocks
              - blocked
              - precedes
              - follows
              - includes
              - partof
              - requires
              - required
            reverseType:
              name: Reverse Type
              type: String
              writable: false
            description:
              name: Description
              type: String
              writable: true
            from:
              name: From work package
              type: WorkPackage
              writable: false
            to:
              name: To work package
              type: WorkPackage
              writable: false
            lag:
              name: lag
              type: Integer
              writable: true
          validationErrors:
            from:
              _type: Error
              errorIdentifier: urn:openproject-org:api:v3:errors:BadExampleError
              message: For the purpose of this example we need a validation error.
                The remainder of the response pretends there were no errors.
      type: object
    Relation_schemaModel:
      example:
        _type: Schema
        _links:
          self:
            href: /api/v3/relations/schema
        id:
          name: ID
          type: Integer
          writable: false
        type:
          name: Type
          type: String
          writable: true
        reverseType:
          name: Reverse Type
          type: String
          writable: false
        description:
          name: Description
          type: String
          writable: true
        from:
          name: From work package
          type: WorkPackage
          writable: false
        to:
          name: To work package
          type: WorkPackage
          writable: false
        lag:
          name: Lag
          type: Integer
          writable: true
      type: object
    RelationsModel:
      example:
        _links:
          self:
            href: /api/v3/relations
        total: 3
        count: 1
        _type: Collection
        _embedded:
          elements:
          - _links:
              self:
                href: /api/v3/relations/1
              update:
                href: /api/v3/relations/1/form
                method: POST
              updateImmediately:
                href: /api/v3/relations/1
                method: PATCH
              delete:
                href: /api/v3/relations/1
                method: DELETE
              from:
                href: /api/v3/work_packages/42
                title: Steel Delivery
              to:
                href: /api/v3/work_packages/84
                title: Bending the steel
            _type: Relation
            id: 1
            name: precedes
            type: precedes
            reverseType: follows
            description: We can't bend the steel before it's been delivered!
            lag: 0
      type: object
    RevisionModel:
      example:
        _type: Revision
        _links:
          self:
            href: /api/v3/revisions/1
          project:
            href: /api/v3/projects/1
          author:
            href: /api/v3/users/1
          showRevision:
            href: /projects/identifier/repository/revision/11f4b07
        id: 1
        identifier: 11f4b07dff4f4ce9548a52b7d002daca7cd63ec6
        formattedIdentifier: 11f4b07
        authorName: Some Developer
        message:
          format: plain
          raw: |-
            This revision provides new features

            An elaborate description
          html: <p>This revision provides new features<br/><br/>An elaborate description</p>
        createdAt: 2015-07-21T13:36:59.859Z
      properties:
        id:
          description: "Revision's id, assigned by OpenProject"
          readOnly: true
          type: integer
        identifier:
          description: The raw SCM identifier of the revision (e.g. full SHA hash)
          readOnly: true
          type: string
        formattedIdentifier:
          description: "The SCM identifier of the revision, formatted (e.g. shortened\
            \ unambiguous SHA hash). May be identical to identifier in many cases"
          readOnly: true
          type: string
        authorName:
          description: The name of the author that committed this revision. Note that
            this name is retrieved from the repository and does not identify a user
            in OpenProject.
          readOnly: true
          type: string
        message:
          $ref: '#/components/schemas/RevisionModel_message'
        createdAt:
          description: The time this revision was committed to the repository
          format: date-time
          type: string
        _links:
          $ref: '#/components/schemas/RevisionModel__links'
      required:
      - authorName
      - createdAt
      - formattedIdentifier
      - identifier
      - message
    RevisionsModel:
      example:
        _links:
          self:
            href: /api/v3/work_packages/42/revisions
        total: 2
        count: 2
        _type: Collection
        _embedded:
          elements:
          - _type: Revision
            _links:
              self:
                href: /api/v3/revisions/13
              project:
                href: /api/v3/projects/1
                title: A Test Project
              author:
                href: /api/v3/users/1
                title: John Sheppard - j.sheppard
              showRevision:
                href: /projects/identifier/repository/revision/11f4b07
            id: 13
            identifier: 11f4b07dff4f4ce9548a52b7d002daca7cd63ec6
            formattedIdentifier: 11f4b07
            authorName: John Sheppard
            message:
              format: plain
              raw: |-
                This revision provides new features

                An elaborate description
              html: <p>This revision provides new features<br/><br/>An elaborate description</p>
            createdAt: 2015-07-21T13:36:59.201Z
          - _type: Revision
            _links:
              self:
                href: /api/v3/revisions/14
              project:
                href: /api/v3/projects/1
                title: A Test Project
              author:
                href: /api/v3/users/2
                title: Jim Sheppard - j.sheppard
              showRevision:
                href: /projects/identifier/repository/revision/029ed72a
            id: 13
            identifier: 029ed72a3b7b7c4ab332b1f6eaa6576e7c946059
            formattedIdentifier: 029ed72a
            authorName: j1msheppard
            message:
              format: plain
              raw: |-
                This revision fixes some stuff

                More information here
              html: <p>This revision fixes some stuff<br/><br/>More information here</p>
            createdAt: 2015-06-30T08:47:00.548Z
      type: object
    RoleModel:
      example:
        _type: Role
        id: 3
        name: Manager
        _links:
          self:
            href: /api/v3/roles/3
            title: Manager
      properties:
        _type:
          enum:
          - Role
          type: string
        id:
          description: Role id
          minimum: 1
          readOnly: true
          type: integer
        name:
          description: Role name
          type: string
        _links:
          $ref: '#/components/schemas/RoleModel__links'
      required:
      - name
    RolesModel:
      example:
        _type: Collection
        total: 5
        count: 5
        _embedded:
          elements:
          - _type: Role
            id: 3
            name: Manager
            _links:
              self:
                href: /api/v3/roles/3
                title: Manager
          - _type: Role
            id: 2
            name: Anonymous
            _links:
              self:
                href: /api/v3/roles/2
                title: Anonymous
          - _type: Role
            id: 5
            name: Reader
            _links:
              self:
                href: /api/v3/roles/5
                title: Reader
          - _type: Role
            id: 4
            name: Member
            _links:
              self:
                href: /api/v3/roles/4
                title: Member
          - _type: Role
            id: 1
            name: Non member
            _links:
              self:
                href: /api/v3/roles/1
                title: Non member
        _links:
          self:
            href: /api/v3/roles
      type: object
    RootModel:
      example:
        _type: Root
        instanceName: OpenProject
        coreVersion: 12.1.0
        _links:
          self:
            href: /api/v3
          configuration:
            href: /api/v3/configuration
          memberships:
            href: /api/v3/memberships
          priorities:
            href: /api/v3/priorities
          relations:
            href: /api/v3/relations
          statuses:
            href: /api/v3/statuses
          time_entries:
            href: /api/v3/time_entries
          types:
            href: /api/v3/types
          user:
            href: /api/v3/users/3
            title: Anakin Skywalker
          userPreferences:
            href: /api/v3/users/3/preferences
          workPackages:
            href: /api/v3/work_packages
      properties:
        _type:
          enum:
          - Root
          type: string
        instanceName:
          description: The name of the OpenProject instance
          type: string
        coreVersion:
          description: |-
            The OpenProject core version number for the instance

            # Conditions

            **Permission** requires admin privileges
          type: string
        _links:
          $ref: '#/components/schemas/RootModel__links'
      required:
      - _links
      - _type
      - instanceName
    SchemaModel:
      properties:
        _type:
          enum:
          - Schema
          type: string
        _dependencies:
          description: A list of dependencies between one property's value and another
            property
          items:
            type: string
          type: array
        _links:
          $ref: '#/components/schemas/SchemaModel__links'
      required:
      - _links
      - _type
    SchemaPropertyModel:
      properties:
        type:
          description: The resource type for this property.
          type: string
        name:
          description: The name of the property.
          type: string
        required:
          description: "Indicates, if the property is required for submitting a request\
            \ of this schema."
          type: boolean
        hasDefault:
          description: "Indicates, if the property has a default."
          type: boolean
        writable:
          description: "Indicates, if the property is writable when sending a request\
            \ of this schema."
          type: boolean
        object:
          description: Additional options for the property.
          type: object
        location:
          default: ""
          description: Defines the json path where the property is located in the
            payload.
          type: string
        _links:
          description: Useful links for this property (e.g. an endpoint to fetch allowed
            values)
          type: object
      required:
      - hasDefault
      - name
      - required
      - type
      - writable
    Schema_For_Global_QueriesModel:
      example:
        _type: Schema
        _dependencies: []
        id:
          type: Integer
          name: ID
          required: true
          hasDefault: false
          writable: false
        name:
          type: String
          name: Name
          required: true
          hasDefault: false
          writable: true
          minLength: 1
          maxLength: 255
        createdAt:
          type: DateTime
          name: Created on
          required: true
          hasDefault: false
          writable: false
        updatedAt:
          type: DateTime
          name: Updated on
          required: true
          hasDefault: false
          writable: false
        user:
          type: User
          name: User
          required: true
          hasDefault: true
          writable: false
        project:
          type: Project
          name: Project
          required: false
          hasDefault: false
          writable: true
          location: _links
          _links: {}
        public:
          type: Boolean
          name: Public
          required: false
          hasDefault: true
          writable: true
        sums:
          type: Boolean
          name: Sums
          required: false
          hasDefault: true
          writable: true
        timelineVisible:
          type: Boolean
          name: Timeline visible
          required: false
          hasDefault: true
          writable: true
          deprecated: true
        timelineZoomLevel:
          type: String
          name: Timeline zoom level
          required: false
          hasDefault: true
          writable: true
          deprecated: true
        timelineLabels:
          type: QueryTimelineLabels
          name: Timeline labels
          required: false
          hasDefault: true
          writable: true
          deprecated: true
        timestamps:
          type: "[]Timestamp"
          name: Timestamps
          required: false
          hasDefault: true
          writable: true
        highlightingMode:
          type: String
          name: Highlighting mode
          required: false
          hasDefault: true
          writable: true
          deprecated: true
        highlightedAttributes:
          type: "[]QueryColumn"
          name: Highlighted attributes
          required: false
          hasDefault: true
          writable: true
          location: _links
          deprecated: true
        showHierarchies:
          type: Boolean
          name: Show hierarchies
          required: false
          hasDefault: true
          writable: true
          deprecated: true
        starred:
          type: Boolean
          name: Starred
          required: false
          hasDefault: true
          writable: true
        columns:
          type: "[]QueryColumn"
          name: Columns
          required: false
          hasDefault: true
          writable: true
          location: _links
          _links: {}
        filters:
          type: "[]QueryFilterInstance"
          name: Filters
          required: false
          writable: true
          hasDefault: true
          location: _links
          _links:
            allowedValuesSchemas:
              href: /api/v3/queries/filter_instance_schemas
        groupBy:
          type: "[]QueryGroupBy"
          name: Group results by
          required: false
          hasDefault: false
          writable: true
          _links: {}
        sortBy:
          type: "[]QuerySortBy"
          name: Sort by
          required: false
          hasDefault: true
          writable: true
          _links: {}
        results:
          type: WorkPackageCollection
          name: Results
          required: false
          hasDefault: false
          writable: false
        _embedded:
          filtersSchemas:
            _type: Collection
            total: 20
            count: 20
            _embedded:
              elements:
              - _type: QueryFilterInstanceSchema
                _dependencies:
                - _type: SchemaDependency
                  "on": operator
                  dependencies:
                    /api/v3/queries/operators/=:
                      values:
                        type: "[]User"
                        name: Values
                        required: true
                        hasDefault: false
                        writable: true
                        _links: {}
                    /api/v3/queries/operators/!:
                      values:
                        type: "[]User"
                        name: Values
                        required: true
                        hasDefault: false
                        writable: true
                        _links: {}
                    /api/v3/queries/operators/!*: {}
                    /api/v3/queries/operators/*: {}
                name:
                  type: String
                  name: Name
                  required: true
                  hasDefault: true
                  writable: false
                filter:
                  type: QueryFilter
                  name: Filter
                  required: true
                  hasDefault: false
                  writable: true
                  _links: {}
                _links:
                  self:
                    href: /api/v3/queries/filter_instance_schemas/assignee
                  filter:
                    href: /api/v3/queries/filters/assignee
                    title: Assignee
              - _type: QueryFilterInstanceSchema
                _dependencies:
                - _type: SchemaDependency
                  "on": operator
                  dependencies:
                    /api/v3/queries/operators/=:
                      values:
                        type: "[]User"
                        name: Values
                        required: true
                        hasDefault: false
                        writable: true
                        _links: {}
                    /api/v3/queries/operators/!:
                      values:
                        type: "[]User"
                        name: Values
                        required: true
                        hasDefault: false
                        writable: true
                        _links: {}
                name:
                  type: String
                  name: Name
                  required: true
                  hasDefault: true
                  writable: false
                filter:
                  type: QueryFilter
                  name: Filter
                  required: true
                  hasDefault: false
                  writable: true
                  _links: {}
                _links:
                  self:
                    href: /api/v3/queries/filter_instance_schemas/author
                  filter:
                    href: /api/v3/queries/filters/author
                    title: Author
            _links:
              self:
                href: /api/v3/queries/filter_instance_schemas
        _links:
          self:
            href: /api/v3/queries/schema
      type: object
    Schema_For_Project_QueriesModel:
      example:
        _type: Schema
        _dependencies: []
        id:
          type: Integer
          name: ID
          required: true
          hasDefault: false
          writable: false
        name:
          type: String
          name: Name
          required: true
          hasDefault: false
          writable: true
          minLength: 1
          maxLength: 255
        createdAt:
          type: DateTime
          name: Created on
          required: true
          hasDefault: false
          writable: false
        updatedAt:
          type: DateTime
          name: Updated on
          required: true
          hasDefault: false
          writable: false
        user:
          type: User
          name: User
          required: true
          hasDefault: true
          writable: false
        project:
          type: Project
          name: Project
          required: false
          hasDefault: false
          writable: true
          _links: {}
        public:
          type: Boolean
          name: Public
          required: false
          hasDefault: true
          writable: true
        sums:
          type: Boolean
          name: Sums
          required: false
          hasDefault: true
          writable: true
        timelineVisible:
          type: Boolean
          name: Timeline visible
          required: false
          hasDefault: true
          writable: true
        timelineZoomLevel:
          type: String
          name: Timeline zoom level
          required: false
          hasDefault: true
          writable: true
        showHierarchies:
          type: Boolean
          name: Show hierarchies
          required: false
          hasDefault: true
          writable: true
        starred:
          type: Boolean
          name: Starred
          required: false
          hasDefault: true
          writable: true
        columns:
          type: "[]QueryColumn"
          name: Columns
          required: false
          hasDefault: true
          writable: true
          _links: {}
        filters:
          type: "[]QueryFilterInstance"
          name: Filters
          required: false
          writable: true
          hasDefault: true
          _links:
            allowedValuesSchemas:
              href: /api/v3/projects/42/queries/filter_instance_schemas
        groupBy:
          type: "[]QueryGroupBy"
          name: Group results by
          required: false
          hasDefault: false
          writable: true
          _links: {}
        sortBy:
          type: "[]QuerySortBy"
          name: Sort by
          required: false
          hasDefault: true
          writable: true
          _links: {}
        results:
          type: WorkPackageCollection
          name: Results
          required: false
          hasDefault: false
          writable: false
        _embedded:
          filtersSchemas:
            _type: Collection
            total: 20
            count: 20
            _embedded:
              elements:
              - _type: QueryFilterInstanceSchema
                _dependencies:
                - _type: SchemaDependency
                  "on": operator
                  dependencies:
                    /api/v3/queries/operators/=:
                      values:
                        type: "[]User"
                        name: Values
                        required: true
                        hasDefault: false
                        writable: true
                        _links: {}
                    /api/v3/queries/operators/!:
                      values:
                        type: "[]User"
                        name: Values
                        required: true
                        hasDefault: false
                        writable: true
                        _links: {}
                    /api/v3/queries/operators/!*: {}
                    /api/v3/queries/operators/*: {}
                name:
                  type: String
                  name: Name
                  required: true
                  hasDefault: true
                  writable: false
                filter:
                  type: QueryFilter
                  name: Filter
                  required: true
                  hasDefault: false
                  writable: true
                  _links: {}
                _links:
                  self:
                    href: /api/v3/queries/filter_instance_schemas/assignee
                  filter:
                    href: /api/v3/queries/filters/assignee
                    title: Assignee
              - _type: QueryFilterInstanceSchema
                _dependencies:
                - _type: SchemaDependency
                  "on": operator
                  dependencies:
                    /api/v3/queries/operators/=:
                      values:
                        type: "[]User"
                        name: Values
                        required: true
                        hasDefault: false
                        writable: true
                        _links: {}
                    /api/v3/queries/operators/!:
                      values:
                        type: "[]User"
                        name: Values
                        required: true
                        hasDefault: false
                        writable: true
                        _links: {}
                name:
                  type: String
                  name: Name
                  required: true
                  hasDefault: true
                  writable: false
                filter:
                  type: QueryFilter
                  name: Filter
                  required: true
                  hasDefault: false
                  writable: true
                  _links: {}
                _links:
                  self:
                    href: /api/v3/queries/filter_instance_schemas/author
                  filter:
                    href: /api/v3/queries/filters/author
                    title: Author
            _links:
              self:
                href: /api/v3/projects/42/queries/filter_instance_schemas
        _links:
          self:
            href: /api/v3/projects/42/queries/schema
      type: object
    Star_QueryModel:
      example:
        _type: Query
        id: 9
        name: fdsfdsfdsf
        createdAt: 2015-03-20T12:56:56.085Z
        updatedAt: 2015-05-20T18:16:53.619Z
        filters:
        - _type: StatusQueryFilter
          name: Status
          _links:
            filter:
              href: /api/v3/queries/filters/status
              title: Status
            operator:
              href: /api/v3/queries/operators/o
              title: open
            schema:
              href: /api/v3/queries/filter_instance_schemas/status
            values: []
        - _type: DueDateQueryFilter
          name: Finish date
          values:
          - "1"
          _links:
            filter:
              href: /api/v3/queries/filters/dueDate
              title: Finish date
            operator:
              href: /api/v3/queries/operators/<t+
              title: in less than
            schema:
              href: /api/v3/queries/filter_instance_schemas/dueDate
        public: false
        sums: false
        starred: true
        _embedded:
          results:
            _type: WorkPackageCollection
            total: 234
            count: 30
            pageSize: 2
            offset: 1
            _embedded:
              elements:
              - <--- shortened for brevity --->
            _links:
              self:
                href: /api/v3/projects/3/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=1&pageSize=2&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D
              jumpTo:
                href: /api/v3/projects/3/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=%7Boffset%7D&pageSize=2&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D
                templated: true
              changeSize:
                href: /api/v3/projects/3/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=1&pageSize=%7Bsize%7D&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D
                templated: true
              createWorkPackage:
                href: /api/v3/work_packages/form
                method: post
              createWorkPackageImmediate:
                href: /api/v3/work_packages
                method: post
        _links:
          self:
            href: /api/v3/queries/9
            title: fdsfdsfdsf
          results:
            href: /api/v3/projects/3/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=1&pageSize=2&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D
          columns:
          - href: /api/v3/queries/columns/id
            title: ID
          - href: /api/v3/queries/columns/subject
            title: Subject
          - href: /api/v3/queries/columns/type
            title: Type
          - href: /api/v3/queries/columns/status
            title: Status
          - href: /api/v3/queries/columns/priority
            title: Priority
          - href: /api/v3/queries/columns/assignee
            title: Assignee
          - href: /api/v3/queries/columns/updated_at
            title: Updated on
          groupBy:
            href: null
            title: null
          sortBy:
          - href: /api/v3/queries/sort_bys/parent-desc
            title: Parent (Descending)
          user:
            href: /api/v3/users/1
            title: OpenProject Admin
          project:
            href: /api/v3/projects/3
            title: copy
      type: object
    StatusCollectionModel:
      allOf:
      - $ref: '#/components/schemas/CollectionModel'
      - properties:
          _links:
            $ref: '#/components/schemas/StatusCollectionModel_allOf__links'
          _embedded:
            $ref: '#/components/schemas/StatusCollectionModel_allOf__embedded'
        required:
        - _embedded
        - _links
    StatusModel:
      example:
        _links:
          self:
            href: /api/v3/statuses/1
        _type: Status
        id: 1
        name: New
        position: 1
        isDefault: true
        isClosed: false
        defaultDoneRatio: 0
      properties:
        _type:
          enum:
          - Status
          type: string
        id:
          description: Status id
          minimum: 1
          readOnly: true
          type: integer
        name:
          description: Status name
          readOnly: true
          type: string
        position:
          description: Sort index of the status
          readOnly: true
          type: integer
        isDefault:
          readOnly: true
          type: boolean
        isClosed:
          description: are tickets of this status considered closed?
          readOnly: true
          type: boolean
        isReadonly:
          description: are tickets of this status read only?
          readOnly: true
          type: boolean
        defaultDoneRatio:
          description: The percentageDone being applied when changing to this status
          maximum: 100
          type: integer
        _links:
          $ref: '#/components/schemas/StatusModel__links'
    StorageCollectionModel:
      allOf:
      - $ref: '#/components/schemas/CollectionModel'
      - properties:
          _links:
            $ref: '#/components/schemas/StorageCollectionModel_allOf__links'
          _embedded:
            $ref: '#/components/schemas/StorageCollectionModel_allOf__embedded'
        required:
        - _embedded
        - _links
    StorageFileModel:
      allOf:
      - $ref: '#/components/schemas/FileLinkOriginDataModel'
      - properties:
          _type:
            enum:
            - StorageFile
            type: string
          location:
            description: Location identification for file in storage
            type: string
          _links:
            $ref: '#/components/schemas/StorageFileModel_allOf__links'
        required:
        - _links
        - _type
        - location
      example:
        id: 42
        name: readme.md
        _type: StorageFile
        location: /readme.md
        _links:
          self:
            href: urn:openproject-org:api:v3:storages:storage_file:no_link_provided
    StorageFilesModel:
      example:
        _type: StorageFiles
        files:
        - id: 42
          name: readme.md
          _type: StorageFile
          location: /readme.md
          mimeType: text/markdown
          size: 4096
          createdAt: 2021-12-19T09:42:10.170Z
          lastModifiedAt: 2021-12-20T14:00:13.987Z
          createdByName: Luke Skywalker
          lastModifiedByName: Anakin Skywalker
          _links:
            self:
              href: urn:openproject-org:api:v3:storages:storage_file:no_link_provided
        - id: 43
          name: readme.pdf
          _type: StorageFile
          location: /readme.pdf
          mimeType: application/pdf
          size: 2048
          createdAt: 2021-12-19T09:42:10.170Z
          lastModifiedAt: 2021-12-20T14:00:13.987Z
          createdByName: Luke Skywalker
          lastModifiedByName: Anakin Skywalker
          _links:
            self:
              href: urn:openproject-org:api:v3:storages:storage_file:no_link_provided
        parent:
          id: 41
          name: /
          location: /
          mimeType: application/x-op-directory
          size: 6144
          createdAt: 2021-12-20T09:42:10.170Z
          lastModifiedAt: 2021-12-21T14:00:13.987Z
          createdByName: Luke Skywalker
          lastModifiedByName: Anakin Skywalker
          _links:
            self:
              href: urn:openproject-org:api:v3:storages:storage_file:no_link_provided
        ancestors: []
        _links:
          self:
            href: urn:openproject-org:api:v3:storages:storage_file:no_link_provided
      properties:
        _type:
          enum:
          - StorageFiles
          type: string
        files:
          description: List of files provided by the selected storage.
          items:
            $ref: '#/components/schemas/StorageFileModel'
          type: array
        parent:
          $ref: '#/components/schemas/StorageFilesModel_parent'
        ancestors:
          description: "List of ancestors of the parent directory. Can be empty, if\
            \ parent directory was root directory."
          items:
            $ref: '#/components/schemas/StorageFileModel'
          type: array
        _links:
          $ref: '#/components/schemas/StorageFileModel_allOf__links'
      required:
      - _links
      - _type
      - ancestors
      - files
      - parent
    StorageFileUploadPreparationModel:
      example:
        parent: parent
        fileName: fileName
        projectId: 1
      properties:
        projectId:
          description: "The project identifier, from where a user starts uploading\
            \ a file."
          minimum: 1
          type: integer
        fileName:
          description: The file name.
          type: string
        parent:
          description: |-
            The directory to which the file is to be uploaded. For root directories, the value `/` must
            be provided.
          type: string
      required:
      - fileName
      - parent
      - projectId
    StorageFileUploadLinkModel:
      properties:
        _type:
          enum:
          - UploadLink
          type: string
        _links:
          $ref: '#/components/schemas/StorageFileUploadLinkModel__links'
      required:
      - _links
      - _type
    StorageReadModel:
      example:
        id: 1337
        _type: Storage
        name: It's no moon
        hasApplicationPassword: true
        createdAt: 2021-12-20T13:37:00.211Z
        updatedAt: 2021-12-20T13:37:00.211Z
        _links:
          self:
            href: /api/v3/storages/1337
            title: It's no moon
          type:
            href: urn:openproject-org:api:v3:storages:nextcloud
            title: Nextcloud
          origin:
            href: https://nextcloud.deathstar.rocks/
          open:
            href: https://nextcloud.deathstar.rocks/apps/files
          authorizationState:
            href: urn:openproject-org:api:v3:storages:authorization:FailedAuthorization
            title: Failed Authorization
          authorize:
            href: https://nextcloud.deathstar.rocks/authorize/
            title: Authorize
          oauthApplication:
            href: /api/v3/oauth_application/42
            title: It's no moon (Nextcloud)
          oauthClientCredentials:
            href: /api/v3/oauth_client_credentials/42
      properties:
        id:
          description: Storage id
          type: integer
        _type:
          enum:
          - Storage
          type: string
        name:
          description: Storage name
          type: string
        hasApplicationPassword:
          description: |-
            Whether the storage has the application password to use for the Nextcloud storage.

            Ignored if the provider type is not Nextcloud
          type: boolean
        createdAt:
          description: Time of creation
          format: date-time
          type: string
        updatedAt:
          description: Time of the most recent change to the storage
          format: date-time
          type: string
        _embedded:
          $ref: '#/components/schemas/StorageReadModel__embedded'
        _links:
          $ref: '#/components/schemas/StorageReadModel__links'
      required:
      - _links
      - _type
      - id
      - name
    StorageWriteModel:
      example:
        name: Coruscant
        applicationPassword: qJ_VLNReW@sd-Edz2hyC
        _links:
          origin:
            href: https://nextcloud.deathstar.rocks
          type:
            href: urn:openproject-org:api:v3:storages:Nextcloud
      properties:
        name:
          description: "Storage name, if not provided, falls back to a default."
          type: string
        applicationPassword:
          description: |-
            The application password to use for the Nextcloud storage. Ignored if the provider type is not Nextcloud.

            If a string is provided, the password is set and automatic management is enabled for the storage.
            If null is provided, the password is unset and automatic management is disabled for the storage.
          type: string
          nullable: true
        _links:
          $ref: '#/components/schemas/StorageWriteModel__links'
    TimeEntryActivityModel:
      properties:
        _type:
          enum:
          - TimeEntriesActivity
          type: string
        id:
          description: Time entry id
          minimum: 1
          type: integer
        name:
          description: The human readable name chosen for this activity
          type: string
        position:
          description: The rank the activity has in a list of activities
          type: integer
        default:
          description: Flag to signal whether this activity is the default activity
          type: boolean
        _embedded:
          $ref: '#/components/schemas/TimeEntryActivityModel__embedded'
        _links:
          $ref: '#/components/schemas/TimeEntryActivityModel__links'
      required:
      - _embedded
      - _links
      - _type
      - default
      - id
      - name
      - position
    TimeEntryCollectionModel:
      allOf:
      - $ref: '#/components/schemas/CollectionModel'
      - properties:
          _links:
            $ref: '#/components/schemas/TimeEntryCollectionModel_allOf__links'
          _embedded:
            $ref: '#/components/schemas/TimeEntryCollectionModel_allOf__embedded'
        required:
        - _embedded
        - _links
    TimeEntryModel:
      properties:
        id:
          description: The id of the time entry
          minimum: 1
          type: integer
        comment:
          $ref: '#/components/schemas/TimeEntryModel_comment'
        spentOn:
          description: The date the expenditure is booked for
          format: date
          type: string
        hours:
          description: The time quantifying the expenditure
          format: duration
          type: string
        ongoing:
          description: Whether the time entry is actively tracking time
          type: boolean
        createdAt:
          description: The time the time entry was created
          format: date-time
          type: string
        updatedAt:
          description: The time the time entry was last updated
          format: date-time
          type: string
        _links:
          $ref: '#/components/schemas/TimeEntryModel__links'
    TypeModel:
      example:
        _links:
          self:
            href: /api/v3/types/1
        _type: Type
        id: 1
        name: Bug
        color: '#ff0000'
        position: 1
        isDefault: true
        isMilestone: false
        createdAt: 2014-05-21T08:51:20.624Z
        updatedAt: 2014-05-21T08:51:20.624Z
      properties:
        id:
          description: Type id
          readOnly: true
          type: integer
        name:
          description: Type name
          readOnly: true
          type: string
        color:
          description: The color used to represent this type
          readOnly: true
          type: string
        position:
          description: Sort index of the type
          readOnly: true
          type: integer
        isDefault:
          description: Is this type active by default in new projects?
          readOnly: true
          type: boolean
        isMilestone:
          description: Do work packages of this type represent a milestone?
          readOnly: true
          type: boolean
        createdAt:
          description: Time of creation
          format: date-time
          readOnly: true
          type: string
        updatedAt:
          description: Time of the most recent change to the user
          format: date-time
          type: string
        _links:
          $ref: '#/components/schemas/TypeModel__links'
    TypesModel:
      example:
        _links:
          self:
            href: /api/v3/types
        total: 2
        count: 2
        _type: Collection
        _embedded:
          elements:
          - _links:
              self:
                href: /api/v3/types/1
            _type: Type
            id: 1
            name: Bug
            color: '#ff0000'
            position: 1
            isDefault: true
            isMilestone: false
            createdAt: 2014-05-21T08:51:20.429Z
            updatedAt: 2014-05-21T08:51:20.429Z
          - _links:
              self:
                href: /api/v3/types/2
            _type: Type
            id: 2
            name: Feature
            color: '#888'
            position: 2
            isDefault: false
            isMilestone: false
            createdAt: 2014-05-21T08:51:20.429Z
            updatedAt: 2014-05-21T08:51:20.429Z
      type: object
    Types_by_ProjectModel:
      allOf:
      - $ref: '#/components/schemas/CollectionModel'
      - properties:
          _links:
            $ref: '#/components/schemas/Types_by_ProjectModel_allOf__links'
          _embedded:
            $ref: '#/components/schemas/Types_by_ProjectModel_allOf__embedded'
        required:
        - _embedded
        - _links
    Unstar_QueryModel:
      example:
        _type: Query
        id: 9
        name: fdsfdsfdsf
        createdAt: 2015-03-20T12:56:56.257Z
        updatedAt: 2015-05-20T18:16:53.953Z
        filters:
        - _type: StatusQueryFilter
          name: Status
          _links:
            filter:
              href: /api/v3/queries/filters/status
              title: Status
            operator:
              href: /api/v3/queries/operators/o
              title: open
            schema:
              href: /api/v3/queries/filter_instance_schemas/status
            values: []
        - _type: DueDateQueryFilter
          name: Finish date
          values:
          - "1"
          _links:
            filter:
              href: /api/v3/queries/filters/dueDate
              title: Finish date
            operator:
              href: /api/v3/queries/operators/<t+
              title: in less than
            schema:
              href: /api/v3/queries/filter_instance_schemas/dueDate
        public: false
        sums: false
        starred: false
        _embedded:
          results:
            _type: WorkPackageCollection
            total: 234
            count: 30
            pageSize: 2
            offset: 1
            _embedded:
              elements:
              - <--- shortened for brevity --->
            _links:
              self:
                href: /api/v3/projects/3/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=1&pageSize=2&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D
              jumpTo:
                href: /api/v3/projects/3/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=%7Boffset%7D&pageSize=2&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D
                templated: true
              changeSize:
                href: /api/v3/projects/3/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=1&pageSize=%7Bsize%7D&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D
                templated: true
              createWorkPackage:
                href: /api/v3/work_packages/form
                method: post
              createWorkPackageImmediate:
                href: /api/v3/work_packages
                method: post
        _links:
          self:
            href: /api/v3/queries/9
            title: fdsfdsfdsf
          results:
            href: /api/v3/projects/3/work_packages?filters=%5B%7B%22status%22%3A%7B%22operator%22%3A%22o%22%2C%22values%22%3A%5B%5D%7D%7D%2C%7B%22dueDate%22%3A%7B%22operator%22%3A%22%3Ct%2B%22%2C%22values%22%3A%5B%221%22%5D%7D%7D%5D&offset=1&pageSize=2&sortBy=%5B%5B%22parent%22%2C%22desc%22%5D%5D
          columns:
          - href: /api/v3/queries/columns/id
            title: ID
          - href: /api/v3/queries/columns/subject
            title: Subject
          - href: /api/v3/queries/columns/type
            title: Type
          - href: /api/v3/queries/columns/status
            title: Status
          - href: /api/v3/queries/columns/priority
            title: Priority
          - href: /api/v3/queries/columns/assignee
            title: Assignee
          - href: /api/v3/queries/columns/updated_at
            title: Updated on
          groupBy:
            href: null
            title: null
          sortBy:
          - href: /api/v3/queries/sort_bys/parent-desc
            title: Parent (Descending)
          user:
            href: /api/v3/users/1
            title: OpenProject Admin
          project:
            href: /api/v3/projects/3
            title: copy
      type: object
    UserCollectionModel:
      allOf:
      - $ref: '#/components/schemas/CollectionModel'
      - properties:
          _links:
            $ref: '#/components/schemas/UserCollectionModel_allOf__links'
          _embedded:
            $ref: '#/components/schemas/UserCollectionModel_allOf__embedded'
        required:
        - _embedded
        - _links
      example:
        _type: Collection
        total: 2
        count: 2
        _links:
          self:
            href: /api/v3/users
        _embedded:
          elements:
          - _hint: User resource shortened for brevity
            _type: User
            id: 1337
          - _hint: User resource shortened for brevity
            _type: User
            id: 1338
    UserCreateModel:
      example:
        login: j.sheppard
        password: idestroyedsouvereign
        firstName: John
        lastName: Sheppard
        email: shep@mail.com
        admin: true
        status: active
        language: en
      properties:
        admin:
          type: boolean
        email:
          maxLength: 60
          type: string
        login:
          maxLength: 256
          type: string
        password:
          description: |-
            The users password.

            *Conditions:*

            Only writable on creation, not on update.
          type: string
        firstName:
          maxLength: 30
          type: string
        lastName:
          maxLength: 30
          type: string
        status:
          description: |-
            The current activation status of the user.

            *Conditions:*

            Only writable on creation, not on update.
          type: string
        language:
          type: string
      required:
      - admin
      - email
      - firstName
      - language
      - lastName
      - login
    UserModel:
      allOf:
      - $ref: '#/components/schemas/PrincipalModel'
      - properties:
          _type:
            enum:
            - User
            type: string
          avatar:
            description: URL to user's avatar
            format: uri
            type: string
          login:
            description: |-
              The user's login name

              # Conditions

              - User is self, or `create_user` or `manage_user` permission globally
            maxLength: 256
            type: string
          firstName:
            description: |-
              The user's first name

              # Conditions

              - User is self, or `create_user` or `manage_user` permission globally
            maxLength: 30
            type: string
          lastName:
            description: |-
              The user's last name

              # Conditions

              - User is self, or `create_user` or `manage_user` permission globally
            maxLength: 30
            type: string
          email:
            description: |-
              The user's email address

              # Conditions

              - E-Mail address not hidden
              - User is not a new record
              - User is self, or `create_user` or `manage_user` permission globally
            maxLength: 60
            type: string
          admin:
            description: |-
              Flag indicating whether or not the user is an admin

              # Conditions

              - `admin`
            type: boolean
          status:
            description: |-
              The current activation status of the user.

              # Conditions

              - User is self, or `create_user` or `manage_user` permission globally
            type: string
          language:
            description: |-
              User's language | ISO 639-1 format

              # Conditions

              - User is self, or `create_user` or `manage_user` permission globally
            type: string
          identityUrl:
            description: |-
              User's identity_url for OmniAuth authentication.

              # Conditions

              - User is self, or `create_user` or `manage_user` permission globally
            type: string
            nullable: true
          createdAt:
            description: Time of creation
            format: date-time
            type: string
          updatedAt:
            description: Time of the most recent change to the user
            format: date-time
            type: string
          _links:
            $ref: '#/components/schemas/UserModel_allOf__links'
        required:
        - _type
        - avatar
    UserPreferencesModel:
      example:
        _links:
          self:
            href: /api/v3/my_preferences
          user:
            href: /api/v3/users/1
            title: John Sheppard
          updateImmediately:
            href: /api/v3/users/3/preferences
            method: patch
        _type: UserPreferences
        commentSortDescending: true
        hideMail: false
        timeZone: Europe/Berlin
        warnOnLeavingUnsaved: true
        notifications:
        - watched: false
          involved: true
          mentioned: false
          shared: true
          newsAdded: "false,"
          newsCommented: false
          documentAdded: false
          forumMessages: false
          wikiPageAdded: false
          wikiPageUpdated: false
          membershipAdded: false
          membershipUpdated: false
          workPackageCommented: false
          workPackageProcessed: false
          workPackagePrioritized: false
          workPackageScheduled: false
          _links:
            project:
              href: null
      properties:
        _links:
          $ref: '#/components/schemas/UserPreferencesModel__links'
    ValuesPropertyModel:
      properties:
        _type:
          description: The key of the key - value pair represented by the Values::Property
          type: string
        value:
          description: The value of the key - value pair represented by the Values::Property
          type: string
        _links:
          $ref: '#/components/schemas/ValuesPropertyModel__links'
      required:
      - _links
      - _type
      - value
    VersionModel:
      example:
        _links:
          self:
            href: /api/v3/versions/11
          update:
            href: /api/v3/versions/11/form
            method: POST
          updateImmediately:
            href: /api/v3/versions/11
            method: PATCH
          definingProject:
            href: /api/v3/projects/11
          availableInProjects:
            href: /api/v3/versions/11/projects
          customField4:
            href: /api/v3/custom_options/5
            title: Custom field option
        _type: Version
        id: 11
        name: v3.0 Alpha
        description:
          format: plain
          raw: This version has a description
          html: This version has a description
        startDate: 2014-11-20
        endDate: null
        status: open
        sharing: system
        customField14: "1234567890"
      properties:
        id:
          description: Version id
          readOnly: true
          type: integer
        name:
          description: Version name
          type: string
        description:
          $ref: '#/components/schemas/ActivityModel_comment'
        startDate:
          format: date
          type: string
        endDate:
          format: date
          type: string
        status:
          description: The current status of the version
          type: string
        sharing:
          description: The current status of the version
          type: string
        createdAt:
          description: Time of creation
          format: date-time
          readOnly: true
          type: string
        updatedAt:
          description: Time of the most recent change to the version
          format: date-time
          readOnly: true
          type: string
        _links:
          $ref: '#/components/schemas/VersionModel__links'
      required:
      - createdAt
      - name
      - sharing
      - status
      - updatedAt
    Version_schemaModel:
      example:
        _type: Schema
        _dependencies: []
        id:
          type: Integer
          name: ID
          required: true
          hasDefault: false
          writable: false
        name:
          type: String
          name: Name
          required: true
          hasDefault: false
          writable: true
          minLength: 1
          maxLength: 60
        description:
          type: Formattable
          name: Description
          required: false
          hasDefault: false
          writable: true
        startDate:
          type: Date
          name: Start date
          required: false
          hasDefault: false
          writable: true
        endDate:
          type: Date
          name: Finish date
          required: false
          hasDefault: false
          writable: false
        status:
          type: String
          name: Status
          required: true
          hasDefault: false
          writable: true
          visibility: default
          _links: {}
        sharing:
          type: String
          name: Sharing
          required: true
          hasDefault: false
          writable: true
          visibility: default
          _links: {}
        createdAt:
          type: DateTime
          name: Created on
          required: true
          hasDefault: false
          writable: false
        updatedAt:
          type: DateTime
          name: Updated on
          required: true
          hasDefault: false
          writable: false
        definingProject:
          type: Project
          name: Project
          required: true
          hasDefault: false
          writable: true
          _links: {}
        customField14:
          type: String
          name: text CF
          required: false
          hasDefault: false
          writable: true
          visibility: default
        customField40:
          type: CustomOption
          name: List CF
          required: false
          hasDefault: false
          writable: true
          location: _links
          visibility: default
          _links: {}
        _links:
          self:
            href: /api/v3/versions/schema
      type: object
    VersionsModel:
      example:
        _links:
          self:
            href: /api/v3/versions
        total: 3
        count: 3
        _type: Collection
        _embedded:
          elements:
          - _links:
              self:
                href: /api/v3/versions/11
              definingProject:
                href: /api/v3/projects/12
              availableInProjects:
                href: /api/v3/versions/11/projects
            _type: Version
            id: 11
            name: v3.0 Alpha
            description:
              format: plain
              raw: This version has a description
              html: This version has a description
            startDate: 2014-11-20
            endDate: null
            status: Open
          - _links:
              self:
                href: /api/v3/versions/12
              definingProject:
                href: /api/v3/projects/11
              availableInProjects:
                href: /api/v3/versions/12/projects
            _type: Version
            id: 12
            name: v2.0
            description:
              format: plain
              raw: ""
              html: ""
            startDate: null
            endDate: null
            status: Closed
          - _links:
              self:
                href: /api/v3/versions/10
              definingProject:
                href: /api/v3/projects/13
              availableInProjects:
                href: /api/v3/versions/13/projects
            _type: Version
            id: 10
            name: v1.0
            description:
              format: plain
              raw: ""
              html: ""
            startDate: null
            endDate: null
            status: Open
      type: object
    Versions_by_ProjectModel:
      allOf:
      - $ref: '#/components/schemas/CollectionModel'
      - properties:
          _links:
            $ref: '#/components/schemas/Versions_by_ProjectModel_allOf__links'
          _embedded:
            $ref: '#/components/schemas/Versions_by_ProjectModel_allOf__embedded'
        required:
        - _embedded
        - _links
    View_actionModel:
      example:
        _links:
          self:
            href: /api/v3/actions/work_packages/create
            title: Add work package
        _type: Action
        id: work_packages/create
        name: Add work package
        description: "Creating a work package within a project including the uploading\
          \ of attachments. Some attributes might not be selected, e.g version which\
          \ requires a second permission"
        modules:
        - work_packages
      type: object
    View_capabilitiesModel:
      example:
        _links:
          self:
            href: /api/v3/capabilities/work_packages/create/p123-567
          action:
            href: /api/v3/actions/work_packages/create
            title: Add work package
          context:
            href: /api/v3/projects/123
            title: A project
          principal:
            href: /api/v3/users/567
            title: Some user
        _type: Capability
        id: work_packages/create/p123-567
      type: object
    View_global_contextModel:
      example:
        _links:
          self:
            href: /api/v3/capabilities/context/global
        _type: CapabilityContext::Global
        id: global
      type: object
    View_project_statusModel:
      example:
        _type: ProjectStatus
        id: on_track
        name: On track
        _links:
          self:
            href: /api/v3/project_statuses/on_track
      type: object
    View_time_entry_schemaModel:
      example:
        _type: Schema
        _dependencies: []
        id:
          type: Integer
          name: ID
          required: true
          hasDefault: false
          writable: false
          options: {}
        createdAt:
          type: DateTime
          name: Created on
          required: true
          hasDefault: false
          writable: false
          options: {}
        updatedAt:
          type: DateTime
          name: Updated on
          required: true
          hasDefault: false
          writable: false
          options: {}
        spentOn:
          type: Date
          name: Date
          required: true
          hasDefault: false
          writable: true
          options: {}
        hours:
          type: Duration
          name: Hours
          required: true
          hasDefault: false
          writable: true
          options: {}
        user:
          type: User
          name: User
          required: true
          hasDefault: false
          writable: false
          options: {}
        workPackage:
          type: WorkPackage
          name: Work package
          required: false
          hasDefault: false
          writable: true
          location: _links
          _links: {}
        project:
          type: Project
          name: Project
          required: false
          hasDefault: false
          writable: true
          location: _links
          _links: {}
        activity:
          type: TimeEntriesActivity
          name: Activity
          required: true
          hasDefault: true
          writable: true
          location: _links
          _links: {}
        customField29:
          type: String
          name: sfsdfsdfsdfsdfdsf
          required: false
          hasDefault: false
          writable: true
          options:
            rtl: null
        _links:
          self:
            href: /api/v3/time_entries/schema
      type: object
    View_user_schemaModel:
      example:
        _type: Schema
        _dependencies: []
        id:
          type: Integer
          name: ID
          required: true
          hasDefault: false
          writable: false
          options: {}
        login:
          type: String
          name: Username
          required: true
          hasDefault: false
          writable: true
          minLength: 1
          maxLength: 255
          options: {}
        admin:
          type: Boolean
          name: Administrator
          required: false
          hasDefault: false
          writable: true
          options: {}
        mail:
          type: String
          name: Email
          required: true
          hasDefault: false
          writable: true
          minLength: 1
          maxLength: 255
          options: {}
        firstName:
          type: String
          name: First name
          required: true
          hasDefault: false
          writable: false
          minLength: 1
          maxLength: 255
          options: {}
        lastName:
          type: String
          name: Last name
          required: true
          hasDefault: false
          writable: false
          minLength: 1
          maxLength: 255
          options: {}
        avatar:
          type: String
          name: Avatar
          required: false
          hasDefault: false
          writable: false
          options: {}
        status:
          type: String
          name: Status
          required: false
          hasDefault: false
          writable: true
          options: {}
        identityUrl:
          type: String
          name: Identity url
          required: false
          hasDefault: false
          writable: true
          options: {}
        language:
          type: String
          name: Language
          required: false
          hasDefault: false
          writable: true
          options: {}
        password:
          type: Password
          name: Password
          required: false
          hasDefault: false
          writable: false
          options: {}
        createdAt:
          type: DateTime
          name: Created on
          required: true
          hasDefault: false
          writable: false
          options: {}
        updatedAt:
          type: DateTime
          name: Updated on
          required: true
          hasDefault: false
          writable: false
          options: {}
        customField1:
          type: String
          name: User String CF
          required: false
          hasDefault: false
          writable: true
        customField2:
          type: CustomOption
          name: User List cf
          required: false
          hasDefault: false
          writable: true
          location: _links
        _links:
          self:
            href: /api/v3/users/schema
      type: object
    WatchersModel:
      allOf:
      - $ref: '#/components/schemas/CollectionModel'
      - properties:
          _links:
            $ref: '#/components/schemas/WatchersModel_allOf__links'
          _embedded:
            $ref: '#/components/schemas/WatchersModel_allOf__embedded'
        required:
        - _embedded
        - _links
      example:
        _links:
          self:
            href: /api/v3/work_packages/14/watchers
        total: 2
        count: 2
        _type: Collection
        _embedded:
          elements:
          - _type: User
            _links:
              self:
                href: /api/v3/users/1
                title: John Sheppard - j.sheppard
              showUser:
                href: /users/1
                type: text/html
              lock:
                href: /api/v3/users/1/lock
                title: Set lock on j.sheppard
                method: POST
              delete:
                href: /api/v3/users/1
                title: Delete j.sheppard
                method: DELETE
            id: 1
            login: j.sheppard
            firstName: John
            lastName: Sheppard
            mail: shep@mail.com
            avatar: https://example.org/users/1/avatar
            status: active
            createdAt: 2014-05-21T08:51:20.396Z
            updatedAt: 2014-05-21T08:51:20.396Z
          - _type: User
            _links:
              self:
                href: /api/v3/users/2
                title: Jim Sheppard - j.sheppard2
              lock:
                href: /api/v3/users/2/lock
                title: Set lock on j.sheppard2
                method: POST
              delete:
                href: /api/v3/users/2
                title: Delete j.sheppard2
                method: DELETE
            id: 2
            login: j.sheppard2
            firstName: Jim
            lastName: Sheppard
            mail: shep@mail.net
            avatar: https://example.org/users/1/avatar
            status: active
            createdAt: 2014-05-21T08:51:20.396Z
            updatedAt: 2014-05-21T08:51:20.396Z
    WeekDayCollectionModel:
      allOf:
      - $ref: '#/components/schemas/CollectionModel'
      - properties:
          _links:
            $ref: '#/components/schemas/WeekDayCollectionModel_allOf__links'
          _embedded:
            $ref: '#/components/schemas/WeekDayCollectionModel_allOf__embedded'
        required:
        - _embedded
        - _links
      example:
        _type: Collection
        total: 7
        count: 7
        _links:
          self:
            href: /api/v3/days/week
        _embedded:
          elements:
          - _type: WeekDay
            day: 1
            name: Monday
            working: true
            _links:
              self:
                href: /api/v3/days/week/1
                title: Monday
          - _type: WeekDay
            day: 2
            name: Tuesday
            working: true
            _links:
              self:
                href: /api/v3/days/week/2
                title: Tuesday
          - _type: WeekDay
            day: 3
            name: Wednesday
            working: true
            _links:
              self:
                href: /api/v3/days/week/3
                title: Wednesday
          - _type: WeekDay
            day: 4
            name: Thursday
            working: true
            _links:
              self:
                href: /api/v3/days/week/4
                title: Thursday
          - _type: WeekDay
            day: 5
            name: Friday
            working: true
            _links:
              self:
                href: /api/v3/days/week/5
                title: Friday
          - _type: WeekDay
            day: 6
            name: Saturday
            working: false
            _links:
              self:
                href: /api/v3/days/week/6
                title: Saturday
          - _type: WeekDay
            day: 7
            name: Sunday
            working: false
            _links:
              self:
                href: /api/v3/days/week/7
                title: Sunday
    WeekDayCollectionWriteModel:
      example:
        _type: Collection
        _embedded:
          elements:
          - _type: WeekDay
            working: true
            _links:
              self:
                href: /api/v3/days/week/1
          - _type: WeekDay
            working: true
            _links:
              self:
                href: /api/v3/days/week/2
          - _type: WeekDay
            working: true
            _links:
              self:
                href: /api/v3/days/week/4
          - _type: WeekDay
            working: false
            _links:
              self:
                href: /api/v3/days/week/6
          - _type: WeekDay
            working: false
            _links:
              self:
                href: /api/v3/days/week/7
      properties:
        _type:
          enum:
          - Collection
          type: string
        _embedded:
          $ref: '#/components/schemas/WeekDayCollectionWriteModel__embedded'
      required:
      - _embedded
      - _type
    WeekDayModel:
      example:
        _type: WeekDay
        day: 5
        name: Friday
        working: false
        _links:
          self:
            href: /api/v3/day/week/5
            title: Friday
      properties:
        _type:
          enum:
          - WeekDay
          type: string
        day:
          description: The week day from 1 to 7. 1 is Monday. 7 is Sunday.
          maximum: 7
          minimum: 1
          readOnly: true
          type: integer
        name:
          description: The week day name.
          type: string
        working:
          description: "`true` for a working week day, `false` otherwise."
          type: boolean
        _links:
          allOf:
          - $ref: '#/components/schemas/WeekDaySelfLinkModel'
      required:
      - _type
      - day
      - name
      - working
    WeekDaySelfLinkModel:
      description: Identify a particular week day by its href.
      example:
        self:
          href: /api/v3/days/week/3
          title: Wednesday
      properties:
        self:
          $ref: '#/components/schemas/WeekDaySelfLinkModel_self'
    WeekDayWriteModel:
      description: Describes a week day as a working day or a non-working day (weekend).
      example:
        _type: WeekDay
        working: false
      properties:
        _type:
          enum:
          - WeekDay
          type: string
        working:
          description: '`true` for a working day. `false` for a weekend day.'
          type: boolean
      required:
      - _type
      - working
    Wiki_PageModel:
      example:
        _type: WikiPage
        id: 72
        title: A wiki page with a name
        _embedded:
          project:
            _type: Project...
            id: 12
        _links:
          self:
            href: /api/v3/wiki_pages/72
          attachments:
            href: /api/v3/wiki_pages/72/attachments
          addAttachment:
            href: /api/v3/wiki_pages/72/attachments
            method: post
          project:
            href: /api/v3/projects/12
            title: some project
      properties:
        id:
          description: Identifier of this wiki page
          readOnly: true
          type: integer
        title:
          description: The wiki page's title
          type: string
        _links:
          $ref: '#/components/schemas/Wiki_PageModel__links'
      required:
      - title
    Work_PackageModel:
      example:
        _type: WorkPackage
        _links:
          self:
            href: /api/v3/work_packages/1528
            title: Develop API
          schema:
            href: /api/v3/work_packages/schemas/11-2
          update:
            href: /api/v3/work_packages/1528
            method: patch
            title: Update Develop API
          delete:
            href: /work_packages/bulk?ids=1528
            method: delete
            title: Delete Develop API
          logTime:
            href: /work_packages/1528/time_entries/new
            type: text/html
            title: Log time on Develop API
          move:
            href: /work_packages/1528/move/new
            type: text/html
            title: Move Develop API
          attachments:
            href: /api/v3/work_packages/1528/attachments
          addAttachment:
            href: /api/v3/work_packages/1528/attachments
            method: post
          author:
            href: /api/v3/users/1
            title: OpenProject Admin - admin
          customActions:
          - href: /api/v3/work_packages/1528/custom_actions/153/execute
            method: post
            title: Reset
          - href: /api/v3/work_packages/1528/custom_actions/94/execute
            method: post
            title: Forward to accounting
          responsible:
            href: /api/v3/users/23
            title: Laron Leuschke - Alaina5788
          relations:
            href: /api/v3/work_packages/1528/relations
            title: Show relations
          revisions:
            href: /api/v3/work_packages/1528/revisions
          assignee:
            href: /api/v3/users/11
            title: Emmie Okuneva - Adele5450
          priority:
            href: /api/v3/priorities/2
            title: Normal
          project:
            href: /api/v3/projects/1
            title: A Test Project
          status:
            href: /api/v3/statuses/1
            title: New
          type:
            href: /api/v3/types/1
            title: A Type
          version:
            href: /api/v3/versions/1
            title: Version 1
          availableWatchers:
            href: /api/v3/work_packages/1528/available_watchers
          watch:
            href: /api/v3/work_packages/1528/watchers
            method: post
            payload:
              user:
                href: /api/v3/users/1
          addWatcher:
            href: /api/v3/work_packages/1528/watchers
            method: post
            payload:
              user:
                href: "/api/v3/users/{user_id}"
            templated: true
          removeWatcher:
            href: "/api/v3/work_packages/1528/watchers/{user_id}"
            method: delete
            templated: true
          addRelation:
            href: /api/v3/relations
            method: post
            title: Add relation
          changeParent:
            href: /api/v3/work_packages/694
            method: patch
            title: Change parent of Bug in OpenProject
          addComment:
            href: /api/v3/work_packages/1528/activities
            method: post
            title: Add comment
          parent:
            href: /api/v3/work_packages/1298
            title: nisi eligendi officiis eos delectus quis voluptas dolores
          category:
            href: /api/v3/categories/1298
            title: eligend isi
          children:
          - href: /api/v3/work_packages/1529
            title: Write API documentation
          ancestors:
          - href: /api/v3/work_packages/1290
            title: Root node of hierarchy
          - href: /api/v3/work_packages/1291
            title: Intermediate node of hierarchy
          - href: /api/v3/work_packages/1298
            title: nisi eligendi officiis eos delectus quis voluptas dolores
          timeEntries:
            href: /work_packages/1528/time_entries
            type: text/html
            title: Time entries
          watchers:
            href: /api/v3/work_packages/1528/watchers
          customField3:
            href: api/v3/users/14
        id: 1528
        subject: Develop API
        description:
          format: markdown
          raw: Develop super cool OpenProject API.
          html: <p>Develop super cool OpenProject API.</p>
        scheduleManually: false
        readonly: false
        startDate: null
        dueDate: null
        derivedStartDate: null
        derivedDueDate: null
        estimatedTime: PT2H
        derivedEstimatedTime: PT10H
        percentageDone: 0
        customField1: Foo
        customField2: 42
        createdAt: 2014-08-29T12:40:53.373Z
        updatedAt: 2014-08-29T12:44:41.981Z
      properties:
        id:
          description: Work package id
          minimum: 1
          readOnly: true
          type: integer
        lockVersion:
          description: The version of the item as used for optimistic locking
          readOnly: true
          type: integer
        subject:
          description: Work package subject
          type: string
        _type:
          enum:
          - WorkPackage
          readOnly: true
          type: string
        description:
          $ref: '#/components/schemas/Work_PackageModel_description'
        scheduleManually:
          description: If false (default) schedule automatically.
          type: boolean
        readonly:
          description: "If true, the work package is in a readonly status so with\
            \ the exception of the status, no other property can be altered."
          type: boolean
        startDate:
          description: Scheduled beginning of a work package
          format: date
          type: string
        dueDate:
          description: Scheduled end of a work package
          format: date
          type: string
        date:
          description: Date on which a milestone is achieved
          format: date
          type: string
        derivedStartDate:
          description: "Similar to start date but is not set by a client but rather\
            \ deduced by the work packages' descendants. If manual scheduleManually\
            \ is active, the two dates can deviate."
          format: date
          readOnly: true
          type: string
        derivedDueDate:
          description: "Similar to due date but is not set by a client but rather\
            \ deduced by the work packages' descendants. If manual scheduleManually\
            \ is active, the two dates can deviate."
          format: date
          readOnly: true
          type: string
        duration:
          description: |-
            **(NOT IMPLEMENTED)** The amount of time in hours the work package needs to be completed.
            Not available for milestone type of work packages.
          format: duration
          readOnly: true
          type: string
        estimatedTime:
          description: Time a work package likely needs to be completed excluding
            its descendants
          format: duration
          type: string
        derivedEstimatedTime:
          description: Time a work package likely needs to be completed including
            its descendants
          format: duration
          readOnly: true
          type: string
        ignoreNonWorkingDays:
          description: |-
            **(NOT IMPLEMENTED)** When scheduling, whether or not to ignore the non working days being defined.
            A work package with the flag set to true will be allowed to be scheduled to a non working day.
          readOnly: true
          type: boolean
        spentTime:
          description: |-
            The time booked for this work package by users working on it

            # Conditions

            **Permission** view time entries
          format: duration
          readOnly: true
          type: string
        percentageDone:
          description: Amount of total completion for a work package
          maximum: 100
          minimum: 0
          type: integer
        derivedPercentageDone:
          description: Amount of total completion for a work package derived from
            itself and its descendant work packages
          maximum: 100
          minimum: 0
          readOnly: true
          type: integer
        createdAt:
          description: Time of creation. Can be writable by admins with the `apiv3_write_readonly_attributes`
            setting enabled.
          format: date-time
          readOnly: true
          type: string
        updatedAt:
          description: Time of the most recent change to the work package.
          format: date-time
          readOnly: true
          type: string
        _links:
          $ref: '#/components/schemas/Work_PackageModel__links'
    Work_Package_SchemasModel:
      example:
        _links:
          self:
            href: /api/v3/work_packages/schemas
        total: 5
        count: 2
        _type: Collection
        _embedded:
          elements:
          - _type: Schema...
            _links:
              self:
                href: /api/v3/work_packages/schemas/13-1
          - _type: Schema...
            _links:
              self:
                href: /api/v3/work_packages/schemas/7-6
      type: object
    Work_Package_activitiesModel:
      allOf:
      - $ref: '#/components/schemas/CollectionModel'
      - example:
          _links:
            self:
              href: /api/v3/work_packages/1/revisions
          total: 2
          count: 2
          _type: Collection
          _embedded:
            elements:
            - _type: Activity
              _links:
                self:
                  href: /api/v3/activity/1
                workPackage:
                  href: /api/v3/work_packages/1
                user:
                  href: /api/v3/users/1
              id: 1
              details: []
              comment:
                format: markdown
                raw: Lorem ipsum dolor sit amet.
                html: <p>Lorem ipsum dolor sit amet.</p>
              createdAt: 2014-05-21T08:51:20.396Z
              updatedAt: 2014-05-21T09:14:02.324Z
              version: 1
            - _type: Activity
              _links:
                self:
                  href: /api/v3/activity/2
                workPackage:
                  href: /api/v3/work_packages/1
                user:
                  href: /api/v3/users/1
              id: 2
              details: []
              comment:
                format: markdown
                raw: Lorem ipsum dolor sit amet.
                html: <p>Lorem ipsum dolor sit amet.</p>
              createdAt: 2014-05-21T09:51:22.769Z
              updatedAt: 2014-05-21T10:14:02.927Z
              version: 2
        properties:
          _embedded:
            $ref: '#/components/schemas/Work_Package_activitiesModel_allOf__embedded'
    Work_PackagesModel:
      allOf:
      - $ref: '#/components/schemas/CollectionModel'
      - properties:
          _links:
            $ref: '#/components/schemas/Work_PackagesModel_allOf__links'
          _embedded:
            $ref: '#/components/schemas/Work_PackagesModel_allOf__embedded'
        required:
        - _embedded
        - _links
      example:
        _links:
          self:
            href: /api/v3/work_packages
        total: 2
        count: 2
        _type: Collection
        _embedded:
          elements:
          - _hint: Work package resource shortened for brevity
            _type: WorkPackage
            _links:
              self:
                href: /api/v3/work_packages/1
            id: 1
          - _hint: Work package resource shortened for brevity
            _type: WorkPackage
            _links:
              self:
                href: /api/v3/work_packages/2
            id: 2
    WorkPackagePatchModel:
      properties:
        lockVersion:
          description: The version of the item as used for optimistic locking
          type: integer
        subject:
          description: Work package subject
          type: string
        description:
          $ref: '#/components/schemas/Work_PackageModel_description'
        scheduleManually:
          description: If false (default) schedule automatically.
          type: boolean
        startDate:
          description: Scheduled beginning of a work package
          format: date
          type: string
        dueDate:
          description: Scheduled end of a work package
          format: date
          type: string
        date:
          description: Date on which a milestone is achieved
          format: date
          type: string
        estimatedTime:
          description: Time a work package likely needs to be completed excluding
            its descendants
          format: duration
          type: string
        ignoreNonWorkingDays:
          description: |-
            **(NOT IMPLEMENTED)** When scheduling, whether or not to ignore the non working days being defined.
            A work package with the flag set to true will be allowed to be scheduled to a non working day.
          readOnly: true
          type: boolean
        spentTime:
          description: |-
            The time booked for this work package by users working on it

            # Conditions

            **Permission** view time entries
          format: duration
          readOnly: true
          type: string
        percentageDone:
          description: Amount of total completion for a work package
          maximum: 100
          type: integer
        createdAt:
          description: Time of creation
          format: date-time
          readOnly: true
          type: string
        updatedAt:
          description: Time of the most recent change to the work package
          format: date-time
          readOnly: true
          type: string
        _links:
          $ref: '#/components/schemas/WorkPackagePatchModel__links'
      required:
      - lockVersion
    Update_activity_request__links:
      properties:
        user:
          $ref: '#/components/schemas/Link'
    Update_activity_request:
      example:
        comment:
          raw: The updated comment
      properties:
        comment:
          type: string
        _links:
          $ref: '#/components/schemas/Update_activity_request__links'
    create_attachment_request_metadata:
      properties:
        fileName:
          type: string
      required:
      - fileName
    create_attachment_request:
      properties:
        metadata:
          $ref: '#/components/schemas/create_attachment_request_metadata'
        file:
          format: binary
          type: string
    Execute_custom_action_request__links_workPackage:
      properties:
        href:
          type: string
    Execute_custom_action_request__links:
      properties:
        workPackage:
          $ref: '#/components/schemas/Execute_custom_action_request__links_workPackage'
    Execute_custom_action_request:
      example:
        _links:
          workPackage:
            href: /api/v3/work_packages/42
        lockVersion: "3"
      properties:
        _links:
          $ref: '#/components/schemas/Execute_custom_action_request__links'
        lockVersion:
          type: string
    show_or_validate_form_request:
      example:
        _type: Example
        lockVersion: 5
        subject: An example title
      properties:
        _type:
          type: string
        lockVersion:
          type: number
        subject:
          type: string
    Update_UserPreferences_request:
      example:
        autoHidePopups: true
        timeZone: Europe/Paris
      properties:
        autoHidePopups:
          type: boolean
        timeZone:
          type: string
    Create_views_request__links_query:
      properties:
        href:
          format: uri
          type: string
    Create_views_request__links:
      properties:
        query:
          $ref: '#/components/schemas/Create_views_request__links_query'
    Create_views_request:
      properties:
        _links:
          $ref: '#/components/schemas/Create_views_request__links'
    Comment_work_package_request_comment:
      properties:
        raw:
          type: string
    Comment_work_package_request:
      example:
        comment:
          raw: I think this is awesome!
      properties:
        comment:
          $ref: '#/components/schemas/Comment_work_package_request_comment'
    Create_Relation_request__links:
      properties:
        from:
          $ref: '#/components/schemas/Link'
        to:
          $ref: '#/components/schemas/Link'
      required:
      - from
      - to
    Create_Relation_request:
      properties:
        type:
          type: string
        _links:
          $ref: '#/components/schemas/Create_Relation_request__links'
      required:
      - _links
      - type
    Add_watcher_request:
      example:
        user:
          href: /api/v3/users/1
      properties:
        user:
          $ref: '#/components/schemas/Execute_custom_action_request__links_workPackage'
    ActivityModel_comment:
      allOf:
      - $ref: '#/components/schemas/Formattable'
      - {}
    AttachmentModel_description:
      allOf:
      - $ref: '#/components/schemas/Formattable'
      - description: A user provided description of the file
    AttachmentModel_digest:
      description: A checksum for the files content
      properties:
        algorithm:
          type: string
        hash:
          type: string
    AttachmentModel__links_delete:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          Deletes this attachment

          # Conditions

          **Permission**: edit on attachment container or being the author for attachments without container
    AttachmentModel__links_self:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          This attachment

          **Resource**: Attachment
    AttachmentModel__links_container:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          The object (e.g. WorkPackage) housing the attachment

          **Resource**: Anything
    AttachmentModel__links_author:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          The user who uploaded the attachment

          **Resource**: User
    AttachmentModel__links_downloadLocation:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          Direct download link to the attachment

          **Resource**: -
    AttachmentModel__links:
      properties:
        delete:
          $ref: '#/components/schemas/AttachmentModel__links_delete'
        self:
          $ref: '#/components/schemas/AttachmentModel__links_self'
        container:
          $ref: '#/components/schemas/AttachmentModel__links_container'
        author:
          $ref: '#/components/schemas/AttachmentModel__links_author'
        downloadLocation:
          $ref: '#/components/schemas/AttachmentModel__links_downloadLocation'
      required:
      - author
      - container
      - downloadLocation
      - self
    Attachments_Model_allOf__links_self:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          The attachments collection

          **Resource**: AttachmentsCollection
        readOnly: true
    Attachments_Model_allOf__links:
      properties:
        self:
          $ref: '#/components/schemas/Attachments_Model_allOf__links_self'
      required:
      - self
    Attachments_Model_allOf__embedded_elements:
      allOf:
      - $ref: '#/components/schemas/AttachmentModel'
      - description: Collection of Attachments
    Attachments_Model_allOf__embedded:
      properties:
        elements:
          items:
            $ref: '#/components/schemas/Attachments_Model_allOf__embedded_elements'
          type: array
    Available_AssigneesModel_allOf__links_self:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          The available assignees collection

          **Resource**: AvailableAssigneesCollection
        readOnly: true
    Available_AssigneesModel_allOf__links:
      properties:
        self:
          $ref: '#/components/schemas/Available_AssigneesModel_allOf__links_self'
      required:
      - self
    Available_AssigneesModel_allOf__embedded_elements:
      allOf:
      - $ref: '#/components/schemas/UserModel'
      - description: Collection of Users
    Available_AssigneesModel_allOf__embedded:
      properties:
        elements:
          items:
            $ref: '#/components/schemas/Available_AssigneesModel_allOf__embedded_elements'
          type: array
    BudgetModel__links_self:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          This budget

          **Resource**: Budget
        readOnly: true
    BudgetModel__links:
      properties:
        self:
          $ref: '#/components/schemas/BudgetModel__links_self'
      required:
      - self
    Categories_by_ProjectModel_allOf__links_self:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          The categories collection

          **Resource**: CategoriesCollection
        readOnly: true
    Categories_by_ProjectModel_allOf__links:
      properties:
        self:
          $ref: '#/components/schemas/Categories_by_ProjectModel_allOf__links_self'
      required:
      - self
    Categories_by_ProjectModel_allOf__embedded_elements:
      allOf:
      - $ref: '#/components/schemas/CategoryModel'
      - description: Collection of Categories
    Categories_by_ProjectModel_allOf__embedded:
      properties:
        elements:
          items:
            $ref: '#/components/schemas/Categories_by_ProjectModel_allOf__embedded_elements'
          type: array
    CategoryModel__links_self:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          This category

          **Resource**: Category
        readOnly: true
    CategoryModel__links_project:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          The project of this category

          **Resource**: Project
        readOnly: true
    CategoryModel__links_defaultAssignee:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          Default assignee for work packages of this category

          **Resource**: User
        readOnly: true
    CategoryModel__links:
      properties:
        self:
          $ref: '#/components/schemas/CategoryModel__links_self'
        project:
          $ref: '#/components/schemas/CategoryModel__links_project'
        defaultAssignee:
          $ref: '#/components/schemas/CategoryModel__links_defaultAssignee'
      required:
      - project
      - self
    CollectionModel__links_self:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          This collection resource.

          **Resource**: Collection
    CollectionModel__links:
      properties:
        self:
          $ref: '#/components/schemas/CollectionModel__links_self'
      required:
      - self
    CustomActionModel__links_self:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          This custom action

          **Resource**: CustomAction
    CustomActionModel__links_executeImmediately:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: Execute this custom action.
    CustomActionModel__links:
      properties:
        self:
          $ref: '#/components/schemas/CustomActionModel__links_self'
        executeImmediately:
          $ref: '#/components/schemas/CustomActionModel__links_executeImmediately'
      required:
      - executeImmediately
      - self
    CustomOptionModel__links_self:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          This custom option.

          **Resource**: CustomOption
        readOnly: true
    CustomOptionModel__links:
      properties:
        self:
          $ref: '#/components/schemas/CustomOptionModel__links_self'
      required:
      - self
    DayCollectionModel_allOf__links_self:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          This days collection

          **Resource**: DayCollectionModel
    DayCollectionModel_allOf__links:
      properties:
        self:
          $ref: '#/components/schemas/DayCollectionModel_allOf__links_self'
      required:
      - self
    DayCollectionModel_allOf__embedded:
      properties:
        elements:
          description: |-
            The array of days. Each day has a name and a working status
            indicating if it is a working or a non-working day.
          items:
            $ref: '#/components/schemas/DayModel'
          type: array
      required:
      - elements
    DayModel__links_weekDay:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: The week day for this day.
    DayModel__links:
      properties:
        self:
          $ref: '#/components/schemas/Link'
        nonWorkingReasons:
          description: |-
            A list of resources describing why this day is a non-working day.
            Linked resources can be `NonWorkingDay` and `WeekDay` resources.
            This property is absent for working days.
          items:
            $ref: '#/components/schemas/Link'
          type: array
        weekDay:
          $ref: '#/components/schemas/DayModel__links_weekDay'
      required:
      - self
    DocumentModel__links_self:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          This document

          **Resource**: Document
        readOnly: true
    DocumentModel__links_project:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          The project the document is in

          **Resource**: Project
    DocumentModel__links_attachments:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          The attachments belonging to the document

          **Resource**: []Attachment
    DocumentModel__links:
      properties:
        self:
          $ref: '#/components/schemas/DocumentModel__links_self'
        project:
          $ref: '#/components/schemas/DocumentModel__links_project'
        attachments:
          $ref: '#/components/schemas/DocumentModel__links_attachments'
      required:
      - attachments
      - project
      - self
    ErrorResponse__embedded_details:
      properties:
        attribute:
          example: project
          type: string
    ErrorResponse__embedded:
      properties:
        details:
          $ref: '#/components/schemas/ErrorResponse__embedded_details'
    FileLinkCollectionReadModel_allOf__links_self:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          This file links collection

          **Resource**: FileLinkCollectionReadModel
    FileLinkCollectionReadModel_allOf__links:
      properties:
        self:
          $ref: '#/components/schemas/FileLinkCollectionReadModel_allOf__links_self'
      required:
      - self
    FileLinkCollectionReadModel_allOf__embedded:
      properties:
        elements:
          items:
            $ref: '#/components/schemas/FileLinkReadModel'
          type: array
      required:
      - elements
    FileLinkCollectionWriteModel_allOf__embedded:
      properties:
        elements:
          items:
            $ref: '#/components/schemas/FileLinkWriteModel'
          type: array
      required:
      - elements
    FileLinkReadModel__embedded:
      properties:
        storage:
          $ref: '#/components/schemas/StorageReadModel'
        container:
          $ref: '#/components/schemas/Work_PackageModel'
      required:
      - container
      - storage
    FileLinkReadModel__links_self:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          This file link.

          **Resource**: FileLink
    FileLinkReadModel__links_storage:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          The storage resource of the linked file.

          **Resource**: Storage
    FileLinkReadModel__links_container:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          The container the origin file is linked to.

          Can be one of the following **Resources**:

          - WorkPackage
    FileLinkReadModel__links_creator:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          The creator of the file link.

          **Resource**: User
    FileLinkReadModel__links_delete:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          The uri to delete the file link.

          **Resource**: N/A
    FileLinkReadModel__links_status:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          The urn of the user specific file link status on its storage. Can be one of:

          - urn:openproject-org:api:v3:file-links:permission:ViewAllowed
          - urn:openproject-org:api:v3:file-links:permission:ViewNotAllowed
          - urn:openproject-org:api:v3:file-links:NotFound
          - urn:openproject-org:api:v3:file-links:Error

          **Resource**: N/A
    FileLinkReadModel__links_originOpen:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          The uri to open the origin file on the origin itself.

          **Resource**: N/A
    FileLinkReadModel__links_staticOriginOpen:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          A static uri to open the origin file on the storage. Responds with a redirect.

          **Resource**: N/A
    FileLinkReadModel__links_originOpenLocation:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          The uri to open the location of origin file on the origin itself.

          **Resource**: N/A
    FileLinkReadModel__links_staticOriginOpenLocation:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          A static uri to open the location of the origin file on the storage. Responds with a redirect.

          **Resource**: N/A
    FileLinkReadModel__links_staticOriginDownload:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          A static uri to generate a new download URL from the storage. Responds with a redirect.

          **Resource**: N/A
    FileLinkReadModel__links:
      properties:
        self:
          $ref: '#/components/schemas/FileLinkReadModel__links_self'
        storage:
          $ref: '#/components/schemas/FileLinkReadModel__links_storage'
        container:
          $ref: '#/components/schemas/FileLinkReadModel__links_container'
        creator:
          $ref: '#/components/schemas/FileLinkReadModel__links_creator'
        delete:
          $ref: '#/components/schemas/FileLinkReadModel__links_delete'
        status:
          $ref: '#/components/schemas/FileLinkReadModel__links_status'
        originOpen:
          $ref: '#/components/schemas/FileLinkReadModel__links_originOpen'
        staticOriginOpen:
          $ref: '#/components/schemas/FileLinkReadModel__links_staticOriginOpen'
        originOpenLocation:
          $ref: '#/components/schemas/FileLinkReadModel__links_originOpenLocation'
        staticOriginOpenLocation:
          $ref: '#/components/schemas/FileLinkReadModel__links_staticOriginOpenLocation'
        staticOriginDownload:
          $ref: '#/components/schemas/FileLinkReadModel__links_staticOriginDownload'
      required:
      - container
      - creator
      - originOpen
      - originOpenLocation
      - self
      - staticOriginDownload
      - staticOriginOpen
      - staticOriginOpenLocation
      - storage
    FileLinkWriteModel__links_oneOf:
      properties:
        storage:
          $ref: '#/components/schemas/FileLinkReadModel__links_storage'
      required:
      - storage
    FileLinkWriteModel__links_oneOf_1_storageUrl:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          The storage url the file link references to.

          **Resource**: N/A
    FileLinkWriteModel__links_oneOf_1:
      properties:
        storageUrl:
          $ref: '#/components/schemas/FileLinkWriteModel__links_oneOf_1_storageUrl'
      required:
      - storageUrl
    FileLinkWriteModel__links:
      oneOf:
      - $ref: '#/components/schemas/FileLinkWriteModel__links_oneOf'
      - $ref: '#/components/schemas/FileLinkWriteModel__links_oneOf_1'
    GridCollectionModel_allOf__embedded:
      properties:
        elements:
          items:
            $ref: '#/components/schemas/GridReadModel'
          type: array
      required:
      - elements
    GridReadModel__links_self:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          This grid.

          **Resource**: Grid
    GridReadModel__links_attachments:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          The attachment collection of this grid.

          **Resource**: AttachmentCollection
    GridReadModel__links_addAttachment:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: Link for adding an attachment to this grid.
    GridReadModel__links_scope:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: "The location where this grid is used, usually represented as\
          \ a relative URL."
      example:
        identifier: identifier
        templated: false
        method: GET
        payload: "{}"
        href: href
        title: title
        type: type
    GridReadModel__links_updateImmediately:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          Directly perform edits on this grid.

          # Conditions

          **Permission**: depends on the page the grid is defined for
    GridReadModel__links_update:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          Validate edits on the grid via a form resource before committing

          # Conditions

          **Permission**: depends on the page the grid is defined for
    GridReadModel__links_delete:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: Deletes this grid resource.
    GridReadModel__links:
      properties:
        self:
          $ref: '#/components/schemas/GridReadModel__links_self'
        attachments:
          $ref: '#/components/schemas/GridReadModel__links_attachments'
        addAttachment:
          $ref: '#/components/schemas/GridReadModel__links_addAttachment'
        scope:
          $ref: '#/components/schemas/GridReadModel__links_scope'
        updateImmediately:
          $ref: '#/components/schemas/GridReadModel__links_updateImmediately'
        update:
          $ref: '#/components/schemas/GridReadModel__links_update'
        delete:
          $ref: '#/components/schemas/GridReadModel__links_delete'
      required:
      - scope
      - self
    GridWriteModel__links:
      example:
        scope:
          identifier: identifier
          templated: false
          method: GET
          payload: "{}"
          href: href
          title: title
          type: type
      properties:
        scope:
          $ref: '#/components/schemas/GridReadModel__links_scope'
    GroupCollectionModel_allOf__links_self:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          This group collection

          **Resource**: Collection
    GroupCollectionModel_allOf__links:
      properties:
        self:
          $ref: '#/components/schemas/GroupCollectionModel_allOf__links_self'
      required:
      - self
    GroupCollectionModel_allOf__embedded:
      properties:
        elements:
          items:
            $ref: '#/components/schemas/GroupModel'
          type: array
      required:
      - elements
    GroupModel_allOf__embedded:
      properties:
        members:
          description: Embedded list of members.
          items:
            description: TODO default missing array inner type to string
            type: string
          type: array
    GroupModel_allOf__links_members:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          A member of the group

          # Conditions:

          - user has permission `manage_members` in any project

          **Resource**: User
    GroupModel_allOf__links_delete:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          An href to delete the group.

          # Conditions:

          - `admin`
    GroupModel_allOf__links_updateImmediately:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          An href to update the group.

          # Conditions:

          - `admin`

          **Resource**: Group
    GroupModel_allOf__links:
      properties:
        members:
          items:
            $ref: '#/components/schemas/GroupModel_allOf__links_members'
          type: array
        delete:
          $ref: '#/components/schemas/GroupModel_allOf__links_delete'
        updateImmediately:
          $ref: '#/components/schemas/GroupModel_allOf__links_updateImmediately'
    GroupWriteModel__links_members_inner:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          A new member for the group.

          **Resource**: User
    GroupWriteModel__links:
      properties:
        members:
          items:
            $ref: '#/components/schemas/GroupWriteModel__links_members_inner'
          type: array
    HelpTextCollectionModel_allOf__links_self:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          This help text collection

          **Resource**: HelpTextCollectionModel
    HelpTextCollectionModel_allOf__links:
      properties:
        self:
          $ref: '#/components/schemas/HelpTextCollectionModel_allOf__links_self'
      required:
      - self
    HelpTextCollectionModel_allOf__embedded:
      properties:
        elements:
          items:
            $ref: '#/components/schemas/HelpTextModel'
          type: array
      required:
      - elements
    HelpTextModel__links_self:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          This help text resource.

          **Resource**: HelpText
    HelpTextModel__links_editText:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          Edit the help text entry.

          **Resource**: text/html
    HelpTextModel__links_attachments:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          The attachment collection of this help text.

          **Resource**: AttachmentCollection
    HelpTextModel__links_addAttachment:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: Add an attachment to the help text.
    HelpTextModel__links:
      properties:
        self:
          $ref: '#/components/schemas/HelpTextModel__links_self'
        editText:
          $ref: '#/components/schemas/HelpTextModel__links_editText'
        attachments:
          $ref: '#/components/schemas/HelpTextModel__links_attachments'
        addAttachment:
          $ref: '#/components/schemas/HelpTextModel__links_addAttachment'
      required:
      - addAttachment
      - attachments
      - editText
      - self
    List_available_parent_project_candidatesModel_allOf__links_self:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          The project collection

          **Resource**: ProjectCollection
        readOnly: true
    List_available_parent_project_candidatesModel_allOf__links:
      properties:
        self:
          $ref: '#/components/schemas/List_available_parent_project_candidatesModel_allOf__links_self'
      required:
      - self
    List_available_parent_project_candidatesModel_allOf__embedded_elements:
      allOf:
      - $ref: '#/components/schemas/ProjectModel'
      - description: Collection of projects
    List_available_parent_project_candidatesModel_allOf__embedded:
      properties:
        elements:
          items:
            $ref: '#/components/schemas/List_available_parent_project_candidatesModel_allOf__embedded_elements'
          type: array
    MeetingModel__links_self:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          This meeting

          **Resource**: Meeting
        readOnly: true
    MeetingModel__links_author:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          The user having created the meeting

          **Resource**: User
        readOnly: true
    MeetingModel__links_project:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          The project the meeting is in

          **Resource**: Project
    MeetingModel__links_attachments:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: "The attachment collection of this grid.\n\n**Resource**: AttachmentCollection\
          \           "
    MeetingModel__links_addAttachment:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          Attach a file to the meeting

          # Conditions

          **Permission**: edit meeting
        readOnly: true
    MeetingModel__links:
      properties:
        self:
          $ref: '#/components/schemas/MeetingModel__links_self'
        author:
          $ref: '#/components/schemas/MeetingModel__links_author'
        project:
          $ref: '#/components/schemas/MeetingModel__links_project'
        attachments:
          $ref: '#/components/schemas/MeetingModel__links_attachments'
        addAttachment:
          $ref: '#/components/schemas/MeetingModel__links_addAttachment'
    MembershipCollectionModel_allOf__embedded:
      properties:
        elements:
          items:
            $ref: '#/components/schemas/MembershipReadModel'
          type: array
      required:
      - elements
    MembershipFormModel__embedded_validationError:
      properties:
        base:
          $ref: '#/components/schemas/ErrorResponse'
        principal:
          $ref: '#/components/schemas/ErrorResponse'
        roles:
          $ref: '#/components/schemas/ErrorResponse'
    MembershipFormModel__embedded:
      properties:
        payload:
          $ref: '#/components/schemas/MembershipWriteModel'
        schema:
          $ref: '#/components/schemas/MembershipSchemaModel'
        validationError:
          $ref: '#/components/schemas/MembershipFormModel__embedded_validationError'
      required:
      - payload
      - schema
      - validationError
    MembershipFormModel__links_self:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          This form request.

          **Resource**: Form
    MembershipFormModel__links_validate_inner:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: The endpoint to validate the membership payload.
    MembershipFormModel__links_commit:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          The endpoint to create the membership with the same payload, as sent to the form.

          **Resource**: Membership
    MembershipFormModel__links:
      properties:
        self:
          $ref: '#/components/schemas/MembershipFormModel__links_self'
        validate:
          items:
            $ref: '#/components/schemas/MembershipFormModel__links_validate_inner'
          type: array
        commit:
          $ref: '#/components/schemas/MembershipFormModel__links_commit'
      required:
      - commit
      - self
      - validate
    MembershipReadModel__embedded_principal:
      anyOf:
      - $ref: '#/components/schemas/UserModel'
      - $ref: '#/components/schemas/GroupModel'
    MembershipReadModel__embedded:
      properties:
        project:
          $ref: '#/components/schemas/ProjectModel'
        principal:
          $ref: '#/components/schemas/MembershipReadModel__embedded_principal'
        roles:
          items:
            $ref: '#/components/schemas/RoleModel'
          type: array
    MembershipReadModel__links_self:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          This membership.

          **Resource**: Membership
    MembershipReadModel__links_schema:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          This membership schema.

          **Resource**: Schema
    MembershipReadModel__links_update:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          The endpoint for updating the membership.

          # Conditions

          **Permission**: manage_members
    MembershipReadModel__links_updateImmediately:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          The endpoint for updating the membership without form validation.

          # Conditions

          **Permission**: manage_members
    MembershipReadModel__links_project:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          The project the membership is related to.

          **Resource**: Project
    MembershipReadModel__links_principal:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          The principal the membership is related to.

          **Resource**: Principal
    MembershipReadModel__links_roles_inner:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          A role the principal has.

          **Resource**: Role
      example:
        identifier: identifier
        templated: false
        method: GET
        payload: "{}"
        href: href
        title: title
        type: type
    MembershipReadModel__links:
      properties:
        self:
          $ref: '#/components/schemas/MembershipReadModel__links_self'
        schema:
          $ref: '#/components/schemas/MembershipReadModel__links_schema'
        update:
          $ref: '#/components/schemas/MembershipReadModel__links_update'
        updateImmediately:
          $ref: '#/components/schemas/MembershipReadModel__links_updateImmediately'
        project:
          $ref: '#/components/schemas/MembershipReadModel__links_project'
        principal:
          $ref: '#/components/schemas/MembershipReadModel__links_principal'
        roles:
          items:
            $ref: '#/components/schemas/MembershipReadModel__links_roles_inner'
          type: array
      required:
      - principal
      - project
      - roles
      - schema
      - self
    MembershipWriteModel__links_principal:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          The principal that is to get a membership.

          **Resource**: Principal
      example:
        identifier: identifier
        templated: false
        method: GET
        payload: "{}"
        href: href
        title: title
        type: type
    MembershipWriteModel__links_project:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          The project that is to get a membership. If no project is given, the principal's membership is supposed
          to be global.

          **Resource**: Project
      example:
        identifier: identifier
        templated: false
        method: GET
        payload: "{}"
        href: href
        title: title
        type: type
    MembershipWriteModel__links:
      example:
        principal:
          identifier: identifier
          templated: false
          method: GET
          payload: "{}"
          href: href
          title: title
          type: type
        roles:
        - identifier: identifier
          templated: false
          method: GET
          payload: "{}"
          href: href
          title: title
          type: type
        - identifier: identifier
          templated: false
          method: GET
          payload: "{}"
          href: href
          title: title
          type: type
        project:
          identifier: identifier
          templated: false
          method: GET
          payload: "{}"
          href: href
          title: title
          type: type
      properties:
        principal:
          $ref: '#/components/schemas/MembershipWriteModel__links_principal'
        roles:
          items:
            $ref: '#/components/schemas/MembershipReadModel__links_roles_inner'
          type: array
        project:
          $ref: '#/components/schemas/MembershipWriteModel__links_project'
    MembershipWriteModel__meta_notificationMessage:
      allOf:
      - $ref: '#/components/schemas/Formattable'
      - description: "A customised notification message, which will overwrite the\
          \ standard notification."
      example:
        format: markdown
        raw: I **am** formatted!
        html: I <strong>am</strong> formatted!
    MembershipWriteModel__meta:
      example:
        notificationMessage:
          format: markdown
          raw: I **am** formatted!
          html: I <strong>am</strong> formatted!
        sendNotification: true
      properties:
        notificationMessage:
          $ref: '#/components/schemas/MembershipWriteModel__meta_notificationMessage'
        sendNotification:
          default: true
          description: "Set to false, if no notification should get sent."
          type: boolean
    NewsModel__links_self:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          This news

          **Resource**: News
        readOnly: true
    NewsModel__links_project:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          The project the news is situated in

          **Resource**: Project
    NewsModel__links_author:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          The user having created the news

          **Resource**: User
        readOnly: true
    NewsModel__links:
      properties:
        self:
          $ref: '#/components/schemas/NewsModel__links_self'
        project:
          $ref: '#/components/schemas/NewsModel__links_project'
        author:
          $ref: '#/components/schemas/NewsModel__links_author'
      required:
      - author
      - project
      - self
    NonWorkingDayCollectionModel_allOf__links_self:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          This non working days collection

          **Resource**: NonWorkingDayCollectionModel
    NonWorkingDayCollectionModel_allOf__links:
      properties:
        self:
          $ref: '#/components/schemas/NonWorkingDayCollectionModel_allOf__links_self'
      required:
      - self
    NonWorkingDayCollectionModel_allOf__embedded:
      properties:
        elements:
          description: The array of non working days. Each day has a name and a date.
          items:
            $ref: '#/components/schemas/NonWorkingDayModel'
          type: array
      required:
      - elements
    NonWorkingDayModel__links_self:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          This non-working day.

          **Resource**: NonWorkingDay
    NonWorkingDayModel__links:
      properties:
        self:
          $ref: '#/components/schemas/NonWorkingDayModel__links_self'
      required:
      - self
    NotificationCollectionModel_allOf__links_self:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          This notification collection

          **Resource**: NotificationCollectionModel
    NotificationCollectionModel_allOf__links_jumpTo:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          The notification collection at another offset

          **Resource**: NotificationCollectionModel
    NotificationCollectionModel_allOf__links_changeSize:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          The notification collection with another size

          **Resource**: NotificationCollectionModel
    NotificationCollectionModel_allOf__links:
      properties:
        self:
          $ref: '#/components/schemas/NotificationCollectionModel_allOf__links_self'
        jumpTo:
          $ref: '#/components/schemas/NotificationCollectionModel_allOf__links_jumpTo'
        changeSize:
          $ref: '#/components/schemas/NotificationCollectionModel_allOf__links_changeSize'
      required:
      - self
    NotificationCollectionModel_allOf__embedded:
      properties:
        elements:
          items:
            $ref: '#/components/schemas/NotificationModel'
          type: array
        detailsSchemas:
          items:
            $ref: '#/components/schemas/SchemaModel'
          type: array
      required:
      - detailsSchemas
      - elements
    NotificationModel_details_inner:
      oneOf:
      - $ref: '#/components/schemas/ValuesPropertyModel'
    NotificationModel__embedded_resource:
      oneOf:
      - $ref: '#/components/schemas/Work_PackageModel'
    NotificationModel__embedded:
      properties:
        actor:
          $ref: '#/components/schemas/UserModel'
        project:
          $ref: '#/components/schemas/ProjectModel'
        activity:
          $ref: '#/components/schemas/ActivityModel'
        resource:
          $ref: '#/components/schemas/NotificationModel__embedded_resource'
      required:
      - project
      - resource
    NotificationModel__links_self:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          This notification

          **Resource**: Notification
    NotificationModel__links_readIAN:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: Request to mark the notification as read. Only available if the
          notification is currently unread.
    NotificationModel__links_unreadIAN:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: Request to mark the notification as unread. Only available if
          the notification is currently read.
    NotificationModel__links_project:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          The project the notification originated in

          **Resource**: Project
    NotificationModel__links_actor:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          The user that caused the notification. This might be null in
          case no user triggered the notification.

          **Resource**: User
    NotificationModel__links_resource:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          The linked resource of the notification, if any.

          **Resource**: Polymorphic
    NotificationModel__links_activity:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          The journal activity, if the notification originated from a journal entry. This might be null in
          case no activity triggered the notification.

          **Resource**: Activity
    NotificationModel__links_details_inner:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          A list of objects including detailed information about the notification. The contents of
          and type of this can vary widely between different notification reasons.

          **Resource**: Polymorphic (e.g. Values::Property)
    NotificationModel__links:
      properties:
        self:
          $ref: '#/components/schemas/NotificationModel__links_self'
        readIAN:
          $ref: '#/components/schemas/NotificationModel__links_readIAN'
        unreadIAN:
          $ref: '#/components/schemas/NotificationModel__links_unreadIAN'
        project:
          $ref: '#/components/schemas/NotificationModel__links_project'
        actor:
          $ref: '#/components/schemas/NotificationModel__links_actor'
        resource:
          $ref: '#/components/schemas/NotificationModel__links_resource'
        activity:
          $ref: '#/components/schemas/NotificationModel__links_activity'
        details:
          items:
            $ref: '#/components/schemas/NotificationModel__links_details_inner'
          type: array
      required:
      - activity
      - actor
      - details
      - project
      - resource
      - self
    OAuthApplicationReadModel__links_self:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          This OAuth application

          **Resource**: OAuthApplication
    OAuthApplicationReadModel__links_owner:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          The user that created the OAuth application.

          **Resource**: User
    OAuthApplicationReadModel__links_integration:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          The resource that integrates this OAuth application into itself. Currently, only `Storage` resources are
          able to create and maintain own OAuth application.

          **Resource**: Storage
    OAuthApplicationReadModel__links_redirectUri:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          The redirect URI of the OAuth application

          **Resource**: N/A
    OAuthApplicationReadModel__links:
      properties:
        self:
          $ref: '#/components/schemas/OAuthApplicationReadModel__links_self'
        owner:
          $ref: '#/components/schemas/OAuthApplicationReadModel__links_owner'
        integration:
          $ref: '#/components/schemas/OAuthApplicationReadModel__links_integration'
        redirectUri:
          $ref: '#/components/schemas/OAuthApplicationReadModel__links_redirectUri'
      required:
      - owner
      - redirectUri
      - self
    OAuthClientCredentialsReadModel__links_self:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          This OAuth Client Credentials object

          **Resource**: OAuthClientCredentials
    OAuthClientCredentialsReadModel__links_integration:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          The resource that integrates this OAuth client credentials. Currently, only `Storage` resources are
          able to contain OAuth client credentials.

          **Resource**: Storage
    OAuthClientCredentialsReadModel__links:
      properties:
        self:
          $ref: '#/components/schemas/OAuthClientCredentialsReadModel__links_self'
        integration:
          $ref: '#/components/schemas/OAuthClientCredentialsReadModel__links_integration'
      required:
      - integration
      - self
    PaginatedCollectionModel_allOf__links_jumpTo:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          Templated link to another page offset.

          **Resource**: Collection
    PaginatedCollectionModel_allOf__links_changeSize:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          Templated link for another page size.

          **Resource**: Collection
    PaginatedCollectionModel_allOf__links:
      properties:
        jumpTo:
          $ref: '#/components/schemas/PaginatedCollectionModel_allOf__links_jumpTo'
        changeSize:
          $ref: '#/components/schemas/PaginatedCollectionModel_allOf__links_changeSize'
      required:
      - changeSize
      - jumpTo
    PlaceholderUserCollectionModel_allOf__links_self:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          This placeholder user collection

          **Resource**: Collection
    PlaceholderUserCollectionModel_allOf__links:
      properties:
        self:
          $ref: '#/components/schemas/PlaceholderUserCollectionModel_allOf__links_self'
      required:
      - self
    PlaceholderUserCollectionModel_allOf__embedded:
      properties:
        elements:
          items:
            $ref: '#/components/schemas/PlaceholderUserModel'
          type: array
      required:
      - elements
    PlaceholderUserModel_allOf__links_showUser:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: A relative path to show the placeholder user in the web application.
    PlaceholderUserModel_allOf__links_delete:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          An href to delete the placeholder user.

          # Conditions:

          - `manage_placeholder_user`
    PlaceholderUserModel_allOf__links_updateImmediately:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          An href to update the placeholder user.

          # Conditions:

          - `manage_placeholder_user`

          **Resource**: PlaceholderUser
    PlaceholderUserModel_allOf__links:
      properties:
        showUser:
          $ref: '#/components/schemas/PlaceholderUserModel_allOf__links_showUser'
        delete:
          $ref: '#/components/schemas/PlaceholderUserModel_allOf__links_delete'
        updateImmediately:
          $ref: '#/components/schemas/PlaceholderUserModel_allOf__links_updateImmediately'
      required:
      - showUser
    PostModel__links_addAttachment:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          Attach a file to the post

          # Conditions

          **Permission**: edit messages
        readOnly: true
    PostModel__links:
      properties:
        addAttachment:
          $ref: '#/components/schemas/PostModel__links_addAttachment'
    PrincipalCollectionModel_allOf__links_self:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          This principal collection

          **Resource**: Collection
    PrincipalCollectionModel_allOf__links:
      properties:
        self:
          $ref: '#/components/schemas/PrincipalCollectionModel_allOf__links_self'
      required:
      - self
    PrincipalCollectionModel_allOf__embedded_elements:
      anyOf:
      - $ref: '#/components/schemas/UserModel'
      - $ref: '#/components/schemas/PlaceholderUserModel'
      - $ref: '#/components/schemas/GroupModel'
    PrincipalCollectionModel_allOf__embedded:
      properties:
        elements:
          items:
            $ref: '#/components/schemas/PrincipalCollectionModel_allOf__embedded_elements'
          type: array
      required:
      - elements
    PrincipalModel__links_self:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          This principal resource.

          **Resource**: User|Group|PlaceholderUser
    PrincipalModel__links_memberships:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          An href to the collection of the principal's memberships.

          # Conditions:

          - user has permission `view_members` or `manage_members` in any project

          **Resource**: Collection
    PrincipalModel__links:
      properties:
        self:
          $ref: '#/components/schemas/PrincipalModel__links_self'
        memberships:
          $ref: '#/components/schemas/PrincipalModel__links_memberships'
      required:
      - self
    PriorityCollectionModel_allOf__links_self_allOf_self:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          This priority collection

          **Resource**: PriorityCollectionModel
    PriorityCollectionModel_allOf__links_self:
      allOf:
      - $ref: '#/components/schemas/Link'
      - properties:
          self:
            $ref: '#/components/schemas/PriorityCollectionModel_allOf__links_self_allOf_self'
      readOnly: true
    PriorityCollectionModel_allOf__links:
      properties:
        self:
          $ref: '#/components/schemas/PriorityCollectionModel_allOf__links_self'
      required:
      - self
    PriorityCollectionModel_allOf__embedded:
      properties:
        elements:
          items:
            $ref: '#/components/schemas/PriorityModel'
          type: array
      required:
      - elements
    PriorityModel__links_self:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          This priority

          **Resource**: Priority
        readOnly: true
    PriorityModel__links:
      properties:
        self:
          $ref: '#/components/schemas/PriorityModel__links_self'
      required:
      - self
    ProjectCollectionModel_allOf__links_self:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          This project collection

          **Resource**: ProjectStorageCollectionModel
    ProjectCollectionModel_allOf__links_representations:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: A project collection representation in a specific file format.
    ProjectCollectionModel_allOf__links:
      properties:
        self:
          $ref: '#/components/schemas/ProjectCollectionModel_allOf__links_self'
        representations:
          items:
            $ref: '#/components/schemas/ProjectCollectionModel_allOf__links_representations'
          type: array
      required:
      - representations
      - self
    ProjectCollectionModel_allOf__embedded:
      properties:
        elements:
          items:
            $ref: '#/components/schemas/ProjectModel'
          type: array
      required:
      - elements
    ProjectModel_statusExplanation:
      allOf:
      - $ref: '#/components/schemas/Formattable'
      - description: A text detailing and explaining why the project has the reported
          status
    ProjectModel__links_update:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          Form endpoint that aids in updating this project

          # Conditions

          **Permission**: edit project
    ProjectModel__links_updateImmediately:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          Directly update this project

          # Conditions

          **Permission**: edit project
    ProjectModel__links_delete:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          Delete this project

          # Conditions

          **Permission**: admin
    ProjectModel__links_createWorkPackage:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          Form endpoint that aids in preparing and creating a work package

          # Conditions

          **Permission**: add work packages
    ProjectModel__links_createWorkPackageImmediately:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          Directly creates a work package in the project

          # Conditions

          **Permission**: add work packages
    ProjectModel__links_self:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          This project

          **Resource**: Project
    ProjectModel__links_categories:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          Categories available in this project

          **Resource**: Collection
    ProjectModel__links_types:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          Types available in this project

          **Resource**: Collection

          # Conditions

          **Permission**: view work packages or manage types
    ProjectModel__links_versions:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          Versions available in this project

          **Resource**: Collection

          # Conditions

          **Permission**: view work packages or manage versions
    ProjectModel__links_memberships:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          Memberships in the  project

          **Resource**: Collection

          # Conditions

          **Permission**: view members
    ProjectModel__links_workPackages:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          Work Packages of this project

          **Resource**: Collection
    ProjectModel__links_parent:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          Parent project of the project

          **Resource**: Project

          # Conditions

          **Permission** edit project
    ProjectModel__links_status:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          Denotes the status of the project, so whether the project is on track, at risk or is having trouble.

          **Resource**: ProjectStatus

          # Conditions

          **Permission** edit project
    ProjectModel__links_storages_inner:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          The link to a storage that is active for this project.

          **Resource**: Storage

          # Conditions

          **Permission**: view_file_links
    ProjectModel__links_projectStorages:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          The project storage collection of this project.

          **Resource**: Collection

          # Conditions

          **Permission**: view_file_links
    ProjectModel__links_ancestors_inner:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          The link to an ancestor project.

          **Resource**: Project
    ProjectModel__links:
      properties:
        update:
          $ref: '#/components/schemas/ProjectModel__links_update'
        updateImmediately:
          $ref: '#/components/schemas/ProjectModel__links_updateImmediately'
        delete:
          $ref: '#/components/schemas/ProjectModel__links_delete'
        createWorkPackage:
          $ref: '#/components/schemas/ProjectModel__links_createWorkPackage'
        createWorkPackageImmediately:
          $ref: '#/components/schemas/ProjectModel__links_createWorkPackageImmediately'
        self:
          $ref: '#/components/schemas/ProjectModel__links_self'
        categories:
          $ref: '#/components/schemas/ProjectModel__links_categories'
        types:
          $ref: '#/components/schemas/ProjectModel__links_types'
        versions:
          $ref: '#/components/schemas/ProjectModel__links_versions'
        memberships:
          $ref: '#/components/schemas/ProjectModel__links_memberships'
        workPackages:
          $ref: '#/components/schemas/ProjectModel__links_workPackages'
        parent:
          $ref: '#/components/schemas/ProjectModel__links_parent'
        status:
          $ref: '#/components/schemas/ProjectModel__links_status'
        storages:
          items:
            $ref: '#/components/schemas/ProjectModel__links_storages_inner'
          type: array
        projectStorages:
          $ref: '#/components/schemas/ProjectModel__links_projectStorages'
        ancestors:
          items:
            $ref: '#/components/schemas/ProjectModel__links_ancestors_inner'
          type: array
      required:
      - categories
      - memberships
      - self
      - types
      - versions
      - workPackages
    ProjectStorageCollectionModel_allOf__links_self:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          This file links collection

          **Resource**: ProjectStorageCollectionModel
    ProjectStorageCollectionModel_allOf__links:
      properties:
        self:
          $ref: '#/components/schemas/ProjectStorageCollectionModel_allOf__links_self'
      required:
      - self
    ProjectStorageCollectionModel_allOf__embedded:
      properties:
        elements:
          items:
            $ref: '#/components/schemas/ProjectStorageModel'
          type: array
      required:
      - elements
    ProjectStorageModel__links_self:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          This project storage.

          **Resource**: ProjectStorage
    ProjectStorageModel__links_creator:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          The user who created the project storage.

          **Resource**: User
    ProjectStorageModel__links_storage:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          The storage resource, that is linked to a project with this project storage.

          **Resource**: Storage
    ProjectStorageModel__links_project:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          The project resource, that is linked to a storage with this project storage.

          **Resource**: Project
    ProjectStorageModel__links_projectFolder:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          The directory on the storage that is used as a project folder.

          **Resource**: StorageFile

          # Conditions

          Only provided, if the `projectFolderMode` is `manual` or `automatic`.
    ProjectStorageModel__links_open:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: A link to OpenProject strorage.
    ProjectStorageModel__links_openWithConnectionEnsured:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          A link to OpenProject storage with making sure user has access to it.

          # Conditions

          If the storage has not been configured(oauth client is missing, for instance), then the link is null.
    ProjectStorageModel__links:
      properties:
        self:
          $ref: '#/components/schemas/ProjectStorageModel__links_self'
        creator:
          $ref: '#/components/schemas/ProjectStorageModel__links_creator'
        storage:
          $ref: '#/components/schemas/ProjectStorageModel__links_storage'
        project:
          $ref: '#/components/schemas/ProjectStorageModel__links_project'
        projectFolder:
          $ref: '#/components/schemas/ProjectStorageModel__links_projectFolder'
        open:
          $ref: '#/components/schemas/ProjectStorageModel__links_open'
        openWithConnectionEnsured:
          $ref: '#/components/schemas/ProjectStorageModel__links_openWithConnectionEnsured'
      required:
      - creator
      - project
      - self
      - storage
    QueryModel__links_star:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          Elevates the query to the status of 'starred'

          # Conditions

          **Permission**: save queries for own queries, manage public queries for public queries; Only present if query is not yet starred
        readOnly: true
    QueryModel__links_unstar:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          Removes the 'starred' status

          # Conditions

          **Permission**: save queries for own queries, manage public queries for public queries; Only present if query is starred
        readOnly: true
    QueryModel__links_update:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          Use the Form based process to verify the query before persisting

          # Conditions

          **Permission**: view work packages
        readOnly: true
    QueryModel__links_updateImmediately:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          Persist the query without using a Form based process for guidance

          # Conditions

          **Permission**: save queries for own queries, manage public queries for public queries;
        readOnly: true
    QueryModel__links:
      properties:
        star:
          $ref: '#/components/schemas/QueryModel__links_star'
        unstar:
          $ref: '#/components/schemas/QueryModel__links_unstar'
        update:
          $ref: '#/components/schemas/QueryModel__links_update'
        updateImmediately:
          $ref: '#/components/schemas/QueryModel__links_updateImmediately'
    Query_Filter_Instance_SchemaModel__links_self:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          This QueryFilterInstanceSchema (same as for schema)

          **Resource**: QueryFilterInstanceSchema
        readOnly: true
    Query_Filter_Instance_SchemaModel__links_filter:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          The filter for which this schema is specific

          **Resource**: Filter
        readOnly: true
    Query_Filter_Instance_SchemaModel__links:
      properties:
        self:
          $ref: '#/components/schemas/Query_Filter_Instance_SchemaModel__links_self'
        filter:
          $ref: '#/components/schemas/Query_Filter_Instance_SchemaModel__links_filter'
      required:
      - filter
      - self
    RelationModel__links_update:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          Updates the relation between two work packages via a form

          # Conditions

          **Permission**: manage work package relations
        readOnly: true
    RelationModel__links_updateImmediately:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          Updates the relation between two work packages

          # Conditions

          **Permission**: manage work package relations
        readOnly: true
    RelationModel__links_delete:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          Destroys the relation between the two work packages

          # Conditions

          **Permission**: manage work package relations
        readOnly: true
    RelationModel__links_self:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          This relation

          **Resource**: Relation

          # Conditions

          **Permission**: view work packages
        readOnly: true
    RelationModel__links_schema:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          The schema of this relation

          **Resource**: Schema
        readOnly: true
    RelationModel__links_from:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          The emanating work package

          **Resource**: WorkPackage

          # Conditions

          **Permission**: view work packages
        readOnly: true
    RelationModel__links_to:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          The work package the relation ends in

          **Resource**: WorkPackage

          # Conditions

          **Permission**: view work packages
        readOnly: true
    RelationModel__links:
      properties:
        update:
          $ref: '#/components/schemas/RelationModel__links_update'
        updateImmediately:
          $ref: '#/components/schemas/RelationModel__links_updateImmediately'
        delete:
          $ref: '#/components/schemas/RelationModel__links_delete'
        self:
          $ref: '#/components/schemas/RelationModel__links_self'
        schema:
          $ref: '#/components/schemas/RelationModel__links_schema'
        from:
          $ref: '#/components/schemas/RelationModel__links_from'
        to:
          $ref: '#/components/schemas/RelationModel__links_to'
      required:
      - from
      - schema
      - self
      - to
    RevisionModel_message:
      allOf:
      - $ref: '#/components/schemas/Formattable'
      - description: The commit message of the revision
        readOnly: true
    RevisionModel__links_self:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          This revision

          **Resource**: Revision
        readOnly: true
    RevisionModel__links_project:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          The project to which the revision belongs

          **Resource**: Project
        readOnly: true
    RevisionModel__links_author:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          The user that added this revision, if the authorName was mapped to a user in OpenProject

          **Resource**: User
        readOnly: true
    RevisionModel__links_showRevision:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          A URL to the repository view (outside APIv3) showing this revision

          **Resource**: -
        readOnly: true
    RevisionModel__links:
      properties:
        self:
          $ref: '#/components/schemas/RevisionModel__links_self'
        project:
          $ref: '#/components/schemas/RevisionModel__links_project'
        author:
          $ref: '#/components/schemas/RevisionModel__links_author'
        showRevision:
          $ref: '#/components/schemas/RevisionModel__links_showRevision'
      required:
      - project
      - self
      - showRevision
    RoleModel__links_self:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          This role

          **Resource**: Role
        readOnly: true
    RoleModel__links:
      properties:
        self:
          $ref: '#/components/schemas/RoleModel__links_self'
      required:
      - self
    RootModel__links_self:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          This root information object.

          **Resource**: Root
    RootModel__links_configuration:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          The configuration resource.

          **Resource**: Configuration
    RootModel__links_memberships:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          The collection of memberships.

          **Resource**: Collection
    RootModel__links_priorities:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          The collection of priorities.

          **Resource**: Collection
    RootModel__links_relations:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          The collection of relations.

          **Resource**: Collection
    RootModel__links_statuses:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          The collection of statuses.

          **Resource**: Collection
    RootModel__links_time_entries:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          The collection of time entries.

          **Resource**: Collection
    RootModel__links_types:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          The collection of types.

          **Resource**: Collection
    RootModel__links_user:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          The current user resource.

          **Resource**: User
    RootModel__links_userPreferences:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          The current user preferences resource.

          **Resource**: UserPreferences
    RootModel__links_workPackages:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          The work package collection.

          **Resource**: Collection
    RootModel__links:
      properties:
        self:
          $ref: '#/components/schemas/RootModel__links_self'
        configuration:
          $ref: '#/components/schemas/RootModel__links_configuration'
        memberships:
          $ref: '#/components/schemas/RootModel__links_memberships'
        priorities:
          $ref: '#/components/schemas/RootModel__links_priorities'
        relations:
          $ref: '#/components/schemas/RootModel__links_relations'
        statuses:
          $ref: '#/components/schemas/RootModel__links_statuses'
        time_entries:
          $ref: '#/components/schemas/RootModel__links_time_entries'
        types:
          $ref: '#/components/schemas/RootModel__links_types'
        user:
          $ref: '#/components/schemas/RootModel__links_user'
        userPreferences:
          $ref: '#/components/schemas/RootModel__links_userPreferences'
        workPackages:
          $ref: '#/components/schemas/RootModel__links_workPackages'
      required:
      - configuration
      - memberships
      - priorities
      - relations
      - self
      - statuses
      - time_entries
      - types
      - user
      - userPreferences
      - workPackages
    SchemaModel__links_self:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          This schema

          **Resource**: Schema
    SchemaModel__links:
      properties:
        self:
          $ref: '#/components/schemas/SchemaModel__links_self'
    StatusCollectionModel_allOf__links_self:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          This file links collection

          **Resource**: StatusCollectionModel
    StatusCollectionModel_allOf__links:
      properties:
        self:
          $ref: '#/components/schemas/StatusCollectionModel_allOf__links_self'
      required:
      - self
    StatusCollectionModel_allOf__embedded:
      properties:
        elements:
          items:
            $ref: '#/components/schemas/StatusModel'
          type: array
      required:
      - elements
    StatusModel__links_self:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          This status

          **Resource**: Status
        readOnly: true
    StatusModel__links:
      properties:
        self:
          $ref: '#/components/schemas/StatusModel__links_self'
      required:
      - self
    StorageCollectionModel_allOf__links_self:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          This storage collection

          **Resource**: StorageCollectionReadModel
    StorageCollectionModel_allOf__links:
      properties:
        self:
          $ref: '#/components/schemas/StorageCollectionModel_allOf__links_self'
      required:
      - self
    StorageCollectionModel_allOf__embedded:
      properties:
        elements:
          items:
            $ref: '#/components/schemas/StorageReadModel'
          type: array
      required:
      - elements
    StorageFileModel_allOf__links_self:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          Not provided

          **Resource**: urn:openproject-org:api:v3:storages:storage_file:no_link_provided
    StorageFileModel_allOf__links:
      properties:
        self:
          $ref: '#/components/schemas/StorageFileModel_allOf__links_self'
      required:
      - self
    StorageFilesModel_parent:
      allOf:
      - $ref: '#/components/schemas/StorageFileModel'
      - description: File of the currently selected parent directory.
    StorageFileUploadLinkModel__links_self:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          The resource link of the upload link resource.

          As the upload link is a temporal object, and cannot be retrieved again, the
          self link usually is `urn:openproject-org:api:v3:storages:upload_link:no_link_provided`.

          **Resource**: UploadLink
    StorageFileUploadLinkModel__links_destination:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          The direct upload link.

          **Resource**: N/A
    StorageFileUploadLinkModel__links:
      properties:
        self:
          $ref: '#/components/schemas/StorageFileUploadLinkModel__links_self'
        destination:
          $ref: '#/components/schemas/StorageFileUploadLinkModel__links_destination'
      required:
      - destination
      - self
    StorageReadModel__embedded:
      properties:
        oauthApplication:
          $ref: '#/components/schemas/OAuthApplicationReadModel'
        oauthClientCredentials:
          $ref: '#/components/schemas/OAuthClientCredentialsReadModel'
      required:
      - oauthApplication
      - oauthClientCredentials
    StorageReadModel__links_self:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          This storage resource. Contains the user defined storage name as title.

          **Resource**: Storage
    StorageReadModel__links_type:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          The urn of the storage type. Currently only nextcloud storages are supported.

          **Resource**: N/A
    StorageReadModel__links_origin:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          Web URI of the storage instance.

          **Resource**: N/A
    StorageReadModel__links_open:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          URI of the file storage location, from where the user usually starts browsing files.

          **Resource**: N/A
    StorageReadModel__links_authorizationState:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          The urn of the storage connection state. Can be one of:

          - urn:openproject-org:api:v3:storages:authorization:Connected
          - urn:openproject-org:api:v3:storages:authorization:FailedAuthorization
          - urn:openproject-org:api:v3:storages:authorization:Error

          **Resource**: N/A
    StorageReadModel__links_authorize:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          The link to the starting point of the authorization cycle for a configured storage provider.

          # Conditions

          `authorizationState` is:

          - urn:openproject-org:api:v3:storages:authorization:FailedAuthorization

          **Resource**: N/A
    StorageReadModel__links_oauthApplication:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          The OAuth 2 provider application linked to the storage.

          # Conditions

          - User has role `admin`

          **Resource**: OAuthApplication
    StorageReadModel__links_oauthClientCredentials:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          The OAuth 2 credentials resource linked to the storage.

          # Conditions

          - User has role `admin`

          **Resource**: OAuthClientCredentials
    StorageReadModel__links:
      properties:
        self:
          $ref: '#/components/schemas/StorageReadModel__links_self'
        type:
          $ref: '#/components/schemas/StorageReadModel__links_type'
        origin:
          $ref: '#/components/schemas/StorageReadModel__links_origin'
        open:
          $ref: '#/components/schemas/StorageReadModel__links_open'
        authorizationState:
          $ref: '#/components/schemas/StorageReadModel__links_authorizationState'
        authorize:
          $ref: '#/components/schemas/StorageReadModel__links_authorize'
        oauthApplication:
          $ref: '#/components/schemas/StorageReadModel__links_oauthApplication'
        oauthClientCredentials:
          $ref: '#/components/schemas/StorageReadModel__links_oauthClientCredentials'
      required:
      - authorizationState
      - open
      - origin
      - self
      - type
    StorageWriteModel__links_origin:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          The storage's host URL.

          **Resource**: N/A
    StorageWriteModel__links_type:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          The urn of the storage type. Currently only nextcloud storages are supported.

          - urn:openproject-org:api:v3:storages:Nextcloud

          **Resource**: N/A
    StorageWriteModel__links:
      properties:
        origin:
          $ref: '#/components/schemas/StorageWriteModel__links_origin'
        type:
          $ref: '#/components/schemas/StorageWriteModel__links_type'
      required:
      - origin
      - type
    TimeEntryActivityModel__embedded:
      properties:
        projects:
          items:
            $ref: '#/components/schemas/ProjectModel'
          type: array
      required:
      - projects
    TimeEntryActivityModel__links_self:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          This time entry activity

          **Resource**: TimeEntriesActivity
    TimeEntryActivityModel__links_projects_inner:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          One of the projects the time entry is active in.

          **Resource**: Project
    TimeEntryActivityModel__links:
      properties:
        self:
          $ref: '#/components/schemas/TimeEntryActivityModel__links_self'
        projects:
          items:
            $ref: '#/components/schemas/TimeEntryActivityModel__links_projects_inner'
          type: array
      required:
      - projects
      - self
    TimeEntryCollectionModel_allOf__links_self:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          This time entry collection

          **Resource**: TimeEntryCollectionModel
    TimeEntryCollectionModel_allOf__links:
      properties:
        self:
          $ref: '#/components/schemas/TimeEntryCollectionModel_allOf__links_self'
      required:
      - self
    TimeEntryCollectionModel_allOf__embedded:
      properties:
        elements:
          items:
            $ref: '#/components/schemas/TimeEntryModel'
          type: array
      required:
      - elements
    TimeEntryModel_comment:
      allOf:
      - $ref: '#/components/schemas/Formattable'
      - description: A comment to the time entry
    TimeEntryModel__links_self:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          This time entry

          **Resource**: TimeEntry
    TimeEntryModel__links_updateImmediately:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          Directly perform edits on this time entry

          # Conditions

          **Permission**: 'edit time entries' or 'edit own time entries' if the time entry belongs to the user
    TimeEntryModel__links_update:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          Form endpoint that aids in preparing and performing edits on a TimeEntry

          # Conditions

          **Permission**: 'edit time entries' or 'edit own time entries' if the time entry belongs to the user
    TimeEntryModel__links_delete:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          Delete this time entry

          # Conditions

          **Permission**: 'edit time entries' or 'edit own time entries' if the time entry belongs to the user
    TimeEntryModel__links_schema:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          The time entry schema

          **Resource**: Schema
    TimeEntryModel__links_project:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          The project the time entry is bundled in. The project might be different from the work package's project once the workPackage is moved.

          **Resource**: Project
    TimeEntryModel__links_workPackage:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          The work package the time entry is created on

          **Resource**: WorkPackage
    TimeEntryModel__links_user:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          The user the time entry tracks expenditures for

          **Resource**: User
    TimeEntryModel__links_activity:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          The time entry activity the time entry is categorized as

          **Resource**: TimeEntriesActivity
    TimeEntryModel__links:
      properties:
        self:
          $ref: '#/components/schemas/TimeEntryModel__links_self'
        updateImmediately:
          $ref: '#/components/schemas/TimeEntryModel__links_updateImmediately'
        update:
          $ref: '#/components/schemas/TimeEntryModel__links_update'
        delete:
          $ref: '#/components/schemas/TimeEntryModel__links_delete'
        schema:
          $ref: '#/components/schemas/TimeEntryModel__links_schema'
        project:
          $ref: '#/components/schemas/TimeEntryModel__links_project'
        workPackage:
          $ref: '#/components/schemas/TimeEntryModel__links_workPackage'
        user:
          $ref: '#/components/schemas/TimeEntryModel__links_user'
        activity:
          $ref: '#/components/schemas/TimeEntryModel__links_activity'
      required:
      - activity
      - project
      - self
      - user
    TypeModel__links_self:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          This type

          **Resource**: Type
        readOnly: true
    TypeModel__links:
      properties:
        self:
          $ref: '#/components/schemas/TypeModel__links_self'
      required:
      - self
    Types_by_ProjectModel_allOf__links_self:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          The types collection

          **Resource**: TypesCollection
        readOnly: true
    Types_by_ProjectModel_allOf__links:
      properties:
        self:
          $ref: '#/components/schemas/Types_by_ProjectModel_allOf__links_self'
      required:
      - self
    Types_by_ProjectModel_allOf__embedded_elements:
      allOf:
      - $ref: '#/components/schemas/TypeModel'
      - description: Collection of Types
    Types_by_ProjectModel_allOf__embedded:
      properties:
        elements:
          items:
            $ref: '#/components/schemas/Types_by_ProjectModel_allOf__embedded_elements'
          type: array
    UserCollectionModel_allOf__links_self:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          This user collection

          **Resource**: Collection
    UserCollectionModel_allOf__links:
      properties:
        self:
          $ref: '#/components/schemas/UserCollectionModel_allOf__links_self'
      required:
      - self
    UserCollectionModel_allOf__embedded:
      properties:
        elements:
          items:
            $ref: '#/components/schemas/UserModel'
          type: array
      required:
      - elements
    UserModel_allOf__links_showUser:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          A relative path to show the user in the web application.

          # Condition

          - User is not a new record
          - User is not `locked`
    UserModel_allOf__links_updateImmediately:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          A link to update the user resource.

          # Conditions

          - `admin`
    UserModel_allOf__links_lock:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          Restrict the user from logging in and performing any actions.

          # Conditions

          - User is not locked
          - `admin`
    UserModel_allOf__links_unlock:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          Allow a locked user to login and act again.

          # Conditions

          - User is not locked
          - `admin`
    UserModel_allOf__links_delete:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          Permanently remove a user from the instance

          # Conditions

          either:
            - `admin`
            - Setting `users_deletable_by_admin` is set
          or:
            - User is self
            - Setting `users_deletable_by_self` is set
    UserModel_allOf__links_authSource:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          Permanently remove a user from the instance

          # Conditions

          - LDAP authentication configured
          - `admin`
    UserModel_allOf__links:
      properties:
        showUser:
          $ref: '#/components/schemas/UserModel_allOf__links_showUser'
        updateImmediately:
          $ref: '#/components/schemas/UserModel_allOf__links_updateImmediately'
        lock:
          $ref: '#/components/schemas/UserModel_allOf__links_lock'
        unlock:
          $ref: '#/components/schemas/UserModel_allOf__links_unlock'
        delete:
          $ref: '#/components/schemas/UserModel_allOf__links_delete'
        authSource:
          $ref: '#/components/schemas/UserModel_allOf__links_authSource'
    ValuesPropertyModel__links_self:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          This key - value pair.

          **Resource**: Storage
    ValuesPropertyModel__links_schema:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          The schema describing the key - value pair.

          **Resource**: Schema
    ValuesPropertyModel__links:
      properties:
        self:
          $ref: '#/components/schemas/ValuesPropertyModel__links_self'
        schema:
          $ref: '#/components/schemas/ValuesPropertyModel__links_schema'
      required:
      - schema
      - self
    VersionModel__links_update:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          Form endpoint that aids in preparing and performing edits on the version

          # Conditions

          **Permission**: manage versions
        readOnly: true
    VersionModel__links_updateImmediately:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          Directly perform edits on the version

          # Conditions

          **Permission**: manage versions
        readOnly: true
    VersionModel__links_self:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          This version

          **Resource**: Version
        readOnly: true
    VersionModel__links_definingProject:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          The project to which the version belongs

          **Resource**: Project
        readOnly: true
    VersionModel__links_availableInProjects:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          Projects where this version can be used

          **Resource**: Projects
        readOnly: true
    VersionModel__links:
      properties:
        update:
          $ref: '#/components/schemas/VersionModel__links_update'
        updateImmediately:
          $ref: '#/components/schemas/VersionModel__links_updateImmediately'
        self:
          $ref: '#/components/schemas/VersionModel__links_self'
        definingProject:
          $ref: '#/components/schemas/VersionModel__links_definingProject'
        availableInProjects:
          $ref: '#/components/schemas/VersionModel__links_availableInProjects'
      required:
      - availableInProjects
      - self
    Versions_by_ProjectModel_allOf__links_self:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          The versions collection

          **Resource**: VersionsCollection
        readOnly: true
    Versions_by_ProjectModel_allOf__links:
      properties:
        self:
          $ref: '#/components/schemas/Versions_by_ProjectModel_allOf__links_self'
      required:
      - self
    Versions_by_ProjectModel_allOf__embedded_elements:
      allOf:
      - $ref: '#/components/schemas/VersionModel'
      - description: Collection of Versions
    Versions_by_ProjectModel_allOf__embedded:
      properties:
        elements:
          items:
            $ref: '#/components/schemas/Versions_by_ProjectModel_allOf__embedded_elements'
          type: array
    WatchersModel_allOf__links_self:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          The watcher list

          **Resource**: WatchersModel
        readOnly: true
    WatchersModel_allOf__links:
      properties:
        self:
          $ref: '#/components/schemas/WatchersModel_allOf__links_self'
      required:
      - self
    WatchersModel_allOf__embedded_elements:
      allOf:
      - $ref: '#/components/schemas/UserModel'
      - description: Collection of Users
    WatchersModel_allOf__embedded:
      properties:
        elements:
          items:
            $ref: '#/components/schemas/WatchersModel_allOf__embedded_elements'
          type: array
    WeekDayCollectionModel_allOf__links_self:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          This week days collection

          **Resource**: WeekDayCollectionModel
    WeekDayCollectionModel_allOf__links:
      properties:
        self:
          $ref: '#/components/schemas/WeekDayCollectionModel_allOf__links_self'
      required:
      - self
    WeekDayCollectionModel_allOf__embedded:
      properties:
        elements:
          description: The array of week days.
          items:
            $ref: '#/components/schemas/WeekDayModel'
          maxItems: 7
          minItems: 7
          type: array
      required:
      - elements
    WeekDayCollectionWriteModel__embedded_elements_inner:
      allOf:
      - $ref: '#/components/schemas/WeekDayWriteModel'
      - properties:
          _links:
            allOf:
            - $ref: '#/components/schemas/WeekDaySelfLinkModel'
        required:
        - _links
    WeekDayCollectionWriteModel__embedded:
      properties:
        elements:
          description: The array of week days.
          items:
            $ref: '#/components/schemas/WeekDayCollectionWriteModel__embedded_elements_inner'
          maxItems: 7
          minItems: 1
          type: array
      required:
      - elements
    WeekDaySelfLinkModel_self:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          This week day resource link.

          **Resource**: WeekDay
        readOnly: true
    Wiki_PageModel__links_addAttachment:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          Attach a file to the wiki page

          # Conditions

          **Permission**: edit wiki page
        readOnly: true
    Wiki_PageModel__links:
      properties:
        addAttachment:
          $ref: '#/components/schemas/Wiki_PageModel__links_addAttachment'
    Work_PackageModel_description:
      allOf:
      - $ref: '#/components/schemas/Formattable'
      - description: The work package description
    Work_PackageModel__links_addAttachment:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          Attach a file to the WP

          # Conditions

          **Permission**: edit work package
        readOnly: true
    Work_PackageModel__links_addComment:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          Post comment to WP

          # Conditions

          **Permission**: add work package notes
        readOnly: true
    Work_PackageModel__links_addRelation:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          Adds a relation to this work package.

          # Conditions

          **Permission**: manage wp relations
        readOnly: true
    Work_PackageModel__links_addWatcher:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          Add any user to WP watchers

          # Conditions

          **Permission**: add watcher
        readOnly: true
    Work_PackageModel__links_customActions_inner:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          A predefined action that can be applied to the work package.

          **Resource**: CustomAction
        readOnly: true
    Work_PackageModel__links_previewMarkup:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: Post markup (in markdown) here to receive an HTML-rendered response
        readOnly: true
    Work_PackageModel__links_removeWatcher:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          Remove any user from WP watchers

          # Conditions

          **Permission**: delete watcher
        readOnly: true
    Work_PackageModel__links_unwatch:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          Remove current user from WP watchers

          # Conditions

          logged in; watching
        readOnly: true
    Work_PackageModel__links_update:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          Form endpoint that aids in preparing and performing edits on a WP

          # Conditions

          **Permission**: edit work package
        readOnly: true
    Work_PackageModel__links_updateImmediately:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          Directly perform edits on a work package

          # Conditions

          **Permission**: edit work package
        readOnly: true
    Work_PackageModel__links_watch:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          Add current user to WP watchers

          # Conditions

          logged in; not watching
        readOnly: true
    Work_PackageModel__links_self:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          This work package

          **Resource**: WorkPackage
        readOnly: true
    Work_PackageModel__links_schema:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          The schema of this work package

          **Resource**: Schema
        readOnly: true
    Work_PackageModel__links_ancestors_inner:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          A visible ancestor work package of the current work package.

          **Resource**: WorkPackage

          # Conditions

          **Permission** view work packages
        readOnly: true
    Work_PackageModel__links_attachments:
      oneOf:
      - $ref: '#/components/schemas/Link'
      - items:
          $ref: '#/components/schemas/Link'
    Work_PackageModel__links_author:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          The person that created the work package

          **Resource**: User
        readOnly: true
    Work_PackageModel__links_assignee:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          The person that is intended to work on the work package

          **Resource**: User
    Work_PackageModel__links_availableWatchers:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          All users that can be added to the work package as watchers.

          **Resource**: User

          # Conditions

          **Permission** add work package watchers
        readOnly: true
    Work_PackageModel__links_budget:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          The budget this work package is associated to

          **Resource**: Budget

          # Conditions

          **Permission** view cost objects
    Work_PackageModel__links_category:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          The category of the work package

          **Resource**: Category
    Work_PackageModel__links_children_inner:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          A visible child work package of the current work package.

          **Resource**: WorkPackage

          # Conditions

          **Permission** view work packages
        readOnly: true
    Work_PackageModel__links_addFileLink:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          Add a file link to the work package

          # Conditions

          **Permission**: manage file links
    Work_PackageModel__links_fileLinks:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          Gets the file link collection of this work package

          # Conditions

          **Permission**: view file links
    Work_PackageModel__links_parent:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          Parent work package

          **Resource**: WorkPackage
    Work_PackageModel__links_priority:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          The priority of the work package

          **Resource**: Priority
    Work_PackageModel__links_project:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          The project to which the work package belongs

          **Resource**: Project
    Work_PackageModel__links_responsible:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          The person that is responsible for the overall outcome

          **Resource**: User
    Work_PackageModel__links_relations:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          Relations this work package is involved in

          **Resource**: Relation

          # Conditions

          **Permission** view work packages
        readOnly: true
    Work_PackageModel__links_revisions:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          Revisions that are referencing the work package

          **Resource**: Revision

          # Conditions

          **Permission** view changesets
        readOnly: true
    Work_PackageModel__links_status:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          The current status of the work package

          **Resource**: Status
    Work_PackageModel__links_timeEntries:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          All time entries logged on the work package. Please note that this is a link to an HTML resource for now and as such, the link is subject to change.

          **Resource**: N/A

          # Conditions

          **Permission** view time entries
        readOnly: true
    Work_PackageModel__links_type:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          The type of the work package

          **Resource**: Type
    Work_PackageModel__links_version:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          The version associated to the work package

          **Resource**: Version
    Work_PackageModel__links_watchers:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          All users that are currently watching this work package

          **Resource**: Collection

          # Conditions

          **Permission** view work package watchers
        readOnly: true
    Work_PackageModel__links:
      properties:
        addAttachment:
          $ref: '#/components/schemas/Work_PackageModel__links_addAttachment'
        addComment:
          $ref: '#/components/schemas/Work_PackageModel__links_addComment'
        addRelation:
          $ref: '#/components/schemas/Work_PackageModel__links_addRelation'
        addWatcher:
          $ref: '#/components/schemas/Work_PackageModel__links_addWatcher'
        customActions:
          items:
            $ref: '#/components/schemas/Work_PackageModel__links_customActions_inner'
          type: array
        previewMarkup:
          $ref: '#/components/schemas/Work_PackageModel__links_previewMarkup'
        removeWatcher:
          $ref: '#/components/schemas/Work_PackageModel__links_removeWatcher'
        unwatch:
          $ref: '#/components/schemas/Work_PackageModel__links_unwatch'
        update:
          $ref: '#/components/schemas/Work_PackageModel__links_update'
        updateImmediately:
          $ref: '#/components/schemas/Work_PackageModel__links_updateImmediately'
        watch:
          $ref: '#/components/schemas/Work_PackageModel__links_watch'
        self:
          $ref: '#/components/schemas/Work_PackageModel__links_self'
        schema:
          $ref: '#/components/schemas/Work_PackageModel__links_schema'
        ancestors:
          items:
            $ref: '#/components/schemas/Work_PackageModel__links_ancestors_inner'
          type: array
        attachments:
          $ref: '#/components/schemas/Work_PackageModel__links_attachments'
        author:
          $ref: '#/components/schemas/Work_PackageModel__links_author'
        assignee:
          $ref: '#/components/schemas/Work_PackageModel__links_assignee'
        availableWatchers:
          $ref: '#/components/schemas/Work_PackageModel__links_availableWatchers'
        budget:
          $ref: '#/components/schemas/Work_PackageModel__links_budget'
        category:
          $ref: '#/components/schemas/Work_PackageModel__links_category'
        children:
          items:
            $ref: '#/components/schemas/Work_PackageModel__links_children_inner'
          type: array
        addFileLink:
          $ref: '#/components/schemas/Work_PackageModel__links_addFileLink'
        fileLinks:
          $ref: '#/components/schemas/Work_PackageModel__links_fileLinks'
        parent:
          $ref: '#/components/schemas/Work_PackageModel__links_parent'
        priority:
          $ref: '#/components/schemas/Work_PackageModel__links_priority'
        project:
          $ref: '#/components/schemas/Work_PackageModel__links_project'
        responsible:
          $ref: '#/components/schemas/Work_PackageModel__links_responsible'
        relations:
          $ref: '#/components/schemas/Work_PackageModel__links_relations'
        revisions:
          $ref: '#/components/schemas/Work_PackageModel__links_revisions'
        status:
          $ref: '#/components/schemas/Work_PackageModel__links_status'
        timeEntries:
          $ref: '#/components/schemas/Work_PackageModel__links_timeEntries'
        type:
          $ref: '#/components/schemas/Work_PackageModel__links_type'
        version:
          $ref: '#/components/schemas/Work_PackageModel__links_version'
        watchers:
          $ref: '#/components/schemas/Work_PackageModel__links_watchers'
    Work_Package_activitiesModel_allOf__embedded:
      properties:
        elements:
          items:
            $ref: '#/components/schemas/ActivityModel'
          type: array
    Work_PackagesModel_allOf__links_self:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: |-
          The work package collection

          **Resource**: WorkPackageCollection
        readOnly: true
    Work_PackagesModel_allOf__links:
      properties:
        self:
          $ref: '#/components/schemas/Work_PackagesModel_allOf__links_self'
      required:
      - self
    Work_PackagesModel_allOf__embedded:
      properties:
        elements:
          items:
            $ref: '#/components/schemas/Work_PackageModel'
          type: array
      required:
      - elements
    WorkPackagePatchModel__links:
      properties:
        assignee:
          $ref: '#/components/schemas/Work_PackageModel__links_assignee'
        budget:
          $ref: '#/components/schemas/Work_PackageModel__links_budget'
        category:
          $ref: '#/components/schemas/Work_PackageModel__links_category'
        parent:
          $ref: '#/components/schemas/Work_PackageModel__links_parent'
        priority:
          $ref: '#/components/schemas/Work_PackageModel__links_priority'
        project:
          $ref: '#/components/schemas/Work_PackageModel__links_project'
        responsible:
          $ref: '#/components/schemas/Work_PackageModel__links_responsible'
        status:
          $ref: '#/components/schemas/Work_PackageModel__links_status'
        type:
          $ref: '#/components/schemas/Work_PackageModel__links_type'
        version:
          $ref: '#/components/schemas/Work_PackageModel__links_version'
    ActivityModel__links:
      properties:
        self:
          $ref: '#/components/schemas/Link'
        workPackage:
          $ref: '#/components/schemas/Link'
        user:
          $ref: '#/components/schemas/Link'
    UserPreferencesModel__links:
      properties:
        self:
          $ref: '#/components/schemas/Link'
        user:
          $ref: '#/components/schemas/Link'
        updateImmediately:
          $ref: '#/components/schemas/Link'
  securitySchemes:
    BasicAuth:
      scheme: basic
      type: http
